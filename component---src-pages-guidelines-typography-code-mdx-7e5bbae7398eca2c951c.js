"use strict";(self.webpackChunkcarbondesignsystem=self.webpackChunkcarbondesignsystem||[]).push([[595593],{901261:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return s},default:function(){return h}});var a=n(145987),o=(n(667294),n(603905)),l=n(503624);const i=["components"],s={},p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},r=p("PageDescription"),d=p("InlineNotification"),c=p("Row"),y=p("Column"),m=p("ResourceCard"),u=p("MdxIcon"),k={_frontmatter:s},g=l.Z;function h(e){let{components:t}=e,n=(0,a.Z)(e,i);return(0,o.kt)(g,Object.assign({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(r,{mdxType:"PageDescription"},(0,o.kt)("p",null,"Type is a core part of any offering and critical to how brands express and\ncommunicate throughout any experience. Use the Carbon type package to leverage\nIBM Plex and create effective typography across your products more easily.")),(0,o.kt)(d,{mdxType:"InlineNotification"},(0,o.kt)("p",null,"If you’re using ",(0,o.kt)("inlineCode",{parentName:"p"},"@carbon/react"),", you probably don’t need need to install the\ntype package separately. See our ",(0,o.kt)("a",{parentName:"p",href:"/developing/frameworks/react/"},"Carbon React"),"\nguide to start building.")),(0,o.kt)("h2",null,"Usage"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@carbon/type")," package enables you to use typography from the IBM Design\nLanguage, including the type scale and fonts, along with typography design\ntokens from the Carbon Design System. It also comes with opinionated defaults\nfor type styles on common elements like ",(0,o.kt)("inlineCode",{parentName:"p"},"h1"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"h2"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"p"),", etc."),(0,o.kt)("p",null,"You can use this package by writing the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scss"},"@use '@carbon/type';\n// Include type reset\n@include type.reset();\n\n// Include default type styles, targets h1, h2, h3, etc\n@include type.default-type();\n\n// Include utility classes for type-related properties\n@include type.type-classes();\n\n.selector {\n  // Include a type style\n  @include type.style('productive-heading-01');\n}\n")),(0,o.kt)("h3",null,"Type classes"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"type-classes")," mixin will output a collection of utility CSS that you can\nuse to style a given HTML element with type-related styles."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scss"},"@mixin type-classes;\n")),(0,o.kt)("p",null,"In particular, you can use the following classes:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Class"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},".cds--type-{font-family}")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Set the ",(0,o.kt)("inlineCode",{parentName:"td"},"font-family")," property for the given font. This can include ",(0,o.kt)("inlineCode",{parentName:"td"},"mono"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"sans"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"sans-condensed"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"sans-arabic"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"sans-devanagari"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"sans-hebrew"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"sans-jp"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"sans-kr"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"sans-thai-looped"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"sans-thai"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"serif"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},".cds--type-{font-weight}")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Set the ",(0,o.kt)("inlineCode",{parentName:"td"},"font-weight")," property")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},".cds--type-italic")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Set the ",(0,o.kt)("inlineCode",{parentName:"td"},"font-style")," property to ",(0,o.kt)("inlineCode",{parentName:"td"},"italic"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},".cds--type-{token}")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Style the HTML element with the given type token")))),(0,o.kt)("h3",null,"Type styles"),(0,o.kt)("p",null,"Instead of using a type scale, ",(0,o.kt)("inlineCode",{parentName:"p"},"@carbon/type")," provides tokens that represent\nwhat we call type styles. These tokens have a variety of properties for styling\nhow text is rendered on a page."),(0,o.kt)("p",null,"You can find a full reference of the type styles that are available on the\n",(0,o.kt)("a",{parentName:"p",href:"https://carbondesignsystem.com/guidelines/typography/type-sets"},"Carbon Design System website"),"\n."),(0,o.kt)("p",null,"You can include a token in your Sass file by writing:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scss"},"@use '@carbon/type';\n\n@include type.type-style('productive-heading-01');\n```                                                                                                                                                              |\n\n### Reset\n\nAn optional type reset is provided under the `type.reset()` mixin. You can\ninclude this mixin by writing the following in your Sass file:\n\n```scss\n@use '@carbon/type';\n\n@include type.reset();\n")),(0,o.kt)("p",null,"This reset sets some top-level properties on ",(0,o.kt)("inlineCode",{parentName:"p"},"html")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"body"),", namely\n",(0,o.kt)("inlineCode",{parentName:"p"},"font-size"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"font-family"),", and some ",(0,o.kt)("inlineCode",{parentName:"p"},"text-rendering")," options. We also map the\n",(0,o.kt)("inlineCode",{parentName:"p"},"strong")," tag to the semibold font weight."),(0,o.kt)("h3",null,"Type scale"),(0,o.kt)("p",null,"A type scale is provided through the ",(0,o.kt)("inlineCode",{parentName:"p"},"$type-scale")," variable and corresponding\n",(0,o.kt)("inlineCode",{parentName:"p"},"type-scale")," function and mixin. However, for specifying type styles, the\nrecommendation is to use ",(0,o.kt)("a",{parentName:"p",href:"#type-styles"},"type styles")," ."),(0,o.kt)("p",null,"If you are looking to use the type scale, you can include all the scale-related\nutilities and variables by writing the following in your Sass file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scss"},"@use '@carbon/type';\n")),(0,o.kt)("p",null,"You can access a specific step in the type scale by using the ",(0,o.kt)("inlineCode",{parentName:"p"},"type-scale"),"\nfunction:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scss"},"@use '@carbon/type';\n\n.my-selector {\n  font-size: type.type-scale(1);\n}\n")),(0,o.kt)("h2",null,"Resources"),(0,o.kt)(c,{className:"resource-card-group",mdxType:"Row"},(0,o.kt)(y,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(m,{subTitle:"Carbon type package",href:"https://github.com/carbon-design-system/carbon/blob/v10/packages/type",mdxType:"ResourceCard"},(0,o.kt)(u,{name:"bee",mdxType:"MdxIcon"}))),(0,o.kt)(y,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(m,{subTitle:"Type package demo",href:"https://carbon-elements.netlify.app/type/examples/preview/",mdxType:"ResourceCard"},(0,o.kt)(u,{name:"bee",mdxType:"MdxIcon"})))))}h.isMDXComponent=!0}}]);