{"componentChunkName":"component---src-pages-components-progress-bar-usage-mdx","path":"/components/progress-bar/usage/","result":{"pageContext":{"frontmatter":{"title":"Progress bar","description":"A progress bar provides feedback about the duration and progression of a process.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/progress-bar/usage.mdx","titleType":"prepend","MdxNode":{"id":"6d73a860-649e-51bb-8621-484652d225ce","children":[],"parent":"875c4a0b-eab1-5807-b385-ad678304891a","internal":{"content":"---\ntitle: Progress bar\ndescription:\n  A progress bar provides feedback about the duration and progression of a\n  process.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport localVideo from './videos/progress-bar-usage-4.mp4';\nimport localPoster from './images/progress-bar-usage-4.png';\n\nimport localVideo1 from './videos/progress-bar-usage-5.mp4';\nimport localPoster1 from './images/progress-bar-usage-5.png';\n\nimport localVideo2 from './videos/progress-bar-usage-11.mp4';\nimport localPoster2 from './images/progress-bar-usage-11.png';\n\nimport localVideo3 from './videos/progress-bar-usage-17.mp4';\nimport localPoster3 from './images/progress-bar-usage-17.png';\n\nimport localVideo4 from './videos/progress-bar-usage-18.mp4';\nimport localPoster4 from './images/progress-bar-usage-18.png';\n\nimport localVideo5 from './videos/progress-bar-usage-21.mp4';\nimport localPoster5 from './images/progress-bar-usage-21.png';\n\n<PageDescription>\n\nA progress bar provides feedback about the duration and progression of a\nprocess, such as a download, file transfer, or installation, to indicate how\nlong a user will be waiting.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Variants</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Content</AnchorLink>\n<AnchorLink>Universal behaviors</AnchorLink>\n<AnchorLink>Modifiers</AnchorLink>\n<AnchorLink>Accessibility</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nA progress bar indicates that the user's request has been received and the\napplication is making progress toward completing the requested action. Progress\nbars inform users about the status of ongoing processes, the estimated time of\nhow long a process will take, or if a request is being executed.\n\n<Row>\n<Column colLg={12}>\n\n![Progress bar hero image](images/progress-bar-usage-1.png)\n\n</Column>\n</Row>\n\n## Live demo\n\n<StorybookDemo\n  themeSelector\n  url=\"https://react.carbondesignsystem.com\"\n  variants={[\n    {\n      label: 'Default',\n      variant: 'components-progressbar--default',\n    },\n    {\n      label: 'Example',\n      variant: 'components-progressbar--example',\n    },\n    {\n      label: 'Indeterminate',\n      variant: 'components-progressbar--indeterminate',\n    },\n  ]}\n/>\n\n#### When to use\n\n- For a long operation or a process that can take a considerable or unknown\n  amount of time\n- When the process can be described with quantitative information, such as a\n  percentage\n- To visually show the progression of a system operation such as downloading,\n  uploading, loading data, submitting a form, or saving updates\n- To convey that data is being requested, transferred, or processed\n\n#### When not to use\n\n- When the load time is expected to display expanded information, use\n  [skeleton states](/patterns/loading-pattern/#skeleton-states) instead\n- When manual user actions are required to progress, use a\n  [progress indicator](/components/progress-indicator/usage) instead\n- When the progress is determined by user actions such as tutorials completed,\n  or storage space, rather than system actions\n- If the process takes less than 5 seconds to load, use\n  [loading](/components/loading/usage) instead.\n\n## Variants\n\nA progress bar can either be determinate or indeterminate. The determinate\nvariant is visualized as a track on which a bar fills up from left to right\nrepresenting the progress. The indeterminate variant is visualized as a track on\nwhich a bar is moving along in constant speed, repeating over time.\n\n| Variant                                                                    | Purpose                                                                                                                                                                                                                          |\n| -------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --- |\n| [Determinate](Determinate)                                                 | Use determinate progress bars where there is clear information about the progression — they convey exact and qualitative information about the progression.                                                                      |     |\n| [Indeterminate](/components/progress-bar/usage#indeterminate-progress-bar) | Use indeterminate progress bars where there is unclear information about the progression — they convey that users’ request, action, or data is being processed at the moment without indicating how long the activity will take. |\n\n<Row>\n<Column colLg={4}>\n\n![Determinate progress bars fill from 0 to 100%.](images/progress-bar-usage-2.gif)\n\n<Caption>\n  Determinate progress bars fill from 0 to 100%.\n</Caption>\n</Column>\n\n<Column colLg={4}>\n\n![Indeterminate progress bars move along a fixed track continually until the process is complete.](images/progress-bar-usage-3.gif)\n\n<Caption>\n  Indeterminate progress bars move along a fixed track continually until the process is complete.\n</Caption>\n</Column>\n</Row>\n\n## Determinate progress bar\n\nDeterminate progress bars are used when the loading progress can be tracked and\ntranslated into a bar indicator which fills the track from 0% to 100% and never\ndecreases in value or resets.\n\nUse a determinate progress bar when the progress can be calculated against a\nspecific goal. For example, when downloading a file of a known size.\n\n## Indeterminate progress bar\n\nIndeterminate progress bars are used when the loading progress is unknown or the\namount of wait time can't be calculated.\n\nOnce triggered, the bar indicator will quickly and repeatably move from left to\nright (Carbon reserves back and forth motions for\n[skeletons](/patterns/loading-pattern/#skeleton-states)), while data is being\ngathered during the first stages of the load. In this scenario, a percentage\nvalue would not be present. This bar may change to a determinate indicator if\nenough information is gathered to calculate the load completion. The final\ndeterminate stage of the load is used to visually indicate the completion of the\ntask to the user.\n\n<Row>\n  <Column colLg={8}>\n    <Video src={localVideo1} poster={localPoster1} />\n  </Column>\n</Row>\n\n### Progress status\n\nIt's best to give the user transparency about the process which usually leads to\nincreased trust in the software or platform. However, it may not be possible to\nprovide progress estimation in certain cases. If progress data is not available,\nan indeterminate progress bar can be used.\n\nAs a more concrete set of examples, there are generally three different major\nprogressions of a system operation: downloading, uploading, and local\nprocessing.\n\n#### Downloading\n\nFor downloading actions, it's usually possible to get a value of progress and\nupdate it in real time for a determinate progress bar. Depending on the\ninformation reported from a data source, time remaining could be estimated based\non how much has been downloaded so far over a time period.\n\n#### Uploading\n\nUpload actions may be unable to report real time progress status depending on\nthe data source and API configuration. However, always strive to provide users\nthe determinate value whenever it's possible to inform them about the process.\n\n#### Data processing\n\nData processing refers to manipulations of data to produce meaningful\ninformation. This can include currency exchange, file generation, data\nreformatting, or similar operations. Depending on the operation, time estimated\nor cycles to complete processing could be used to populate a determinate\nprogress bar.\n\n## Formatting\n\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![Progress bar anatomy](images/progress-bar-usage-6.png)\n\n</Column>\n</Row>\n\n1. **Label:** The text describes the process that the progress bar refers to.\n   The label can be visually hidden, but must be defined in order to be\n   accessible.\n2. **Helper text (optional, except for error):** Assistive text to show\n   additional information about the process taking place. For determinate, the\n   text is usually a percentage, fraction, ratio, or numeric value showing\n   progression. Such values are not applicable when a progress bar is\n   indeterminate. A progress bar that reaches an error state must convey the\n   error in the helper text.\n3. **Track:** The static area that the bar indicator moves on top of and acts as\n   a fixed visual reference of what the total length and duration of the process\n   could be.\n4. **Bar indicator:** Indicates how much the process has progressed.\n5. **Status icon:** Indicates the state of the progress bar, either in error or\n   success state.\n\n### Sizing\n\n#### Height\n\nThe progress bar is offered in two different sizes—big (8px) and small (4px).\nThe big progress bar height is typically used when there is large amounts of\nspace on a page. The small progress bar height is commonly used when space is\nrestricted and can be placed within cards, data tables, or side panels.\n\n<Row>\n<Column colLg={8}>\n\n![Progress bar sizes](images/progress-bar-usage-7.png)\n\n</Column>\n</Row>\n\n#### Width\n\nThe width of a progress bar can vary based on the content. The minimum width of\na progress bar is 48px and keep its width to a maximum of six columns when\npossible. If the progress bar width is too long, it can reduce readability.\nDon't increase the progress bar length to fill the entire width of a window or\napplication.\n\n<DoDontRow>\n\n  <DoDont type=\"do\" caption=\"Do keep a width within six columns.\">\n\n![Do keep a width within six columns.](images/progress-bar-usage-8.png)\n\n  </DoDont>\n  <DoDont type=\"dont\" caption=\"Do not exceed a width of six columns.\">\n\n![Do not exceed a width of six columns.](images/progress-bar-usage-9.png)\n\n  </DoDont>\n</DoDontRow>\n\n### Text alignment\n\nText alignment depends on the context and area given. Progress bar can have\nthree ways for text alignment: default, inline, and indent. Indent alignment\nshould only be used inside containers, tiles, or side panels which the progress\nbar will extend to the edges.\n\n<Row>\n<Column colLg={8}>\n\n![Progress bar alignments](images/progress-bar-usage-10.png)\n\n<Caption>A few common examples of text alignment for progress bars</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={8}>\n\n![Progress bar alignments](images/progress-bar-usage-22.png)\n\n</Column>\n</Row>\n\n| Text alignment | Use case                                  |\n| -------------- | ----------------------------------------- |\n| Default        | Full page, cards, dialogs                 |\n| Inline         | Data table                                |\n| Indent         | Side panels, cards (usually on dashboard) |\n\n#### Text placement\n\nLabels should always be placed above the progress bar for readability, and\nhelper text below or beside. Avoid placing text inside the progress bar\nindicator or track. This visual could cause clutter and inconsistency in text\nalignment. Meanwhile, placing the text far away from the progress bar could\ncause confusion in the context.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do place text close to the progress bar.\">\n\n![Do place text inline with the progress bar.](images/progress-bar-usage-12.png)\n\n  </DoDont>\n  <DoDont type=\"dont\" caption=\"Do not embed text into the progress bar.\">\n\n![Do not place the label far away from the progress bar](images/progress-bar-usage-13.png)\n\n  </DoDont>\n</DoDontRow>\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do place text close to the progress bar.\">\n\n![Do place the label close to the progress bar](images/progress-bar-usage-14.png)\n\n  </DoDont>\n  <DoDont type=\"dont\" caption=\"Do not place text far away from the progress bar.\">\n\n![Do not place the label far away from the progress bar](images/progress-bar-usage-15.png)\n\n  </DoDont>\n</DoDontRow>\n\n#### Internationalization (RTL)\n\nFor RTL (right-to-left) languages, the layout of the progress bar is mirrored\nfor both determinate and indeterminate options. The label is right-aligned, the\nvalue is left-aligned, and the fill progresses from right to left. Keep in mind\nthat the placement of the percent sign differs depending on the locale.\n\n<Row>\n  <Column colLg={8}>\n    <Video src={localVideo2} poster={localPoster2} />\n  </Column>\n</Row>\n\n## Content\n\nDeterminate and indeterminate progress bars both have a label and an optional\nhelper text. However, the indeterminate can’t provide the exact, quantitative\ninformation about the progression in the optional helper text.\n\n#### Labels\n\n- Labels inform users what information the progress bar is processing.\n- Keep the label short and concise by limiting it to a few words or a single\n  line of text.\n- Label text should never change as the progress bar is loading. It also does\n  not need to be updated when the process ends, since the success or error\n  information is provided by the bar indicator color and an icon, along with any\n  helper text.\n\n#### Helper text\n\n- Helper text is used to show additional information about the process taking\n  place.\n- Common use cases of helper text for a progress bar can either be a generic\n  phrase, for example “Fetching assets…”, or it can indicate an exact amount of\n  something to be completed, for example \"42/256 items\".\n- When indicating a loading percentage, the percentage number should count up as\n  the bar progresses.\n\n### Further guidance\n\nFor further content guidance, see Carbon's\n[content guidelines]([https://www.carbondesignsystem.com/guidelines/content/overview/]).\n\n## Universal behaviors\n\n### States\n\nThere are three states for the progress bar: active, success, and error. These\nstates also apply on both indeterminate and determinate progress bars. After the\nprocess completes successfully or unsuccesfully, a progress bar can either\nremain persistent as confirmation or validation, or it can be automatically\ndismissed depending on what is most suitable for the use case.\n\n<Row>\n<Column colLg={8}>\n\n![Progress bar states](images/progress-bar-usage-16.png)\n\n</Column>\n</Row>\n\n#### Active\n\nThe active loading state, represented by an animated blue bar indicator, conveys\nthat the action is still in progress.\n\n#### Success\n\nThe success loading state, conveyed by a full-width green progress bar and\ncheckmark icon, indicates that the action completed successfully.\n\n#### Error\n\nThe error loading state indicates that the action did not successfully complete.\nIf an error occurs, an inline notification or error handling within the form\nshould appear. As soon as a process fails, the indicator bar’s progress spans\nfull width, turns red, and remains visible. A failed icon is also shown.\n\n<Row>\n<Column colLg={8}>\n\n<Video src={localVideo3} poster={localPoster3} />\n\n<Caption>\n  The example shows the progress bar with error remains persistent as\n  confirmation inside the image tile.\n</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={8}>\n\n<Video src={localVideo4} poster={localPoster4} />\n\n<Caption>\n  The example shows the progress bar is automatically dismissed once it’s done\n  uploading.\n</Caption>\n\n</Column>\n</Row>\n\n### Interactions\n\n#### Part of a page\n\nWhile the progress bar is processing information on part of a page, you can\nstill interact with other elements on the page. When the progress bar finishes\nprocessing it can either remain persistant on the page for confirmation or\nautomatically dismiss itself depending on the use case.\n\n<Row>\n<Column colLg={12}>\n\n![Progress bar as a part of a page](images/progress-bar-usage-19.png)\n\n<Caption>\n  The example shows the progress bar is active and seperated from other\n  interactive elements.\n</Caption>\n\n</Column>\n</Row>\n\n#### Inside a container\n\nWhile the progress bar is processing information that could affect multiple\npieces of content within a container, such as a card, depending on the use case,\nthe whole container should become inactive until processing has been completed\nor the specific section within the container being processed should become\ninactive until processing has been completed. The user should be able to\ninteract with the rest of the container or page that is unaffected by the\nprogress bar.\n\n<Row>\n<Column colLg={8}>\n\n![Progress bar inside a container](images/progress-bar-usage-20.png)\n\n<Caption>\n  The example shows the 'View task' action button is disabled inside the 'Tasks'\n  container while the progress bar is active.\n</Caption>\n\n</Column>\n</Row>\n\n## Modifiers\n\n#### Transitions\n\nAn indeterminate bar can change to a determinate indicator (finishing from left\nto right) when enough information is gathered to end the load animation.\n\n<Row>\n  <Column colLg={8}>\n    <Video src={localVideo5} poster={localPoster5} />\n  </Column>\n</Row>\n\n## Accessibility\n\n- The loading component is implemented using the ARIA 1.1 progressbar pattern.\n  For determinate progress bar, it outputs an ARIA `role=\"progressbar\"` and uses\n  `aria-valuemin`, `aria-valuemax`, and `aria-valuenow` to convey the loaded\n  percentage to screen reader users.\n\n- If the progress bar shows the loading of a specific part or region of the\n  application, set `aria-busy=\"true\"` and `aria-describedby=\"[progressbar-id]\"`\n  on the related element to ensure assistive technologies can correctly convey\n  this relation to the user.\n\n- Only hide the label when it is absolute clear to the user which process the\n  progress bar represents. Note that you are still required to pass an\n  appropriate label which will be read by screen readers.\n\n## Related\n\n#### Components\n\n- [Loading](/components/loading/usage)\n- [Inline loading](/components/inline-loading/usage)\n- [Progress indicator](/components/progress-indicator/usage)\n\n#### Pattern\n\n- [Loading: skeleton states](https://carbondesignsystem.com/patterns/loading-pattern/#skeleton-states)\n\n## References\n\n- Accessible Rich Internet Applications Working Group,\n  [“progressbar” role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_progressbar_role),\n  (W3C, 2017)\n- Katie Sherwin,\n  [Progress Indicators Make a Slow System Less Insufferable](https://www.nngroup.com/articles/progress-indicators/)\n  (Nielsen Norman Group, 2001)\n- Jakob Nielsen,\n  [Response Times: The 3 Important Limits (Nielsen Norman Group](https://www.nngroup.com/articles/response-times-3-important-limits/),\n  (Nielsen Norman Group, 1993)\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","type":"Mdx","contentDigest":"9be16745b54e755ef470cb576b9bf9ef","owner":"gatsby-plugin-mdx","counter":4980},"frontmatter":{"title":"Progress bar","description":"A progress bar provides feedback about the duration and progression of a process.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Progress bar\ndescription:\n  A progress bar provides feedback about the duration and progression of a\n  process.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport localVideo from './videos/progress-bar-usage-4.mp4';\nimport localPoster from './images/progress-bar-usage-4.png';\n\nimport localVideo1 from './videos/progress-bar-usage-5.mp4';\nimport localPoster1 from './images/progress-bar-usage-5.png';\n\nimport localVideo2 from './videos/progress-bar-usage-11.mp4';\nimport localPoster2 from './images/progress-bar-usage-11.png';\n\nimport localVideo3 from './videos/progress-bar-usage-17.mp4';\nimport localPoster3 from './images/progress-bar-usage-17.png';\n\nimport localVideo4 from './videos/progress-bar-usage-18.mp4';\nimport localPoster4 from './images/progress-bar-usage-18.png';\n\nimport localVideo5 from './videos/progress-bar-usage-21.mp4';\nimport localPoster5 from './images/progress-bar-usage-21.png';\n\n<PageDescription>\n\nA progress bar provides feedback about the duration and progression of a\nprocess, such as a download, file transfer, or installation, to indicate how\nlong a user will be waiting.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Variants</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Content</AnchorLink>\n<AnchorLink>Universal behaviors</AnchorLink>\n<AnchorLink>Modifiers</AnchorLink>\n<AnchorLink>Accessibility</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nA progress bar indicates that the user's request has been received and the\napplication is making progress toward completing the requested action. Progress\nbars inform users about the status of ongoing processes, the estimated time of\nhow long a process will take, or if a request is being executed.\n\n<Row>\n<Column colLg={12}>\n\n![Progress bar hero image](images/progress-bar-usage-1.png)\n\n</Column>\n</Row>\n\n## Live demo\n\n<StorybookDemo\n  themeSelector\n  url=\"https://react.carbondesignsystem.com\"\n  variants={[\n    {\n      label: 'Default',\n      variant: 'components-progressbar--default',\n    },\n    {\n      label: 'Example',\n      variant: 'components-progressbar--example',\n    },\n    {\n      label: 'Indeterminate',\n      variant: 'components-progressbar--indeterminate',\n    },\n  ]}\n/>\n\n#### When to use\n\n- For a long operation or a process that can take a considerable or unknown\n  amount of time\n- When the process can be described with quantitative information, such as a\n  percentage\n- To visually show the progression of a system operation such as downloading,\n  uploading, loading data, submitting a form, or saving updates\n- To convey that data is being requested, transferred, or processed\n\n#### When not to use\n\n- When the load time is expected to display expanded information, use\n  [skeleton states](/patterns/loading-pattern/#skeleton-states) instead\n- When manual user actions are required to progress, use a\n  [progress indicator](/components/progress-indicator/usage) instead\n- When the progress is determined by user actions such as tutorials completed,\n  or storage space, rather than system actions\n- If the process takes less than 5 seconds to load, use\n  [loading](/components/loading/usage) instead.\n\n## Variants\n\nA progress bar can either be determinate or indeterminate. The determinate\nvariant is visualized as a track on which a bar fills up from left to right\nrepresenting the progress. The indeterminate variant is visualized as a track on\nwhich a bar is moving along in constant speed, repeating over time.\n\n| Variant                                                                    | Purpose                                                                                                                                                                                                                          |\n| -------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --- |\n| [Determinate](Determinate)                                                 | Use determinate progress bars where there is clear information about the progression — they convey exact and qualitative information about the progression.                                                                      |     |\n| [Indeterminate](/components/progress-bar/usage#indeterminate-progress-bar) | Use indeterminate progress bars where there is unclear information about the progression — they convey that users’ request, action, or data is being processed at the moment without indicating how long the activity will take. |\n\n<Row>\n<Column colLg={4}>\n\n![Determinate progress bars fill from 0 to 100%.](images/progress-bar-usage-2.gif)\n\n<Caption>\n  Determinate progress bars fill from 0 to 100%.\n</Caption>\n</Column>\n\n<Column colLg={4}>\n\n![Indeterminate progress bars move along a fixed track continually until the process is complete.](images/progress-bar-usage-3.gif)\n\n<Caption>\n  Indeterminate progress bars move along a fixed track continually until the process is complete.\n</Caption>\n</Column>\n</Row>\n\n## Determinate progress bar\n\nDeterminate progress bars are used when the loading progress can be tracked and\ntranslated into a bar indicator which fills the track from 0% to 100% and never\ndecreases in value or resets.\n\nUse a determinate progress bar when the progress can be calculated against a\nspecific goal. For example, when downloading a file of a known size.\n\n## Indeterminate progress bar\n\nIndeterminate progress bars are used when the loading progress is unknown or the\namount of wait time can't be calculated.\n\nOnce triggered, the bar indicator will quickly and repeatably move from left to\nright (Carbon reserves back and forth motions for\n[skeletons](/patterns/loading-pattern/#skeleton-states)), while data is being\ngathered during the first stages of the load. In this scenario, a percentage\nvalue would not be present. This bar may change to a determinate indicator if\nenough information is gathered to calculate the load completion. The final\ndeterminate stage of the load is used to visually indicate the completion of the\ntask to the user.\n\n<Row>\n  <Column colLg={8}>\n    <Video src={localVideo1} poster={localPoster1} />\n  </Column>\n</Row>\n\n### Progress status\n\nIt's best to give the user transparency about the process which usually leads to\nincreased trust in the software or platform. However, it may not be possible to\nprovide progress estimation in certain cases. If progress data is not available,\nan indeterminate progress bar can be used.\n\nAs a more concrete set of examples, there are generally three different major\nprogressions of a system operation: downloading, uploading, and local\nprocessing.\n\n#### Downloading\n\nFor downloading actions, it's usually possible to get a value of progress and\nupdate it in real time for a determinate progress bar. Depending on the\ninformation reported from a data source, time remaining could be estimated based\non how much has been downloaded so far over a time period.\n\n#### Uploading\n\nUpload actions may be unable to report real time progress status depending on\nthe data source and API configuration. However, always strive to provide users\nthe determinate value whenever it's possible to inform them about the process.\n\n#### Data processing\n\nData processing refers to manipulations of data to produce meaningful\ninformation. This can include currency exchange, file generation, data\nreformatting, or similar operations. Depending on the operation, time estimated\nor cycles to complete processing could be used to populate a determinate\nprogress bar.\n\n## Formatting\n\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![Progress bar anatomy](images/progress-bar-usage-6.png)\n\n</Column>\n</Row>\n\n1. **Label:** The text describes the process that the progress bar refers to.\n   The label can be visually hidden, but must be defined in order to be\n   accessible.\n2. **Helper text (optional, except for error):** Assistive text to show\n   additional information about the process taking place. For determinate, the\n   text is usually a percentage, fraction, ratio, or numeric value showing\n   progression. Such values are not applicable when a progress bar is\n   indeterminate. A progress bar that reaches an error state must convey the\n   error in the helper text.\n3. **Track:** The static area that the bar indicator moves on top of and acts as\n   a fixed visual reference of what the total length and duration of the process\n   could be.\n4. **Bar indicator:** Indicates how much the process has progressed.\n5. **Status icon:** Indicates the state of the progress bar, either in error or\n   success state.\n\n### Sizing\n\n#### Height\n\nThe progress bar is offered in two different sizes—big (8px) and small (4px).\nThe big progress bar height is typically used when there is large amounts of\nspace on a page. The small progress bar height is commonly used when space is\nrestricted and can be placed within cards, data tables, or side panels.\n\n<Row>\n<Column colLg={8}>\n\n![Progress bar sizes](images/progress-bar-usage-7.png)\n\n</Column>\n</Row>\n\n#### Width\n\nThe width of a progress bar can vary based on the content. The minimum width of\na progress bar is 48px and keep its width to a maximum of six columns when\npossible. If the progress bar width is too long, it can reduce readability.\nDon't increase the progress bar length to fill the entire width of a window or\napplication.\n\n<DoDontRow>\n\n  <DoDont type=\"do\" caption=\"Do keep a width within six columns.\">\n\n![Do keep a width within six columns.](images/progress-bar-usage-8.png)\n\n  </DoDont>\n  <DoDont type=\"dont\" caption=\"Do not exceed a width of six columns.\">\n\n![Do not exceed a width of six columns.](images/progress-bar-usage-9.png)\n\n  </DoDont>\n</DoDontRow>\n\n### Text alignment\n\nText alignment depends on the context and area given. Progress bar can have\nthree ways for text alignment: default, inline, and indent. Indent alignment\nshould only be used inside containers, tiles, or side panels which the progress\nbar will extend to the edges.\n\n<Row>\n<Column colLg={8}>\n\n![Progress bar alignments](images/progress-bar-usage-10.png)\n\n<Caption>A few common examples of text alignment for progress bars</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={8}>\n\n![Progress bar alignments](images/progress-bar-usage-22.png)\n\n</Column>\n</Row>\n\n| Text alignment | Use case                                  |\n| -------------- | ----------------------------------------- |\n| Default        | Full page, cards, dialogs                 |\n| Inline         | Data table                                |\n| Indent         | Side panels, cards (usually on dashboard) |\n\n#### Text placement\n\nLabels should always be placed above the progress bar for readability, and\nhelper text below or beside. Avoid placing text inside the progress bar\nindicator or track. This visual could cause clutter and inconsistency in text\nalignment. Meanwhile, placing the text far away from the progress bar could\ncause confusion in the context.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do place text close to the progress bar.\">\n\n![Do place text inline with the progress bar.](images/progress-bar-usage-12.png)\n\n  </DoDont>\n  <DoDont type=\"dont\" caption=\"Do not embed text into the progress bar.\">\n\n![Do not place the label far away from the progress bar](images/progress-bar-usage-13.png)\n\n  </DoDont>\n</DoDontRow>\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do place text close to the progress bar.\">\n\n![Do place the label close to the progress bar](images/progress-bar-usage-14.png)\n\n  </DoDont>\n  <DoDont type=\"dont\" caption=\"Do not place text far away from the progress bar.\">\n\n![Do not place the label far away from the progress bar](images/progress-bar-usage-15.png)\n\n  </DoDont>\n</DoDontRow>\n\n#### Internationalization (RTL)\n\nFor RTL (right-to-left) languages, the layout of the progress bar is mirrored\nfor both determinate and indeterminate options. The label is right-aligned, the\nvalue is left-aligned, and the fill progresses from right to left. Keep in mind\nthat the placement of the percent sign differs depending on the locale.\n\n<Row>\n  <Column colLg={8}>\n    <Video src={localVideo2} poster={localPoster2} />\n  </Column>\n</Row>\n\n## Content\n\nDeterminate and indeterminate progress bars both have a label and an optional\nhelper text. However, the indeterminate can’t provide the exact, quantitative\ninformation about the progression in the optional helper text.\n\n#### Labels\n\n- Labels inform users what information the progress bar is processing.\n- Keep the label short and concise by limiting it to a few words or a single\n  line of text.\n- Label text should never change as the progress bar is loading. It also does\n  not need to be updated when the process ends, since the success or error\n  information is provided by the bar indicator color and an icon, along with any\n  helper text.\n\n#### Helper text\n\n- Helper text is used to show additional information about the process taking\n  place.\n- Common use cases of helper text for a progress bar can either be a generic\n  phrase, for example “Fetching assets…”, or it can indicate an exact amount of\n  something to be completed, for example \"42/256 items\".\n- When indicating a loading percentage, the percentage number should count up as\n  the bar progresses.\n\n### Further guidance\n\nFor further content guidance, see Carbon's\n[content guidelines]([https://www.carbondesignsystem.com/guidelines/content/overview/]).\n\n## Universal behaviors\n\n### States\n\nThere are three states for the progress bar: active, success, and error. These\nstates also apply on both indeterminate and determinate progress bars. After the\nprocess completes successfully or unsuccesfully, a progress bar can either\nremain persistent as confirmation or validation, or it can be automatically\ndismissed depending on what is most suitable for the use case.\n\n<Row>\n<Column colLg={8}>\n\n![Progress bar states](images/progress-bar-usage-16.png)\n\n</Column>\n</Row>\n\n#### Active\n\nThe active loading state, represented by an animated blue bar indicator, conveys\nthat the action is still in progress.\n\n#### Success\n\nThe success loading state, conveyed by a full-width green progress bar and\ncheckmark icon, indicates that the action completed successfully.\n\n#### Error\n\nThe error loading state indicates that the action did not successfully complete.\nIf an error occurs, an inline notification or error handling within the form\nshould appear. As soon as a process fails, the indicator bar’s progress spans\nfull width, turns red, and remains visible. A failed icon is also shown.\n\n<Row>\n<Column colLg={8}>\n\n<Video src={localVideo3} poster={localPoster3} />\n\n<Caption>\n  The example shows the progress bar with error remains persistent as\n  confirmation inside the image tile.\n</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={8}>\n\n<Video src={localVideo4} poster={localPoster4} />\n\n<Caption>\n  The example shows the progress bar is automatically dismissed once it’s done\n  uploading.\n</Caption>\n\n</Column>\n</Row>\n\n### Interactions\n\n#### Part of a page\n\nWhile the progress bar is processing information on part of a page, you can\nstill interact with other elements on the page. When the progress bar finishes\nprocessing it can either remain persistant on the page for confirmation or\nautomatically dismiss itself depending on the use case.\n\n<Row>\n<Column colLg={12}>\n\n![Progress bar as a part of a page](images/progress-bar-usage-19.png)\n\n<Caption>\n  The example shows the progress bar is active and seperated from other\n  interactive elements.\n</Caption>\n\n</Column>\n</Row>\n\n#### Inside a container\n\nWhile the progress bar is processing information that could affect multiple\npieces of content within a container, such as a card, depending on the use case,\nthe whole container should become inactive until processing has been completed\nor the specific section within the container being processed should become\ninactive until processing has been completed. The user should be able to\ninteract with the rest of the container or page that is unaffected by the\nprogress bar.\n\n<Row>\n<Column colLg={8}>\n\n![Progress bar inside a container](images/progress-bar-usage-20.png)\n\n<Caption>\n  The example shows the 'View task' action button is disabled inside the 'Tasks'\n  container while the progress bar is active.\n</Caption>\n\n</Column>\n</Row>\n\n## Modifiers\n\n#### Transitions\n\nAn indeterminate bar can change to a determinate indicator (finishing from left\nto right) when enough information is gathered to end the load animation.\n\n<Row>\n  <Column colLg={8}>\n    <Video src={localVideo5} poster={localPoster5} />\n  </Column>\n</Row>\n\n## Accessibility\n\n- The loading component is implemented using the ARIA 1.1 progressbar pattern.\n  For determinate progress bar, it outputs an ARIA `role=\"progressbar\"` and uses\n  `aria-valuemin`, `aria-valuemax`, and `aria-valuenow` to convey the loaded\n  percentage to screen reader users.\n\n- If the progress bar shows the loading of a specific part or region of the\n  application, set `aria-busy=\"true\"` and `aria-describedby=\"[progressbar-id]\"`\n  on the related element to ensure assistive technologies can correctly convey\n  this relation to the user.\n\n- Only hide the label when it is absolute clear to the user which process the\n  progress bar represents. Note that you are still required to pass an\n  appropriate label which will be read by screen readers.\n\n## Related\n\n#### Components\n\n- [Loading](/components/loading/usage)\n- [Inline loading](/components/inline-loading/usage)\n- [Progress indicator](/components/progress-indicator/usage)\n\n#### Pattern\n\n- [Loading: skeleton states](https://carbondesignsystem.com/patterns/loading-pattern/#skeleton-states)\n\n## References\n\n- Accessible Rich Internet Applications Working Group,\n  [“progressbar” role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_progressbar_role),\n  (W3C, 2017)\n- Katie Sherwin,\n  [Progress Indicators Make a Slow System Less Insufferable](https://www.nngroup.com/articles/progress-indicators/)\n  (Nielsen Norman Group, 2001)\n- Jakob Nielsen,\n  [Response Times: The 3 Important Limits (Nielsen Norman Group](https://www.nngroup.com/articles/response-times-3-important-limits/),\n  (Nielsen Norman Group, 1993)\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/progress-bar/usage.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}