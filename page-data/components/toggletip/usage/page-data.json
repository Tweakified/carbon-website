{"componentChunkName":"component---src-pages-components-toggletip-usage-mdx","path":"/components/toggletip/usage/","result":{"pageContext":{"frontmatter":{"title":"Toggletip","description":"Toggletips use the disclosure pattern to toggle the visibility of a popover. They display additional, hidden information upon the click of a UI trigger element and can contain interactive elements.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/toggletip/usage.mdx","titleType":"prepend","MdxNode":{"id":"56f1604b-ff32-521c-9d92-3325bc65d709","children":[],"parent":"e07ed8e2-666f-52f3-ab24-a8df3429fa47","internal":{"content":"---\ntitle: Toggletip\ndescription:\n  Toggletips use the disclosure pattern to toggle the visibility of a popover.\n  They display additional, hidden information upon the click of a UI trigger\n  element and can contain interactive elements.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport { Toggletip } from '@carbon/react';\n\n<PageDescription>\n\nToggletips use the disclosure pattern to toggle the visibility of a popover.\nThey display additional, hidden information upon the click of a UI trigger\nelement and can contain interactive elements.\n\n</PageDescription>\n\n<InlineNotification>\n\n**New in v11:** Toggletip should be used in place of tooltip if your content\nwill contain interactive elements. If it does not have any interactive content,\nconsider using [Tooltip](/components/tooltip/usage/) instead.\n\n</InlineNotification>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Content</AnchorLink>\n<AnchorLink>Behaviors</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nToggletips reveal supplemental content when a user clicks a button or another UI\nelement and remains actively open until a user dismisses it. A toggletip is\ncomprised of a UI trigger and the\n[popover component](/components/popover/usage/). Use the disclosure pattern to\ndesign supplemental content within the component. Toggletips can include a wide\nvariety of information and interactive elements as long as\n[accessibility requirements](https://www.ibm.com/able/requirements/requirements/)\nare maintained including focus order and ensuring all functionality is operable\nthrough a keyboard interface.\n\n<Row>\n<Column colLg={8}>\n\n![Overview of toggletip](images/toggle-tip-usage-1.png)\n\n</Column>\n</Row>\n\n#### Toggletips verses Tooltips\n\nToggletips and tooltips are similar visually and both contain a popover and\ninteractive trigger element. The two components differ in the way they are\ninvoked and dismissed and if the user must interact with the contents. A tooltip\nis exposed on `Hover` or `Focus` when you need to expose brief, supplemental\ninformation that is not interactive. A toggletip is used on `Click` and `Enter`\nwhen you need to expose interactive elements, such as button, that a user needs\nto interact with.\n\nThe exception here is that definition tooltip can be invoked on either `Hover`\nor `Click` depending on use case.\n\n### When to use\n\n- Use when an interactive element must be placed within the popover\n- Use for quick, in context editing\n- Use for filter panels that overlay content\n\n<Row>\n<Column colLg={8}>\n\n![Overview of when to use toggletips](images/toggle-tip-usage-2.png)\n\n</Column>\n</Row>\n\n<Caption>\n  The examples above are patterns. Carbon currently only supports the basic\n  toggletip outlined below. In the future, other toggletip styles will be\n  available.\n</Caption>\n\n### When to not use\n\nDon't use to present critical information or request required input needed to\ncomplete a workflow. Use the [modal component](/components/modal/usage/)\ninstead.\n\n## Live demo\n\n<StorybookDemo\n  themeSelector\n  url=\"https://react.carbondesignsystem.com\"\n  variants={[\n    {\n      label: 'Default',\n      variant: 'components-toggletip--default',\n    },\n  ]}\n/>\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![Toggletip anatomy](images/toggle-tip-usage-4.png)\n\n</Column>\n</Row>\n\n1. **UI trigger button:** Usually a button but as long as the trigger is\n   interactive, it can visually change its shape and size depending on the use\n   case.\n2. **Tip:** An indicator that is added to a popover container to help show the\n   relationship between the popover and where it was triggered from. Toggletips\n   can utilize no tip, caret tip, or tab tip types.\n3. **Content area:** Varies based on use case and follows disclosure guidelines.\n4. **Popover container:** Area that contains text and interactive elements.\n\n### Sizing\n\nThe width and height of a popover container can vary depending on the amount of\ncontent placed within it. We recommend to not exceed a popover width size of\nfour columns. Refer to the popover component for more specifications.\n\n<Row>\n<Column colLg={8}>\n\n![Toggletip sizing](images/toggle-tip-usage-5.png)\n\n</Column>\n</Row>\n\n### Placement\n\nToggletips can be used on various part of the UI including, but not limited to,\nheaders, data tables, side panels, modals, and read only cards. When active, the\ntoggletip popover may be positioned **top, bottom, left,** or **right** to the\nUI trigger.\n\n<Row>\n<Column colLg={8}>\n\n![Toggletip placement](images/toggle-tip-usage-6.png)\n\n</Column>\n</Row>\n\nPlacement of a popover in relation to the trigger depends on the type of popover\nused. Visit the popover component for specific guidelines for no tip, caret tip,\nand tab tip types.\n\n## Content\n\n### Main elements\n\nHeading, body, and footer content can vary based on your use case. To see\nexamples of content used within toggletips, visit the\n[disclosure pattern](/patterns/disclosures-pattern/).\n\nInteractive tooltips may contain rich text and other interactive elements like\nbuttons or links and must remain actively open until a user dismisses the\ntoggletip. Maintain accessibility requirements including focus order and ensure\nall functionality is operable through a keyboard interface.\n\n### Overflow content\n\nSince the toggletip uses the flexible popover component and disclosure pattern,\nscrolling is usually not needed. If scrolling is needed, in a dropdown like\nsituation for instance, then the body section should scroll vertically with the\nheader and footer remaining fixed in place if those elements are present. Do not\nscroll horizontally or let content bleed off the page.\n\n<Row>\n<Column colLg={8}>\n\n![Scrolling toggletip example](images/toggle-tip-usage-8.png)\n\n</Column>\n</Row>\n\n<Caption>\n  Example of when to scroll within a toggletip. This example is a pattern and is\n  currently not offered as a component.\n</Caption>\n\n### Further guidance\n\nFor further content guidance, see Carbon's\n[content guidelines](/guidelines/content/general)).\n\n## Behaviors\n\n### States\n\nThe toggletip component has two states—active and inactive. By default, the\ntoggletip is hidden and inactive. Toggletips are displayed on `Click` and\n`Enter`.\n\n### Interactions\n\n#### Mouse\n\nToggletips are triggered on `Click` and is dismissed by clicking anywhere\noutside the toggletip's active popover or UI trigger.\n\n#### Keyboard\n\nUsers can trigger a toggletip by pressing `Enter` or `Space` while the trigger\nelement has focus. Users can dismiss a toggletip by pressing `Escape`. For\nadditional keyboard interactions, see the accessibility tab.\n\n#### Screen readers\n\nVoiceOver: Users can trigger a toggletip by pressing `Enter` or `Space` while\nthe trigger element has focus.\n\nJAWS: Users can trigger a toggletip by pressing `Enter` or `Space` while the\ntrigger element has focus.\n\nNVDA: Users can trigger a toggletip by pressing `Enter` or `Space` while the\ntrigger element has focus.\n\n## Related\n\n#### Popover\n\n[Popovers](/components/popover/usage/) are used as a base layer in some of our\ncomponents like tooltips, overflow menus, and dropdown menus. For further\nguidance, see Carbon’s popover component.\n\n#### Disclosure\n\n[Disclosures](/patterns/disclosures-pattern/) use popovers as a base layer.\nDisclosures are comprised of a popover container, text, and interactive\nelements. Interactive elements are kept in the tab order of the page. Further\nguidance on the disclosure pattern coming soon.\n\n#### Tooltip\n\n[Tooltips](/components/tooltip/usage/) display additional information upon hover\nor focus. The information included should be contextual, helpful, and\nnonessential while providing that extra ability to communicate and give clarity\nto a user.\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","type":"Mdx","contentDigest":"052d192f1aad43e801dd72f6aebdc383","owner":"gatsby-plugin-mdx","counter":4698},"frontmatter":{"title":"Toggletip","description":"Toggletips use the disclosure pattern to toggle the visibility of a popover. They display additional, hidden information upon the click of a UI trigger element and can contain interactive elements.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Toggletip\ndescription:\n  Toggletips use the disclosure pattern to toggle the visibility of a popover.\n  They display additional, hidden information upon the click of a UI trigger\n  element and can contain interactive elements.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport { Toggletip } from '@carbon/react';\n\n<PageDescription>\n\nToggletips use the disclosure pattern to toggle the visibility of a popover.\nThey display additional, hidden information upon the click of a UI trigger\nelement and can contain interactive elements.\n\n</PageDescription>\n\n<InlineNotification>\n\n**New in v11:** Toggletip should be used in place of tooltip if your content\nwill contain interactive elements. If it does not have any interactive content,\nconsider using [Tooltip](/components/tooltip/usage/) instead.\n\n</InlineNotification>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Content</AnchorLink>\n<AnchorLink>Behaviors</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nToggletips reveal supplemental content when a user clicks a button or another UI\nelement and remains actively open until a user dismisses it. A toggletip is\ncomprised of a UI trigger and the\n[popover component](/components/popover/usage/). Use the disclosure pattern to\ndesign supplemental content within the component. Toggletips can include a wide\nvariety of information and interactive elements as long as\n[accessibility requirements](https://www.ibm.com/able/requirements/requirements/)\nare maintained including focus order and ensuring all functionality is operable\nthrough a keyboard interface.\n\n<Row>\n<Column colLg={8}>\n\n![Overview of toggletip](images/toggle-tip-usage-1.png)\n\n</Column>\n</Row>\n\n#### Toggletips verses Tooltips\n\nToggletips and tooltips are similar visually and both contain a popover and\ninteractive trigger element. The two components differ in the way they are\ninvoked and dismissed and if the user must interact with the contents. A tooltip\nis exposed on `Hover` or `Focus` when you need to expose brief, supplemental\ninformation that is not interactive. A toggletip is used on `Click` and `Enter`\nwhen you need to expose interactive elements, such as button, that a user needs\nto interact with.\n\nThe exception here is that definition tooltip can be invoked on either `Hover`\nor `Click` depending on use case.\n\n### When to use\n\n- Use when an interactive element must be placed within the popover\n- Use for quick, in context editing\n- Use for filter panels that overlay content\n\n<Row>\n<Column colLg={8}>\n\n![Overview of when to use toggletips](images/toggle-tip-usage-2.png)\n\n</Column>\n</Row>\n\n<Caption>\n  The examples above are patterns. Carbon currently only supports the basic\n  toggletip outlined below. In the future, other toggletip styles will be\n  available.\n</Caption>\n\n### When to not use\n\nDon't use to present critical information or request required input needed to\ncomplete a workflow. Use the [modal component](/components/modal/usage/)\ninstead.\n\n## Live demo\n\n<StorybookDemo\n  themeSelector\n  url=\"https://react.carbondesignsystem.com\"\n  variants={[\n    {\n      label: 'Default',\n      variant: 'components-toggletip--default',\n    },\n  ]}\n/>\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![Toggletip anatomy](images/toggle-tip-usage-4.png)\n\n</Column>\n</Row>\n\n1. **UI trigger button:** Usually a button but as long as the trigger is\n   interactive, it can visually change its shape and size depending on the use\n   case.\n2. **Tip:** An indicator that is added to a popover container to help show the\n   relationship between the popover and where it was triggered from. Toggletips\n   can utilize no tip, caret tip, or tab tip types.\n3. **Content area:** Varies based on use case and follows disclosure guidelines.\n4. **Popover container:** Area that contains text and interactive elements.\n\n### Sizing\n\nThe width and height of a popover container can vary depending on the amount of\ncontent placed within it. We recommend to not exceed a popover width size of\nfour columns. Refer to the popover component for more specifications.\n\n<Row>\n<Column colLg={8}>\n\n![Toggletip sizing](images/toggle-tip-usage-5.png)\n\n</Column>\n</Row>\n\n### Placement\n\nToggletips can be used on various part of the UI including, but not limited to,\nheaders, data tables, side panels, modals, and read only cards. When active, the\ntoggletip popover may be positioned **top, bottom, left,** or **right** to the\nUI trigger.\n\n<Row>\n<Column colLg={8}>\n\n![Toggletip placement](images/toggle-tip-usage-6.png)\n\n</Column>\n</Row>\n\nPlacement of a popover in relation to the trigger depends on the type of popover\nused. Visit the popover component for specific guidelines for no tip, caret tip,\nand tab tip types.\n\n## Content\n\n### Main elements\n\nHeading, body, and footer content can vary based on your use case. To see\nexamples of content used within toggletips, visit the\n[disclosure pattern](/patterns/disclosures-pattern/).\n\nInteractive tooltips may contain rich text and other interactive elements like\nbuttons or links and must remain actively open until a user dismisses the\ntoggletip. Maintain accessibility requirements including focus order and ensure\nall functionality is operable through a keyboard interface.\n\n### Overflow content\n\nSince the toggletip uses the flexible popover component and disclosure pattern,\nscrolling is usually not needed. If scrolling is needed, in a dropdown like\nsituation for instance, then the body section should scroll vertically with the\nheader and footer remaining fixed in place if those elements are present. Do not\nscroll horizontally or let content bleed off the page.\n\n<Row>\n<Column colLg={8}>\n\n![Scrolling toggletip example](images/toggle-tip-usage-8.png)\n\n</Column>\n</Row>\n\n<Caption>\n  Example of when to scroll within a toggletip. This example is a pattern and is\n  currently not offered as a component.\n</Caption>\n\n### Further guidance\n\nFor further content guidance, see Carbon's\n[content guidelines](/guidelines/content/general)).\n\n## Behaviors\n\n### States\n\nThe toggletip component has two states—active and inactive. By default, the\ntoggletip is hidden and inactive. Toggletips are displayed on `Click` and\n`Enter`.\n\n### Interactions\n\n#### Mouse\n\nToggletips are triggered on `Click` and is dismissed by clicking anywhere\noutside the toggletip's active popover or UI trigger.\n\n#### Keyboard\n\nUsers can trigger a toggletip by pressing `Enter` or `Space` while the trigger\nelement has focus. Users can dismiss a toggletip by pressing `Escape`. For\nadditional keyboard interactions, see the accessibility tab.\n\n#### Screen readers\n\nVoiceOver: Users can trigger a toggletip by pressing `Enter` or `Space` while\nthe trigger element has focus.\n\nJAWS: Users can trigger a toggletip by pressing `Enter` or `Space` while the\ntrigger element has focus.\n\nNVDA: Users can trigger a toggletip by pressing `Enter` or `Space` while the\ntrigger element has focus.\n\n## Related\n\n#### Popover\n\n[Popovers](/components/popover/usage/) are used as a base layer in some of our\ncomponents like tooltips, overflow menus, and dropdown menus. For further\nguidance, see Carbon’s popover component.\n\n#### Disclosure\n\n[Disclosures](/patterns/disclosures-pattern/) use popovers as a base layer.\nDisclosures are comprised of a popover container, text, and interactive\nelements. Interactive elements are kept in the tab order of the page. Further\nguidance on the disclosure pattern coming soon.\n\n#### Tooltip\n\n[Tooltips](/components/tooltip/usage/) display additional information upon hover\nor focus. The information included should be contextual, helpful, and\nnonessential while providing that extra ability to communicate and give clarity\nto a user.\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/toggletip/usage.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}