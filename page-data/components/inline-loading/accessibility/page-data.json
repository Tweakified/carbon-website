{"componentChunkName":"component---src-pages-components-inline-loading-accessibility-mdx","path":"/components/inline-loading/accessibility/","result":{"pageContext":{"frontmatter":{"title":"Inline loading","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/inline-loading/accessibility.mdx","titleType":"prepend","MdxNode":{"id":"c1c99788-c059-54b6-bac6-177dc4dd3c6f","children":[],"parent":"67edf530-924d-512d-a4f0-985d980e4eda","internal":{"content":"---\ntitle: Inline loading\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<PageDescription>\n\nNo accessibility annotations are needed for inline loading components, but keep\nthese considerations in mind if you are modifying Carbon or creating a custom\ncomponent.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via keyboard. Carbon also incorporates other\naccessibility considerations, some of which are described below.\n\n### Keyboard interaction\n\nThe inline loading component is not keyboard operable; however, when inline\nloading is in an active state, it may temporarily replace or disable an\nassociated component. For instance, if inline loading is showing the result of a\nbutton action, relevant input controls as well as other actions may be disabled\nand inoperable until the loading state changes to either error or complete.\n\n<Row>\n<Column colLg={8}>\n\n![example of Cancel button in disabled state while the Submit button is replaced by inline loading icon and \"Submitting\" message](images/inline-loading-accessibility-1.png)\n\n<Caption>\n  Inline loading components are not interactive, but may temporarily disable\n  dependent components.\n</Caption>\n\n</Column>\n</Row>\n\n### Labeling and states\n\nWhere there is displayed text for inline loading, Carbon provides the text as\nthe status to assistive technologies like screen readers. Where there is no\ntext, Carbon provides a text equivalent (“loading”) for the loading symbol.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Inline loading text is provided to assistive technologies.\">\n\n![a loading icon with a text message of \"Submitting...\"](images/inline-loading-accessibility-2.png)\n\n  </DoDont>\n  <DoDont type=\"do\" caption=\"Where there is no text, Carbon provides a text equivalent for the loading symbol.\">\n\n![An input with a loading symbol, showing the alt text of \"loading](images/inline-loading-accessibility-3.png)\n\n  </DoDont>\n</DoDontRow>\n\n## Development considerations\n\nKeep these considerations in mind if you are modifying Carbon or creating a\ncustom component.\n\n- Carbon uses an `aria-live` region set to “polite” to surface inline loading\n  text messages, where they are used.\n- Where no text is displayed for inline loading, Carbon uses the SVG title of\n  the status icon to surface the status (“active”, “finished”, “error”) to\n  assistive technologies.\n","type":"Mdx","contentDigest":"8c1f2776ff69f4b5a46e2655aebf0047","owner":"gatsby-plugin-mdx","counter":4821},"frontmatter":{"title":"Inline loading","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Inline loading\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<PageDescription>\n\nNo accessibility annotations are needed for inline loading components, but keep\nthese considerations in mind if you are modifying Carbon or creating a custom\ncomponent.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via keyboard. Carbon also incorporates other\naccessibility considerations, some of which are described below.\n\n### Keyboard interaction\n\nThe inline loading component is not keyboard operable; however, when inline\nloading is in an active state, it may temporarily replace or disable an\nassociated component. For instance, if inline loading is showing the result of a\nbutton action, relevant input controls as well as other actions may be disabled\nand inoperable until the loading state changes to either error or complete.\n\n<Row>\n<Column colLg={8}>\n\n![example of Cancel button in disabled state while the Submit button is replaced by inline loading icon and \"Submitting\" message](images/inline-loading-accessibility-1.png)\n\n<Caption>\n  Inline loading components are not interactive, but may temporarily disable\n  dependent components.\n</Caption>\n\n</Column>\n</Row>\n\n### Labeling and states\n\nWhere there is displayed text for inline loading, Carbon provides the text as\nthe status to assistive technologies like screen readers. Where there is no\ntext, Carbon provides a text equivalent (“loading”) for the loading symbol.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Inline loading text is provided to assistive technologies.\">\n\n![a loading icon with a text message of \"Submitting...\"](images/inline-loading-accessibility-2.png)\n\n  </DoDont>\n  <DoDont type=\"do\" caption=\"Where there is no text, Carbon provides a text equivalent for the loading symbol.\">\n\n![An input with a loading symbol, showing the alt text of \"loading](images/inline-loading-accessibility-3.png)\n\n  </DoDont>\n</DoDontRow>\n\n## Development considerations\n\nKeep these considerations in mind if you are modifying Carbon or creating a\ncustom component.\n\n- Carbon uses an `aria-live` region set to “polite” to surface inline loading\n  text messages, where they are used.\n- Where no text is displayed for inline loading, Carbon uses the SVG title of\n  the status icon to surface the status (“active”, “finished”, “error”) to\n  assistive technologies.\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/inline-loading/accessibility.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}