{"componentChunkName":"component---src-pages-components-tile-usage-mdx","path":"/components/tile/usage/","result":{"pageContext":{"frontmatter":{"title":"Tile","description":"Tiles are a flexible component for displaying a wide variety of content, including informational, getting started, how-to, next steps, and more.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/tile/usage.mdx","titleType":"prepend","MdxNode":{"id":"4e49fdea-cb37-5794-a191-c0d3f29f34eb","children":[],"parent":"4ba13607-274a-5297-8b34-2c56cc7274e8","internal":{"content":"---\ntitle: Tile\ndescription:\n  Tiles are a flexible component for displaying a wide variety of content,\n  including informational, getting started, how-to, next steps, and more.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\n<PageDescription>\n\nTiles are a highly flexible component for displaying a wide variety of content,\nincluding information, getting started, how-to, next steps, and more.\n\n</PageDescription>\n\n<InlineNotification>\n\n[Experimental tiles](https://react.carbondesignsystem.com/?path=/docs/experimental-feature-flags-tile--overview)\nare now available. This addition enhances accessibility and only applies to the\nvisual appearance, not the function of tiles. Though we are not deprecating the\ncurrent tiles, we encourage all design teams to use the new experimental tiles\nin their products moving forward.\n\n</InlineNotification>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Tile variants</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Universal behaviors</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nCarbon ships a basic tile structure that responds to the grid. Tiles can contain\ntype, images and/or blocks of color. However, Carbon tiles have no pre-set\nstyles for the content inside. Tile usage guidance focuses solely on basic tile\nfunctions—not the information hierarchy within the tile or guidance around\nadditional interactive elements that the tile may contain.\n\n<Row>\n<Column colLg={12}>\n\n![Example image of tiles on the dashboard](images/tile-usage-1.png)\n\n</Column>\n</Row>\n\n#### Tiles versus Cards\n\nTiles are simple and foundational. Cards can be very complex. Cards are built\nupon the tile foundation and have various patterns of information hierarchy,\nmultiple actions, overflow menus, selectable features, etc. Carbon does not have\na Card pattern yet, but we link out to several card patterns within our pattern\nasset library (PAL) ecosystem below:\n\n- [Productive vs. Expressive cards](https://pages.github.ibm.com/cdai-design/pal/components/card/overview/)\n  (Carbon for Cloud & Cognitive)\n- [Dashboard cards](https://pages.github.ibm.com/ai-applications/design/patterns/dashboards-v2/overview/#dashboard-cards)\n  (AI Applications Design)\n- [Card](https://www.ibm.com/standards/carbon/components/cards) (Carbon for\n  IBM.com)\n\n### When to use\n\nTiles are reusable components that provide shortcuts to building cards and other\nmodules. Use tiles to group related information in flexible containers. Here are\nsome common use cases for when to use tiles:\n\n- To contain related groupings of information or actions\n- To guide users to take actions or navigate\n- To present options for single or multiple selections\n- To hide or show large amounts of content\n\n### When not to use\n\nTiles reside in the same plane as the background layer—they do not have\n**elevation**. Tiles organize essential information and have the same visual\nhierarchy as content within the same page.\n\nDo not add a drop shadow to tiles and use them on the screen to reveal secondary\ninformation, actions, or notifications. Use [modals](/components/modal/usage),\n[popover](/components/popover/usage), and\n[dialogs](https://carbondesignsystem.com/patterns/dialog-pattern/) which have\nelevation and are appropriate for this function instead.\n\n## Live demo\n\n<StorybookDemo\n  themeSelector\n  url=\"https://react.carbondesignsystem.com\"\n  variants={[\n    {\n      label: 'Default',\n      variant: 'components-tile--default',\n    },\n    {\n      label: 'Clickable',\n      variant: 'components-tile--clickable',\n    },\n    {\n      label: 'Expandable',\n      variant: 'components-tile--expandable',\n    },\n    {\n      label: 'Expandable with interactive',\n      variant: 'components-tile--expandable-with-interactive',\n    },\n    {\n      label: 'Multiselect',\n      variant: 'components-tile--multi-select',\n    },\n    {\n      label: 'Radio',\n      variant: 'components-tile--radio',\n    },\n    {\n      label: 'Selectable',\n      variant: 'components-tile--selectable',\n    },\n    {\n      label: 'Clickable with Improved Contrast (unstable)',\n      variant: 'experimental-feature-flags-tile--clickable',\n    },\n    {\n      label: 'Expandable with Improved Contrast (unstable)',\n      variant: 'experimental-feature-flags-tile--expandable',\n    },\n    {\n      label: 'Multiselect with Improved Contrast (unstable)',\n      variant: 'experimental-feature-flags-tile--multi-select',\n    },\n    {\n      label: 'Radio with Improved Contrast (unstable)',\n      variant: 'experimental-feature-flags-tile--radio',\n    },\n    {\n      label: 'Selectable with Improved Contrast (unstable)',\n      variant: 'experimental-feature-flags-tile--selectable',\n    },\n  ]}\n/>\n\n## Tile variants\n\n<InlineNotification>\n\nThe experimental tiles are applicable to clickable, selectable and expandable\ntiles — not to base tiles.\n\n</InlineNotification>\n\nTiles can function or be implemented in four ways—base, clickable, selectable,\nor expandable. These variations of tiles are flexible enough to support a\nvariety of different use cases when building more complicated card features.\n\n| Variant                   | Purpose                                                                                                  |\n| ------------------------- | -------------------------------------------------------------------------------------------------------- |\n| [Base](#base)             | For high-level, short, and digestible content pieces such as features, plans, or services offered        |\n| [Clickable](#clickable)   | For prompting an action, navigating or directing to other pieces of information about the subject matter |\n| [Selectable](#selectable) | For presenting options to a user in a structured manner, such as a set of pricing plans                  |\n| [Expandable](#expandable) | For hiding and revealing a large amount of content to focus on specific pieces of information            |\n\n### Base\n\nBase tiles are used to display information to the user, such as features or\nservices offered. Base tiles are often seen on marketing pages to promote\ncontent or on highly-interactive dashboards. These tiles can have internal\ncalls-to-action (CTAs), such as a [button](/components/button/usage) or a\n[link](/components/link/usage).\n\n<Row>\n<Column colLg={8}>\n\n![Example image of base tiles](images/tile-usage-2.png)\n\n</Column>\n</Row>\n\n### Clickable\n\nClickable tiles can be used as navigational elements that redirect the user to a\nnew page. In these situations, the entire tile is in a clickable state. Due to\naccessibility concerns, clickable tiles cannot contain separate internal CTAs\nbut can contain pictograms, icons, or media such as illustrations or images.\n\n<Row>\n<Column colLg={8}>\n\n![Example image of clickable tiles](images/tile-usage-3.png)\n\n</Column>\n</Row>\n\n### Selectable\n\nSelectable tiles work well for presenting options to a user in a structured\nmanner, such as a set of pricing plans. Selectable tiles may contain internal\nCTAs (like links to docs) if the internal CTA is given its own click target.\n\nSelectable tiles can either have a single-select state working like a\n[radio button](/components/radio-button/usage), or multi-select state working as\na [checkbox](/components/checkbox/usage).\n\n<Row>\n<Column colLg={8}>\n\n![Example image of radio-button/single-select tile](images/tile-usage-4.png)\n\n<Caption>Single-select tiles</Caption>\n\n![Example image of checkbox/multi-select tile](images/tile-usage-5.png)\n\n<Caption>Multi-select tiles</Caption>\n\n</Column>\n</Row>\n\n### Expandable\n\nExpandable tiles are helpful for hiding and showing large amounts of content to\na user. When expanded, tiles push content down the page. They allow the user to\nspecifically focus on featured content while having access to the rest of the\ninformation. Expandable tiles can contain internal CTAs (like links to docs) if\nthey are given their own click targets.\n\n<Row>\n<Column colLg={8}>\n\n![Example image of expandable tile with interactive elements](images/tile-usage-6.png)\n\n<Caption>Expandable tile with interactive elements</Caption>\n\n![Example image of expandable tile without interactive elements](images/tile-usage-7.png)\n\n<Caption>Expandable tile without interactive elements</Caption>\n\n</Column>\n</Row>\n\n## Formatting\n\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![Tile anatomy](images/tile-usage-8.png)\n\n</Column>\n</Row>\n\n1. **Image (optional)** : The image size follows standard Carbon aspect ratios\n   (in this case, with a default size of 4:3)\n\n2. **Container**: Contains the content area\n\n3. **Content area**: Contains the information and/or controls needed to complete\n   the modal's task. It can include message text and components.\n\n### Sizing\n\nThe **width** varies depending on three basic gutter modes: wide, narrow, and\ncondensed. Tile **height** varies depending on the amount of content placed\nwithin it, but applies the\n[spacing](https://carbondesignsystem.com/guidelines/spacing/overview/) and\nfollows Carbon's standard\n[aspect ratios](https://www.carbondesignsystem.com/guidelines/2x-grid/overview/#aspect-ratio).\nThe minimum height starts with 2:1 aspect ratio. As the content grows, set\nvertical spacing between sections within the content area.\n\n### Alignment\n\n#### Icon and call-to-action button\n\nOn clickable tiles, use the arrow icon as default with the `$icon-interactive`\ntoken. Place the icon at the bottom right to indicate navigation. Avoid\nconfusing the user with multiple click targets (like interactive links or\nbuttons) on clickable tiles.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do right align the icon when it is by itself.\">\n\n![Example of \"do\" on clickable tile](images/tile-usage-9.png)\n\n  </DoDont>\n\n  <DoDont type=\"do\" caption=\"Do right align the icon when there is additional text.\">\n\n![Example of \"do\" on clickable tile](images/tile-usage-10.png)\n\n  </DoDont>\n</DoDontRow>\n\n<DoDontRow>\n\n  <DoDont type=\"do\" caption=\"Do right align the icon when there is an icon or pictogram.\">\n\n![Example of \"do\" on clickable tile](images/tile-usage-11.png)\n\n  </DoDont>\n\n  <DoDont type=\"dont\" caption=\"Do not add interactive links or components on clickable tiles.\">\n\n![Example of \"do not\" on clickable tile](images/tile-usage-12.png)\n\n  </DoDont>\n</DoDontRow>\n\nOn base tiles, place the interactive link at the bottom left or the button at\nthe bottom to indicate call-to-action items.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do left align the interactive link at the bottom on base tile.\">\n\n![Example of \"do\" on base tile](images/tile-usage-13.png)\n\n  </DoDont>\n\n  <DoDont type=\"do\" caption=\"Do place the button at the bottom on base tile.\">\n\n![Example of \"do\" on base tile](images/tile-usage-14.png)\n\n  </DoDont>\n</DoDontRow>\n\n#### Tile groups\n\nTile groups are useful for aligning tiles that have a strong relationship. Tile\ngroups flow horizontally from left to right usually and have similar\nhierarchical importance as with navigation or catalog tiles.\n\n<Row>\n<Column colLg={12}>\n\n![Example image of how tiles are built on the wide grid.](images/tile-usage-15.png)\n\n<Caption>Example image of how tiles are built on the wide grid.</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={12}>\n\n![Example image of how tiles are built on the narrow grid.](images/tile-usage-16.png)\n\n<Caption>Example image of how tiles are built on the narrow grid.</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={12}>\n\n![Example image of how tiles are built on the condensed grid.](images/tile-usage-17.png)\n\n<Caption>Example image of how tiles are built on the condensed grid.</Caption>\n\n</Column>\n</Row>\n\n<DoDontRow>\n\n  <DoDont type=\"do\" caption=\"Do match the same type of tiles in a group\">\n\n![Example of \"do\" of tile matching](images/tile-usage-19.png)\n\n  </DoDont>\n\n  <DoDont type=\"dont\" caption=\"Do not mix types of tiles in a group.\">\n\n![Example of \"do not\" of tile mixing](images/tile-usage-20.png)\n\n  </DoDont>\n</DoDontRow>\n\n#### Layout\n\nThere are three basic layouts for tiles: **standard**, **vertical masonry**, and\n**horizontal masonry**. The standard layout will be the most commonly used\nversion.\n\n- Standard layout tiles are the same in height and width as all other tiles in\n  the group.\n- In a vertical masonry layout, tiles can vary in height, but are consistent in\n  width.\n- In a horizontal masonry layout, tiles can vary in width; different rows of\n  tiles may vary in height, but tiles within a row should be consistent in\n  height.\n\n<Row>\n<Column colLg={8}>\n\n![Layouts for tiles](/images/tile-usage-18.png)\n\n<Caption>\n  Examples of tile layouts: standard, vertical masonry, and horizontal masonry.\n</Caption>\n\n</Column>\n</Row>\n\n## Universal behaviors\n\nThe behaviors listed in this section are universal across all tile variants. For\nbehaviors that are unique to each variant, see each of the component variants\nsections below.\n\n### States\n\nFor detailed visual information about the various states for this component, see\nthe [Style](https://carbondesignsystem.com/components/tile/style) tab.\n\n| State      | When to use                                                                                                                                                                                                                                                                                                        |\n| ---------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| _Enabled_  | When a tile is live but a user is not directly interacting with it. This is commonly referred to as the default or normal state of the component                                                                                                                                                                   |\n| _Hover_    | When a user is hovering over the tile with the mouse cursor to interact with it (except base tile)                                                                                                                                                                                                                 |\n| _Focus_    | When a user `tabs` to or clicks on the tile, it becomes focused, indicating the user has successfully navigated to the component (except base tile)                                                                                                                                                                |\n| _Selected_ | When a user `enters` or clicks on the single-select tile or the multi-select tile to select an option or multiple options                                                                                                                                                                                          |\n| _Disabled_ | When the user is not allowed to interact with clickable and selectable (single-select and multi-select) tiles due to either permissions, dependencies, or pre-requisites. The disabled state completely removes the interactive function from a component. The styling is not subject to WCAG contrast compliance. |\n\n<Row>\n<Column colLg={8}>\n\n![Clickable tiles vs disabled tiles](images/tile-usage-21.png)\n\n<Caption>\n  Clickable tile's disabled state turns the default icon into the error icon.\n</Caption>\n\n</Column>\n</Row>\n\n### Interactions\n\n#### Mouse\n\nUsers can trigger an item by clicking anywhere in any tile container, except\nbase tiles.\n\n<Row>\n<Column colLg={8}>\n\n![Clickable, expandable, and selectable tiles are clickable anywhere within the tile.](images/tile-usage-22.png)\n\n<Caption>\n  Clickable, expandable, and selectable tiles are clickable anywhere within the\n  tile.\n</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={8}>\n\n![Base tiles are static, except buttons or links .](images/tile-usage-23.png)\n\n<Caption>Base tiles are static, except buttons or links.</Caption>\n\n</Column>\n</Row>\n\nExpandable tiles can either be triggered as a whole or contain internal CTAs\nonly if they are given their own click targets. In these cases, the tile’s click\ntarget is reduced to only the icon button.\n\n<Row>\n<Column colLg={8}>\n\n![Expandable tiles click targets](images/tile-usage-24.png)\n\n</Column>\n</Row>\n\n#### Keyboard\n\nSpecific keyboard interactions will depend on the type of tile you are using and\nwhat content it contains but all types of tiles can take focus.\n\n| Key             | Interaction                                                                                                                                                                 |\n| --------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Tab             | Move forward through tiles (if tiles themselves are clickable) and interactive elements within the tiles in a logical order                                                 |\n| Shift + Tab     | Move backward through tiles (if tiles themselves are clickable) and interactive elements within the tiles in a logical order                                                |\n| Return or Enter | Return or enter will open the tile (if the tile itself is clickable). If the tile is not clickable but has interactive elements, their corresponding actions are performed. |\n| Space           | If the tile is selectable, the space bar will toggle tile selection.                                                                                                        |\n\n## Related\n\n#### Grid\n\nTo learn more about how to build tiles correctly on the grid, see Carbon’s\n[2x grid](/guidelines/2x-grid/implementation).\n\n#### Aspect ratio\n\nThe aspect ratio is important when building tiles and images. For further\nguidance, see Carbon’s\n[aspect ratio](https://www.carbondesignsystem.com/guidelines/2x-grid/overview/#aspect-ratio)\nand its\n[implementation](https://www.carbondesignsystem.com/guidelines/2x-grid/implementation#screen-regions).\n\n#### Buttons\n\nWhen in doubt, use full-span button alignment within tiles. For further\nguidance, see Carbon’s\n[buttons](https://carbondesignsystem.com/components/button/usage/).\n\n#### Link\n\nLink has variants depending on the context. For further guidance, see Carbon’s\n[link](https://carbondesignsystem.com/components/link/usage/).\n\n#### Spacing\n\nSpacing helps deliver clear and functional layouts. For further guidance, see\nCarbon’s [spacing](https://carbondesignsystem.com/guidelines/spacing/overview/).\n\n## References\n\nHagan Rivers,\n[Interactions design with cards/tiles](https://medium.com/@hagan.rivers/interaction-design-with-cards-tiles-5a6895aa220d/)\n(Medium, 2017)\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","type":"Mdx","contentDigest":"93c60526f1d345bce76498e57a2a7d55","owner":"gatsby-plugin-mdx","counter":2786},"frontmatter":{"title":"Tile","description":"Tiles are a flexible component for displaying a wide variety of content, including informational, getting started, how-to, next steps, and more.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Tile\ndescription:\n  Tiles are a flexible component for displaying a wide variety of content,\n  including informational, getting started, how-to, next steps, and more.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\n<PageDescription>\n\nTiles are a highly flexible component for displaying a wide variety of content,\nincluding information, getting started, how-to, next steps, and more.\n\n</PageDescription>\n\n<InlineNotification>\n\n[Experimental tiles](https://react.carbondesignsystem.com/?path=/docs/experimental-feature-flags-tile--overview)\nare now available. This addition enhances accessibility and only applies to the\nvisual appearance, not the function of tiles. Though we are not deprecating the\ncurrent tiles, we encourage all design teams to use the new experimental tiles\nin their products moving forward.\n\n</InlineNotification>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Tile variants</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Universal behaviors</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nCarbon ships a basic tile structure that responds to the grid. Tiles can contain\ntype, images and/or blocks of color. However, Carbon tiles have no pre-set\nstyles for the content inside. Tile usage guidance focuses solely on basic tile\nfunctions—not the information hierarchy within the tile or guidance around\nadditional interactive elements that the tile may contain.\n\n<Row>\n<Column colLg={12}>\n\n![Example image of tiles on the dashboard](images/tile-usage-1.png)\n\n</Column>\n</Row>\n\n#### Tiles versus Cards\n\nTiles are simple and foundational. Cards can be very complex. Cards are built\nupon the tile foundation and have various patterns of information hierarchy,\nmultiple actions, overflow menus, selectable features, etc. Carbon does not have\na Card pattern yet, but we link out to several card patterns within our pattern\nasset library (PAL) ecosystem below:\n\n- [Productive vs. Expressive cards](https://pages.github.ibm.com/cdai-design/pal/components/card/overview/)\n  (Carbon for Cloud & Cognitive)\n- [Dashboard cards](https://pages.github.ibm.com/ai-applications/design/patterns/dashboards-v2/overview/#dashboard-cards)\n  (AI Applications Design)\n- [Card](https://www.ibm.com/standards/carbon/components/cards) (Carbon for\n  IBM.com)\n\n### When to use\n\nTiles are reusable components that provide shortcuts to building cards and other\nmodules. Use tiles to group related information in flexible containers. Here are\nsome common use cases for when to use tiles:\n\n- To contain related groupings of information or actions\n- To guide users to take actions or navigate\n- To present options for single or multiple selections\n- To hide or show large amounts of content\n\n### When not to use\n\nTiles reside in the same plane as the background layer—they do not have\n**elevation**. Tiles organize essential information and have the same visual\nhierarchy as content within the same page.\n\nDo not add a drop shadow to tiles and use them on the screen to reveal secondary\ninformation, actions, or notifications. Use [modals](/components/modal/usage),\n[popover](/components/popover/usage), and\n[dialogs](https://carbondesignsystem.com/patterns/dialog-pattern/) which have\nelevation and are appropriate for this function instead.\n\n## Live demo\n\n<StorybookDemo\n  themeSelector\n  url=\"https://react.carbondesignsystem.com\"\n  variants={[\n    {\n      label: 'Default',\n      variant: 'components-tile--default',\n    },\n    {\n      label: 'Clickable',\n      variant: 'components-tile--clickable',\n    },\n    {\n      label: 'Expandable',\n      variant: 'components-tile--expandable',\n    },\n    {\n      label: 'Expandable with interactive',\n      variant: 'components-tile--expandable-with-interactive',\n    },\n    {\n      label: 'Multiselect',\n      variant: 'components-tile--multi-select',\n    },\n    {\n      label: 'Radio',\n      variant: 'components-tile--radio',\n    },\n    {\n      label: 'Selectable',\n      variant: 'components-tile--selectable',\n    },\n    {\n      label: 'Clickable with Improved Contrast (unstable)',\n      variant: 'experimental-feature-flags-tile--clickable',\n    },\n    {\n      label: 'Expandable with Improved Contrast (unstable)',\n      variant: 'experimental-feature-flags-tile--expandable',\n    },\n    {\n      label: 'Multiselect with Improved Contrast (unstable)',\n      variant: 'experimental-feature-flags-tile--multi-select',\n    },\n    {\n      label: 'Radio with Improved Contrast (unstable)',\n      variant: 'experimental-feature-flags-tile--radio',\n    },\n    {\n      label: 'Selectable with Improved Contrast (unstable)',\n      variant: 'experimental-feature-flags-tile--selectable',\n    },\n  ]}\n/>\n\n## Tile variants\n\n<InlineNotification>\n\nThe experimental tiles are applicable to clickable, selectable and expandable\ntiles — not to base tiles.\n\n</InlineNotification>\n\nTiles can function or be implemented in four ways—base, clickable, selectable,\nor expandable. These variations of tiles are flexible enough to support a\nvariety of different use cases when building more complicated card features.\n\n| Variant                   | Purpose                                                                                                  |\n| ------------------------- | -------------------------------------------------------------------------------------------------------- |\n| [Base](#base)             | For high-level, short, and digestible content pieces such as features, plans, or services offered        |\n| [Clickable](#clickable)   | For prompting an action, navigating or directing to other pieces of information about the subject matter |\n| [Selectable](#selectable) | For presenting options to a user in a structured manner, such as a set of pricing plans                  |\n| [Expandable](#expandable) | For hiding and revealing a large amount of content to focus on specific pieces of information            |\n\n### Base\n\nBase tiles are used to display information to the user, such as features or\nservices offered. Base tiles are often seen on marketing pages to promote\ncontent or on highly-interactive dashboards. These tiles can have internal\ncalls-to-action (CTAs), such as a [button](/components/button/usage) or a\n[link](/components/link/usage).\n\n<Row>\n<Column colLg={8}>\n\n![Example image of base tiles](images/tile-usage-2.png)\n\n</Column>\n</Row>\n\n### Clickable\n\nClickable tiles can be used as navigational elements that redirect the user to a\nnew page. In these situations, the entire tile is in a clickable state. Due to\naccessibility concerns, clickable tiles cannot contain separate internal CTAs\nbut can contain pictograms, icons, or media such as illustrations or images.\n\n<Row>\n<Column colLg={8}>\n\n![Example image of clickable tiles](images/tile-usage-3.png)\n\n</Column>\n</Row>\n\n### Selectable\n\nSelectable tiles work well for presenting options to a user in a structured\nmanner, such as a set of pricing plans. Selectable tiles may contain internal\nCTAs (like links to docs) if the internal CTA is given its own click target.\n\nSelectable tiles can either have a single-select state working like a\n[radio button](/components/radio-button/usage), or multi-select state working as\na [checkbox](/components/checkbox/usage).\n\n<Row>\n<Column colLg={8}>\n\n![Example image of radio-button/single-select tile](images/tile-usage-4.png)\n\n<Caption>Single-select tiles</Caption>\n\n![Example image of checkbox/multi-select tile](images/tile-usage-5.png)\n\n<Caption>Multi-select tiles</Caption>\n\n</Column>\n</Row>\n\n### Expandable\n\nExpandable tiles are helpful for hiding and showing large amounts of content to\na user. When expanded, tiles push content down the page. They allow the user to\nspecifically focus on featured content while having access to the rest of the\ninformation. Expandable tiles can contain internal CTAs (like links to docs) if\nthey are given their own click targets.\n\n<Row>\n<Column colLg={8}>\n\n![Example image of expandable tile with interactive elements](images/tile-usage-6.png)\n\n<Caption>Expandable tile with interactive elements</Caption>\n\n![Example image of expandable tile without interactive elements](images/tile-usage-7.png)\n\n<Caption>Expandable tile without interactive elements</Caption>\n\n</Column>\n</Row>\n\n## Formatting\n\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![Tile anatomy](images/tile-usage-8.png)\n\n</Column>\n</Row>\n\n1. **Image (optional)** : The image size follows standard Carbon aspect ratios\n   (in this case, with a default size of 4:3)\n\n2. **Container**: Contains the content area\n\n3. **Content area**: Contains the information and/or controls needed to complete\n   the modal's task. It can include message text and components.\n\n### Sizing\n\nThe **width** varies depending on three basic gutter modes: wide, narrow, and\ncondensed. Tile **height** varies depending on the amount of content placed\nwithin it, but applies the\n[spacing](https://carbondesignsystem.com/guidelines/spacing/overview/) and\nfollows Carbon's standard\n[aspect ratios](https://www.carbondesignsystem.com/guidelines/2x-grid/overview/#aspect-ratio).\nThe minimum height starts with 2:1 aspect ratio. As the content grows, set\nvertical spacing between sections within the content area.\n\n### Alignment\n\n#### Icon and call-to-action button\n\nOn clickable tiles, use the arrow icon as default with the `$icon-interactive`\ntoken. Place the icon at the bottom right to indicate navigation. Avoid\nconfusing the user with multiple click targets (like interactive links or\nbuttons) on clickable tiles.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do right align the icon when it is by itself.\">\n\n![Example of \"do\" on clickable tile](images/tile-usage-9.png)\n\n  </DoDont>\n\n  <DoDont type=\"do\" caption=\"Do right align the icon when there is additional text.\">\n\n![Example of \"do\" on clickable tile](images/tile-usage-10.png)\n\n  </DoDont>\n</DoDontRow>\n\n<DoDontRow>\n\n  <DoDont type=\"do\" caption=\"Do right align the icon when there is an icon or pictogram.\">\n\n![Example of \"do\" on clickable tile](images/tile-usage-11.png)\n\n  </DoDont>\n\n  <DoDont type=\"dont\" caption=\"Do not add interactive links or components on clickable tiles.\">\n\n![Example of \"do not\" on clickable tile](images/tile-usage-12.png)\n\n  </DoDont>\n</DoDontRow>\n\nOn base tiles, place the interactive link at the bottom left or the button at\nthe bottom to indicate call-to-action items.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do left align the interactive link at the bottom on base tile.\">\n\n![Example of \"do\" on base tile](images/tile-usage-13.png)\n\n  </DoDont>\n\n  <DoDont type=\"do\" caption=\"Do place the button at the bottom on base tile.\">\n\n![Example of \"do\" on base tile](images/tile-usage-14.png)\n\n  </DoDont>\n</DoDontRow>\n\n#### Tile groups\n\nTile groups are useful for aligning tiles that have a strong relationship. Tile\ngroups flow horizontally from left to right usually and have similar\nhierarchical importance as with navigation or catalog tiles.\n\n<Row>\n<Column colLg={12}>\n\n![Example image of how tiles are built on the wide grid.](images/tile-usage-15.png)\n\n<Caption>Example image of how tiles are built on the wide grid.</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={12}>\n\n![Example image of how tiles are built on the narrow grid.](images/tile-usage-16.png)\n\n<Caption>Example image of how tiles are built on the narrow grid.</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={12}>\n\n![Example image of how tiles are built on the condensed grid.](images/tile-usage-17.png)\n\n<Caption>Example image of how tiles are built on the condensed grid.</Caption>\n\n</Column>\n</Row>\n\n<DoDontRow>\n\n  <DoDont type=\"do\" caption=\"Do match the same type of tiles in a group\">\n\n![Example of \"do\" of tile matching](images/tile-usage-19.png)\n\n  </DoDont>\n\n  <DoDont type=\"dont\" caption=\"Do not mix types of tiles in a group.\">\n\n![Example of \"do not\" of tile mixing](images/tile-usage-20.png)\n\n  </DoDont>\n</DoDontRow>\n\n#### Layout\n\nThere are three basic layouts for tiles: **standard**, **vertical masonry**, and\n**horizontal masonry**. The standard layout will be the most commonly used\nversion.\n\n- Standard layout tiles are the same in height and width as all other tiles in\n  the group.\n- In a vertical masonry layout, tiles can vary in height, but are consistent in\n  width.\n- In a horizontal masonry layout, tiles can vary in width; different rows of\n  tiles may vary in height, but tiles within a row should be consistent in\n  height.\n\n<Row>\n<Column colLg={8}>\n\n![Layouts for tiles](/images/tile-usage-18.png)\n\n<Caption>\n  Examples of tile layouts: standard, vertical masonry, and horizontal masonry.\n</Caption>\n\n</Column>\n</Row>\n\n## Universal behaviors\n\nThe behaviors listed in this section are universal across all tile variants. For\nbehaviors that are unique to each variant, see each of the component variants\nsections below.\n\n### States\n\nFor detailed visual information about the various states for this component, see\nthe [Style](https://carbondesignsystem.com/components/tile/style) tab.\n\n| State      | When to use                                                                                                                                                                                                                                                                                                        |\n| ---------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| _Enabled_  | When a tile is live but a user is not directly interacting with it. This is commonly referred to as the default or normal state of the component                                                                                                                                                                   |\n| _Hover_    | When a user is hovering over the tile with the mouse cursor to interact with it (except base tile)                                                                                                                                                                                                                 |\n| _Focus_    | When a user `tabs` to or clicks on the tile, it becomes focused, indicating the user has successfully navigated to the component (except base tile)                                                                                                                                                                |\n| _Selected_ | When a user `enters` or clicks on the single-select tile or the multi-select tile to select an option or multiple options                                                                                                                                                                                          |\n| _Disabled_ | When the user is not allowed to interact with clickable and selectable (single-select and multi-select) tiles due to either permissions, dependencies, or pre-requisites. The disabled state completely removes the interactive function from a component. The styling is not subject to WCAG contrast compliance. |\n\n<Row>\n<Column colLg={8}>\n\n![Clickable tiles vs disabled tiles](images/tile-usage-21.png)\n\n<Caption>\n  Clickable tile's disabled state turns the default icon into the error icon.\n</Caption>\n\n</Column>\n</Row>\n\n### Interactions\n\n#### Mouse\n\nUsers can trigger an item by clicking anywhere in any tile container, except\nbase tiles.\n\n<Row>\n<Column colLg={8}>\n\n![Clickable, expandable, and selectable tiles are clickable anywhere within the tile.](images/tile-usage-22.png)\n\n<Caption>\n  Clickable, expandable, and selectable tiles are clickable anywhere within the\n  tile.\n</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={8}>\n\n![Base tiles are static, except buttons or links .](images/tile-usage-23.png)\n\n<Caption>Base tiles are static, except buttons or links.</Caption>\n\n</Column>\n</Row>\n\nExpandable tiles can either be triggered as a whole or contain internal CTAs\nonly if they are given their own click targets. In these cases, the tile’s click\ntarget is reduced to only the icon button.\n\n<Row>\n<Column colLg={8}>\n\n![Expandable tiles click targets](images/tile-usage-24.png)\n\n</Column>\n</Row>\n\n#### Keyboard\n\nSpecific keyboard interactions will depend on the type of tile you are using and\nwhat content it contains but all types of tiles can take focus.\n\n| Key             | Interaction                                                                                                                                                                 |\n| --------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Tab             | Move forward through tiles (if tiles themselves are clickable) and interactive elements within the tiles in a logical order                                                 |\n| Shift + Tab     | Move backward through tiles (if tiles themselves are clickable) and interactive elements within the tiles in a logical order                                                |\n| Return or Enter | Return or enter will open the tile (if the tile itself is clickable). If the tile is not clickable but has interactive elements, their corresponding actions are performed. |\n| Space           | If the tile is selectable, the space bar will toggle tile selection.                                                                                                        |\n\n## Related\n\n#### Grid\n\nTo learn more about how to build tiles correctly on the grid, see Carbon’s\n[2x grid](/guidelines/2x-grid/implementation).\n\n#### Aspect ratio\n\nThe aspect ratio is important when building tiles and images. For further\nguidance, see Carbon’s\n[aspect ratio](https://www.carbondesignsystem.com/guidelines/2x-grid/overview/#aspect-ratio)\nand its\n[implementation](https://www.carbondesignsystem.com/guidelines/2x-grid/implementation#screen-regions).\n\n#### Buttons\n\nWhen in doubt, use full-span button alignment within tiles. For further\nguidance, see Carbon’s\n[buttons](https://carbondesignsystem.com/components/button/usage/).\n\n#### Link\n\nLink has variants depending on the context. For further guidance, see Carbon’s\n[link](https://carbondesignsystem.com/components/link/usage/).\n\n#### Spacing\n\nSpacing helps deliver clear and functional layouts. For further guidance, see\nCarbon’s [spacing](https://carbondesignsystem.com/guidelines/spacing/overview/).\n\n## References\n\nHagan Rivers,\n[Interactions design with cards/tiles](https://medium.com/@hagan.rivers/interaction-design-with-cards-tiles-5a6895aa220d/)\n(Medium, 2017)\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/tile/usage.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}