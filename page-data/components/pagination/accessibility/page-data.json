{"componentChunkName":"component---src-pages-components-pagination-accessibility-mdx","path":"/components/pagination/accessibility/","result":{"pageContext":{"frontmatter":{"title":"Pagination","description":"Pagination is used for splitting up content or data into several pages, with a control for navigating to the next or previous page.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/pagination/accessibility.mdx","titleType":"prepend","MdxNode":{"id":"448fca5d-8549-5a17-9bf1-9bf812bb54bb","children":[],"parent":"7db7498c-56cb-5a4f-a854-9f43742a4f6d","internal":{"content":"---\ntitle: Pagination\ndescription:\n  Pagination is used for splitting up content or data into several pages, with a\n  control for navigating to the next or previous page.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport A11yStatus from 'components/A11yStatus';\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<PageDescription>\n\nNo accessibility annotations are needed for pagination, but keep these\nconsiderations in mind if you are modifying Carbon or creating a custom\ncomponent.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n<A11yStatus layout=\"table\" components={['Pagination', 'Pagination nav']} />\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via the keyboard. Carbon incorporates many\nother accessibility considerations, some of which are described below.\n\n### Keyboard interaction\n\nThe tab order goes from left to right through the controls in the pagination\ncomponent. On focus, the dropdowns are opened with `Space` or with up or down\narrows, which also cycle through the values. Both `Space` and `Enter` select a\nvalue and close the dropdown. The dropdown can also be closed by pressing `Esc`.\nThe previous and next page arrow buttons are activated by `Space` or `Enter`\nkeys.\n\n<Row>\n<Column colLg={8}>\n\n![example of tabbing into a pagination group and arrowing between selections](images/pagination-a11y-1.png)\n\n<Caption>\n  Interactive elements in pagination maintain their usual Carbon keyboard\n  behaviors and tab order.\n</Caption>\n\n</Column>\n</Row>\n\nWhen the pagination is at either end of its range, one of the page navigation\nbuttons becomes invalid. When that happens, the button is no longer navigable or\noperable, like any other disabled control.\n\n<Row>\n<Column colLg={8}>\n\n![tab order bypasses the disabled left-arrow icon](images/pagination-a11y-2.png)\n\n<Caption>\n  The prior page button is disabled and unreachable when the pagination is at\n  the start of its range.\n</Caption>\n\n</Column>\n</Row>\n\n### Labeling\n\nNot all the elements in pagination have static or visually isolated labels.\nCarbon constructs a programmatic name for the second dropdown by concatenating\nsome dynamically generated text on the screen. Carbon also provides accessible\nnames for the icon-only buttons.\n\n<Row>\n<Column colLg={8}>\n\n![illustration showing labels for dropdown and icon-only buttons](images/pagination-a11y-3.png)\n\n<Caption>\n  Carbon provides the accessible names \"page number, of 40 pages\", \"previous\n  page\", and \"next page\" for assistive technology.\n</Caption>\n\n</Column>\n</Row>\n\n## Development considerations\n\nKeep these considerations in mind if you are modifying Carbon or creating a\ncustom component.\n\n- Carbon uses `<select>` elements for the dropdowns.\n- Consult the\n  [ARIA authoring practices](https://www.w3.org/WAI/ARIA/apg/example-index/combobox/combobox-select-only.html)\n  for more considerations.\n","type":"Mdx","contentDigest":"d1b1a9ba74456abccbd2720d56ce75ed","owner":"gatsby-plugin-mdx","counter":5045},"frontmatter":{"title":"Pagination","description":"Pagination is used for splitting up content or data into several pages, with a control for navigating to the next or previous page.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Pagination\ndescription:\n  Pagination is used for splitting up content or data into several pages, with a\n  control for navigating to the next or previous page.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport A11yStatus from 'components/A11yStatus';\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<PageDescription>\n\nNo accessibility annotations are needed for pagination, but keep these\nconsiderations in mind if you are modifying Carbon or creating a custom\ncomponent.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n<A11yStatus layout=\"table\" components={['Pagination', 'Pagination nav']} />\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via the keyboard. Carbon incorporates many\nother accessibility considerations, some of which are described below.\n\n### Keyboard interaction\n\nThe tab order goes from left to right through the controls in the pagination\ncomponent. On focus, the dropdowns are opened with `Space` or with up or down\narrows, which also cycle through the values. Both `Space` and `Enter` select a\nvalue and close the dropdown. The dropdown can also be closed by pressing `Esc`.\nThe previous and next page arrow buttons are activated by `Space` or `Enter`\nkeys.\n\n<Row>\n<Column colLg={8}>\n\n![example of tabbing into a pagination group and arrowing between selections](images/pagination-a11y-1.png)\n\n<Caption>\n  Interactive elements in pagination maintain their usual Carbon keyboard\n  behaviors and tab order.\n</Caption>\n\n</Column>\n</Row>\n\nWhen the pagination is at either end of its range, one of the page navigation\nbuttons becomes invalid. When that happens, the button is no longer navigable or\noperable, like any other disabled control.\n\n<Row>\n<Column colLg={8}>\n\n![tab order bypasses the disabled left-arrow icon](images/pagination-a11y-2.png)\n\n<Caption>\n  The prior page button is disabled and unreachable when the pagination is at\n  the start of its range.\n</Caption>\n\n</Column>\n</Row>\n\n### Labeling\n\nNot all the elements in pagination have static or visually isolated labels.\nCarbon constructs a programmatic name for the second dropdown by concatenating\nsome dynamically generated text on the screen. Carbon also provides accessible\nnames for the icon-only buttons.\n\n<Row>\n<Column colLg={8}>\n\n![illustration showing labels for dropdown and icon-only buttons](images/pagination-a11y-3.png)\n\n<Caption>\n  Carbon provides the accessible names \"page number, of 40 pages\", \"previous\n  page\", and \"next page\" for assistive technology.\n</Caption>\n\n</Column>\n</Row>\n\n## Development considerations\n\nKeep these considerations in mind if you are modifying Carbon or creating a\ncustom component.\n\n- Carbon uses `<select>` elements for the dropdowns.\n- Consult the\n  [ARIA authoring practices](https://www.w3.org/WAI/ARIA/apg/example-index/combobox/combobox-select-only.html)\n  for more considerations.\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/pagination/accessibility.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}