{"componentChunkName":"component---src-pages-developing-frameworks-web-components-mdx","path":"/developing/frameworks/web-components/","result":{"pageContext":{"frontmatter":{"title":"Frameworks","description":"The Carbon Design System is built React first, with official support for Web Components. We also support core parts of the system in Angular, vanilla JS, Vue, Svelte, and Lightning Web Components.","tabs":["React","Web Components","Angular","Vue","Svelte","LWC","Vanilla","Other frameworks"]},"relativePagePath":"/developing/frameworks/web-components.mdx","titleType":"prepend","MdxNode":{"id":"80fa9d98-e456-53aa-8adb-a53b8104e277","children":[],"parent":"69e5ac22-53a3-5d31-a57f-340656b5339f","internal":{"content":"---\ntitle: Frameworks\ndescription:\n  The Carbon Design System is built React first, with official support for Web\n  Components. We also support core parts of the system in Angular, vanilla JS,\n  Vue, Svelte, and Lightning Web Components.\ntabs:\n  [\n    'React',\n    'Web Components',\n    'Angular',\n    'Vue',\n    'Svelte',\n    'LWC',\n    'Vanilla',\n    'Other frameworks',\n  ]\n---\n\n<PageDescription>\n\nThe library provides front-end developers and engineers a collection of reusable\nweb components to build websites and user interfaces. Adopting the library\nenables developers to use consistent markup, styles, and behavior in prototype\nand production work.\n\nThis library uses Custom Elements v1 and Shadow DOM v1 specs.\n\n</PageDescription>\n\n<InlineNotification>\n\nFor support, contact the\n[Carbon Web Components team](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/issues/new/choose).\n\nInfo on Carbon Web Components v1 can be found\n[here](https://v10.carbondesignsystem.com/developing/frameworks/web-components).\n\n</InlineNotification>\n\n## Resources\n\n<Row className=\"resource-card-group\">\n<Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n    subTitle=\"Carbon Web Components\"\n    href=\"https://web-components.carbondesignsystem.com\"\n    >\n\n![Storybook icon](images/storybook.svg)\n\n  </ResourceCard>\n</Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Try web components with CodeSandbox\"\n      href=\"https://codesandbox.io/s/github/carbon-design-system/carbon-for-ibm-dotcom/tree/feat/cwc-v2/packages/carbon-web-components/examples/codesandbox/basic\"\n    >\n      <MdxIcon name=\"codesandbox\" />\n    </ResourceCard>\n  </Column>\n</Row>\n\n## Getting started\n\n### Using CDN\n\n#### How to install\n\nAll components are available via CDN. This means that they can be added to your\napplication without the need of any bundler configuration. Each component is\navailable by the `latest` tag, or referencing a specific version (starting at\nversion `v1.16.0`):\n\n```html\n<!-- By `latest` tag -->\n<script\n  type=\"module\"\n  src=\"https://1.www.s81c.com/common/carbon/web-components/tag/v2/latest/accordion.min.js\"\n></script>\n\n<!-- By specific version -->\n<script\n  type=\"module\"\n  src=\"https://1.www.s81c.com/common/carbon/web-components/version/v2.0.0/accordion.min.js\"\n></script>\n```\n\nThese are the list of available components via CDN:\n\n- accordion.min.js\n- breadcrumb.min.js\n- button.min.js\n- checkbox.min.js\n- code-snippet.min.js\n- combo-box.min.js\n- content-switcher.min.js\n- copy.min.js\n- copy-button.min.js\n- data-table.min.js\n- date-picker.min.js\n- dropdown.min.js\n- file-uploader.min.js\n- floating-menu.min.js\n- form.min.js\n- inline-loading.min.js\n- layer.min.js\n- link.min.js\n- list.min.js\n- loading.min.js\n- modal.min.js\n- multi-select.min.js\n- notification.min.js\n- number-input.min.js\n- overflow-menu.min.js\n- pagination.min.js\n- progress-indicator.min.js\n- radio-button.min.js\n- search.min.js\n- select.min.js\n- skeleton-placeholder.min.js\n- skeleton-text.min.js\n- skip-to-content.min.js\n- slider.min.js\n- structured-list.min.js\n- tabs.min.js\n- tag.min.js\n- text-input.min.js\n- textarea.min.js\n- tile.min.js\n- toggle.min.js\n- toggle-tip.min.js\n- tooltip.min.js\n- ui-shell.min.js\n\nTo use the right-to-left (RTL) version of the artifacts, change the file\nextention from `.min.js` to `.rtl.min.js`. For example:\n\n```html\n<!-- By `latest` tag (RTL) -->\n<script\n  type=\"module\"\n  src=\"https://1.www.s81c.com/common/carbon/web-components/tag/v2/latest/accordion.rtl.min.js\"\n></script>\n\n<!-- By specific version (RTL) -->\n<script\n  type=\"module\"\n  src=\"https://1.www.s81c.com/common/carbon/web-components/version/v2.0.0/accordion.rtl.min.js\"\n></script>\n```\n\n#### Basic usage\n\nThe CDN artifacts define the custom elements for the browser, so they can be\ndirectly used once the script tag has been added to the page. For example:\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <script\n      type=\"module\"\n      src=\"https://1.www.s81c.com/common/carbon/web-components/tag/v2/latest/dropdown.min.js\"\n    ></script>\n    <style type=\"text/css\">\n      // Suppresses the custom element until it has been defined\n      cds-dropdown:not(:defined),\n      cds-dropdown-item:not(:defined) {\n        visibility: hidden;\n      }\n    </style>\n  </head>\n  <body>\n    <div id=\"app\">\n      <cds-dropdown value=\"bar\">\n        <cds-dropdown-item value=\"foo\">Foo</cds-dropdown-item>\n        <cds-dropdown-item value=\"bar\">Bar</cds-dropdown-item>\n        <cds-dropdown-item value=\"baz\">Baz</cds-dropdown-item>\n      </cds-dropdown>\n    </div>\n  </body>\n</html>\n```\n\nOur example at [CodeSandbox](https://codesandbox.io) shows usage with only CDN\nartifacts:\n\n[![Edit @carbon/web-components](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/github/carbon-design-system/carbon-for-ibm-dotcom/tree/feat/cwc-v2/packages/carbon-web-components/examples/codesandbox/cdn)\n\n### Using ES imports\n\n#### How to install\n\nTo install `@carbon/web-components` in your project, you will need to run the\nfollowing command using [npm](https://www.npmjs.com/):\n\n```bash\nnpm install -S @carbon/web-components\n```\n\nIf you prefer [Yarn](https://yarnpkg.com/en/), use the following command\ninstead:\n\n```bash\nyarn add @carbon/web-components\n```\n\n#### Basic usage\n\nOur example at [CodeSandbox](https://codesandbox.io) shows the most basic usage:\n\n[![Edit @carbon/web-components](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/github/carbon-design-system/carbon-for-ibm-dotcom/tree/feat/cwc-v2/packages/carbon-web-components/examples/codesandbox/basic)\n\nThe first thing you need to do is **set up a module bundler** to resolve\nECMAScript `import`s. The above example uses [Webpack](https://webpack.js.org)\nbut you can use other bundlers like [Rollup](https://rollupjs.org/) too.\n\nOnce you set up a module bundler, you can start importing our component modules,\nfor example:\n\n```javascript\nimport '@carbon/web-components/es/components/dropdown/index.js';\n```\n\nOnce you've imported the component modules, you can use our components in the\nsame manner as native HTML tags, for example:\n\n```html\n<cds-dropdown value=\"bar\">\n  <cds-dropdown-item value=\"foo\">Foo</cds-dropdown-item>\n  <cds-dropdown-item value=\"bar\">Bar</cds-dropdown-item>\n  <cds-dropdown-item value=\"baz\">Baz</cds-dropdown-item>\n</cds-dropdown>\n```\n\n### List of available components\n\nView available web components\n[here](https://web-components.carbondesignsystem.com). Usage information is\navailable in the notes provided with each story.\n\n### JavaScript framework integration\n\nIn addition to the available web component versions of Carbon components, this\nlibrary also supports usage with JavaScript frameworks like Angular, React, and\nVue if the desire is to use instead of the pure framework versions of Carbon\ncomponents. Specifically for React, this library comes with a wrapper\nimplementation around the Carbon Web Components for more seamless integration\nwith your React application.\n\nThis is achievable since web components is the modern browser standard, and\nworks well with other front-end frameworks that exist in the application. In\nturn, this also comes with the benefits of encapsulation within the Shadow DOM.\n\n<InlineNotification>\n\n**Note:** The approaches above detail the usage of Carbon Web Components within\npopular JavaScript frameworks. The APIs are based on how the web components are\nused, and differ from its pure framework counterparts (Carbon React, Carbon\nAngular, Carbon Vue).\n\n</InlineNotification>\n\n## Troubleshooting\n\nIf you experience any issues while getting set up with Carbon Web Components,\nplease head over to the\n[GitHub repo](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/feat/cwc-v2/packages/carbon-web-components)\nfor more guidelines and support. Please\n[create an issue](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/issues)\nif your issue does not already exist.\n","type":"Mdx","contentDigest":"a86a152d41acfa5a7e358c9703dab0c1","owner":"gatsby-plugin-mdx","counter":4911},"frontmatter":{"title":"Frameworks","description":"The Carbon Design System is built React first, with official support for Web Components. We also support core parts of the system in Angular, vanilla JS, Vue, Svelte, and Lightning Web Components.","tabs":["React","Web Components","Angular","Vue","Svelte","LWC","Vanilla","Other frameworks"]},"exports":{},"rawBody":"---\ntitle: Frameworks\ndescription:\n  The Carbon Design System is built React first, with official support for Web\n  Components. We also support core parts of the system in Angular, vanilla JS,\n  Vue, Svelte, and Lightning Web Components.\ntabs:\n  [\n    'React',\n    'Web Components',\n    'Angular',\n    'Vue',\n    'Svelte',\n    'LWC',\n    'Vanilla',\n    'Other frameworks',\n  ]\n---\n\n<PageDescription>\n\nThe library provides front-end developers and engineers a collection of reusable\nweb components to build websites and user interfaces. Adopting the library\nenables developers to use consistent markup, styles, and behavior in prototype\nand production work.\n\nThis library uses Custom Elements v1 and Shadow DOM v1 specs.\n\n</PageDescription>\n\n<InlineNotification>\n\nFor support, contact the\n[Carbon Web Components team](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/issues/new/choose).\n\nInfo on Carbon Web Components v1 can be found\n[here](https://v10.carbondesignsystem.com/developing/frameworks/web-components).\n\n</InlineNotification>\n\n## Resources\n\n<Row className=\"resource-card-group\">\n<Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n    subTitle=\"Carbon Web Components\"\n    href=\"https://web-components.carbondesignsystem.com\"\n    >\n\n![Storybook icon](images/storybook.svg)\n\n  </ResourceCard>\n</Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Try web components with CodeSandbox\"\n      href=\"https://codesandbox.io/s/github/carbon-design-system/carbon-for-ibm-dotcom/tree/feat/cwc-v2/packages/carbon-web-components/examples/codesandbox/basic\"\n    >\n      <MdxIcon name=\"codesandbox\" />\n    </ResourceCard>\n  </Column>\n</Row>\n\n## Getting started\n\n### Using CDN\n\n#### How to install\n\nAll components are available via CDN. This means that they can be added to your\napplication without the need of any bundler configuration. Each component is\navailable by the `latest` tag, or referencing a specific version (starting at\nversion `v1.16.0`):\n\n```html\n<!-- By `latest` tag -->\n<script\n  type=\"module\"\n  src=\"https://1.www.s81c.com/common/carbon/web-components/tag/v2/latest/accordion.min.js\"\n></script>\n\n<!-- By specific version -->\n<script\n  type=\"module\"\n  src=\"https://1.www.s81c.com/common/carbon/web-components/version/v2.0.0/accordion.min.js\"\n></script>\n```\n\nThese are the list of available components via CDN:\n\n- accordion.min.js\n- breadcrumb.min.js\n- button.min.js\n- checkbox.min.js\n- code-snippet.min.js\n- combo-box.min.js\n- content-switcher.min.js\n- copy.min.js\n- copy-button.min.js\n- data-table.min.js\n- date-picker.min.js\n- dropdown.min.js\n- file-uploader.min.js\n- floating-menu.min.js\n- form.min.js\n- inline-loading.min.js\n- layer.min.js\n- link.min.js\n- list.min.js\n- loading.min.js\n- modal.min.js\n- multi-select.min.js\n- notification.min.js\n- number-input.min.js\n- overflow-menu.min.js\n- pagination.min.js\n- progress-indicator.min.js\n- radio-button.min.js\n- search.min.js\n- select.min.js\n- skeleton-placeholder.min.js\n- skeleton-text.min.js\n- skip-to-content.min.js\n- slider.min.js\n- structured-list.min.js\n- tabs.min.js\n- tag.min.js\n- text-input.min.js\n- textarea.min.js\n- tile.min.js\n- toggle.min.js\n- toggle-tip.min.js\n- tooltip.min.js\n- ui-shell.min.js\n\nTo use the right-to-left (RTL) version of the artifacts, change the file\nextention from `.min.js` to `.rtl.min.js`. For example:\n\n```html\n<!-- By `latest` tag (RTL) -->\n<script\n  type=\"module\"\n  src=\"https://1.www.s81c.com/common/carbon/web-components/tag/v2/latest/accordion.rtl.min.js\"\n></script>\n\n<!-- By specific version (RTL) -->\n<script\n  type=\"module\"\n  src=\"https://1.www.s81c.com/common/carbon/web-components/version/v2.0.0/accordion.rtl.min.js\"\n></script>\n```\n\n#### Basic usage\n\nThe CDN artifacts define the custom elements for the browser, so they can be\ndirectly used once the script tag has been added to the page. For example:\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <script\n      type=\"module\"\n      src=\"https://1.www.s81c.com/common/carbon/web-components/tag/v2/latest/dropdown.min.js\"\n    ></script>\n    <style type=\"text/css\">\n      // Suppresses the custom element until it has been defined\n      cds-dropdown:not(:defined),\n      cds-dropdown-item:not(:defined) {\n        visibility: hidden;\n      }\n    </style>\n  </head>\n  <body>\n    <div id=\"app\">\n      <cds-dropdown value=\"bar\">\n        <cds-dropdown-item value=\"foo\">Foo</cds-dropdown-item>\n        <cds-dropdown-item value=\"bar\">Bar</cds-dropdown-item>\n        <cds-dropdown-item value=\"baz\">Baz</cds-dropdown-item>\n      </cds-dropdown>\n    </div>\n  </body>\n</html>\n```\n\nOur example at [CodeSandbox](https://codesandbox.io) shows usage with only CDN\nartifacts:\n\n[![Edit @carbon/web-components](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/github/carbon-design-system/carbon-for-ibm-dotcom/tree/feat/cwc-v2/packages/carbon-web-components/examples/codesandbox/cdn)\n\n### Using ES imports\n\n#### How to install\n\nTo install `@carbon/web-components` in your project, you will need to run the\nfollowing command using [npm](https://www.npmjs.com/):\n\n```bash\nnpm install -S @carbon/web-components\n```\n\nIf you prefer [Yarn](https://yarnpkg.com/en/), use the following command\ninstead:\n\n```bash\nyarn add @carbon/web-components\n```\n\n#### Basic usage\n\nOur example at [CodeSandbox](https://codesandbox.io) shows the most basic usage:\n\n[![Edit @carbon/web-components](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/github/carbon-design-system/carbon-for-ibm-dotcom/tree/feat/cwc-v2/packages/carbon-web-components/examples/codesandbox/basic)\n\nThe first thing you need to do is **set up a module bundler** to resolve\nECMAScript `import`s. The above example uses [Webpack](https://webpack.js.org)\nbut you can use other bundlers like [Rollup](https://rollupjs.org/) too.\n\nOnce you set up a module bundler, you can start importing our component modules,\nfor example:\n\n```javascript\nimport '@carbon/web-components/es/components/dropdown/index.js';\n```\n\nOnce you've imported the component modules, you can use our components in the\nsame manner as native HTML tags, for example:\n\n```html\n<cds-dropdown value=\"bar\">\n  <cds-dropdown-item value=\"foo\">Foo</cds-dropdown-item>\n  <cds-dropdown-item value=\"bar\">Bar</cds-dropdown-item>\n  <cds-dropdown-item value=\"baz\">Baz</cds-dropdown-item>\n</cds-dropdown>\n```\n\n### List of available components\n\nView available web components\n[here](https://web-components.carbondesignsystem.com). Usage information is\navailable in the notes provided with each story.\n\n### JavaScript framework integration\n\nIn addition to the available web component versions of Carbon components, this\nlibrary also supports usage with JavaScript frameworks like Angular, React, and\nVue if the desire is to use instead of the pure framework versions of Carbon\ncomponents. Specifically for React, this library comes with a wrapper\nimplementation around the Carbon Web Components for more seamless integration\nwith your React application.\n\nThis is achievable since web components is the modern browser standard, and\nworks well with other front-end frameworks that exist in the application. In\nturn, this also comes with the benefits of encapsulation within the Shadow DOM.\n\n<InlineNotification>\n\n**Note:** The approaches above detail the usage of Carbon Web Components within\npopular JavaScript frameworks. The APIs are based on how the web components are\nused, and differ from its pure framework counterparts (Carbon React, Carbon\nAngular, Carbon Vue).\n\n</InlineNotification>\n\n## Troubleshooting\n\nIf you experience any issues while getting set up with Carbon Web Components,\nplease head over to the\n[GitHub repo](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/feat/cwc-v2/packages/carbon-web-components)\nfor more guidelines and support. Please\n[create an issue](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/issues)\nif your issue does not already exist.\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/developing/frameworks/web-components.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}