{"componentChunkName":"component---src-pages-components-notification-accessibility-mdx","path":"/components/notification/accessibility/","result":{"pageContext":{"frontmatter":{"title":"Notification","description":"Notifications are messages that communicate information to the user. The two main types of notifications are toast notifications and inline notifications.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/notification/accessibility.mdx","titleType":"prepend","MdxNode":{"id":"aed81bb8-97e1-5383-a2b0-7013c246ba31","children":[],"parent":"70e73f71-2448-5feb-874b-1ddd16b0840d","internal":{"content":"---\ntitle: Notification\ndescription:\n  Notifications are messages that communicate information to the user. The two\n  main types of notifications are toast notifications and inline notifications.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<AnchorLinks>\n  <AnchorLink>How it works</AnchorLink>\n  <AnchorLink>Accessibility considerations</AnchorLink>\n  <AnchorLink>Resources</AnchorLink>\n  <AnchorLink>Accessibility testing</AnchorLink>\n</AnchorLinks>\n\n## How it works\n\nNotification Carbon components are messages that communicate information to a\nuser. The WAI-ARIA `role=\"status\"` and `role=\"log\"` are equivalent to\n`aria-live=\"polite\"`. It is used to display a message to the user in a way that\ndoes not interrupt the user's current task and queues the notification until\nwhatever task the user is currently working on is complete. If the notification\ncontains an urgent message, a `role=\"alert\"` can be used, it is equivalent to\n`aria-live=\"assertive\"`. It is used to display a message to the user that\ninterrupts the user's current task. These are considerably more disruptive to\nusers than the`role=\"status\"`or`role=\"log\"`. In either case, these notifications\nattract the userâ€™s attention without receiving focus to communicate the message.\n\nDetails pertaining to these roles include specifics around containing\ninteractive elements, focus behavior, close behavior, and semantic contents. The\n`role` of `status`, `log`, and `alert` can not contain interactive elements,\nshould not be given focus, and can optionally be closed by pressing the `Escape`\nkey. The close button is given `aria-hidden=\"true\"` so it is ignored by\nassistive technologies. Generally, plain text is preferred to be used within\nthese notifications. When read by screenreaders, any semantic meaning\nsurrounding the contents is not reflected to the user. For instace - Bold or\nitalic emphasis, and/or semantic elements such as `<li>` etc. are not read to\nthe user. If semantics are included, it should be non-essential to the\nunderstanding or meaning of the contents.\n\nNotification components are allowed interactive children (actions) though, and\nwhen an interactive element is provided, a `role=\"alertdialog\"` is used. These\nnotifications should immediately be given focus so the user can navigate through\nthe interactive elements. The close button is given an ARIA label of\n`aria-label=\"close\"`, and the icon has `aria-hidden=\"true\"` so it is ignored by\nassistive technologies. The `Tab` key is used to move focus to the action and\nclose button within the notification and the `Space` key or `Enter` key activate\nthe appropriate button within the notification. It can also be optionally closed\nvia pressing the `Escape` key.\n\n## Accessibility considerations\n\n1. Avoid using a toast notification for critical alerts or long messages because\n   they are timed and will disappear automatically making it difficult for\n   people with various disabilities to get the entire message. An alert that\n   disappears too quickly can lead to failure of the optional\n   [WCAG 2.0 success criterion 2.2.3 (AAA)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/time-limits-no-exceptions.html).\n2. Provide a means to turn off nonessential alerts to enhance usability for\n   people with visual and cognitive disabilities. Additional information is\n   available in\n   [WCAG 2.0 success criterion 2.2.4 (AAA)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/time-limits-postponed.html).\n   Note: Providing this functionality is optional.\n\n3. Ensure the use of color and hidden icons are not used as the only means of\n   conveying the importance of the notification.\n\n## Resources\n\n#### Helpful resources for creating customized accessible implementations\n\n- [W3C W3C WAI-ARIA Authoring Practices Alert Design Pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#alert)\n  covers the usage of ARIA names, state and roles.\n- [W3C W3C Web Accessibility Tutorial - User Notifications](https://www.w3.org/WAI/tutorials/forms/notifications/)\n  provides a tutorial on notification accessibility.\n- [IBM Accessibility Requirements](https://www.ibm.com/able/requirements/requirements/):\n  - [3.3.1 Error Identification](https://www.ibm.com/able/requirements/requirements/#3_3_1)\n    (WCAG Success Criteria\n    [3.3.1](https://www.w3.org/TR/UNDERSTANDING-WCAG20/minimize-error-identified.html))\n  - [3.3.2 Labels and Instructions](https://www.ibm.com/able/requirements/requirements/#3_3_2)\n    (WCAG Success Criteria\n    [3.3.2](https://www.w3.org/TR/UNDERSTANDING-WCAG20/minimize-error-cues.html))\n  - [3.3.3 Error Suggestion](https://www.ibm.com/able/requirements/requirements/#3_3_3)\n    (WCAG Success Criteria\n    [3.3.3](https://www.w3.org/TR/UNDERSTANDING-WCAG20/minimize-error-suggestions.html))\n\n## Accessibility testing\n\nAccessibility issues are tracked in the\n[Carbon Component GitHub repository](https://github.com/carbon-design-system/carbon/issues?q=is%3Aopen+label%3A%22type%3A+a11y+%E2%99%BF%22+label%3A%22component%3A+notification%22+).\n\n### Automated test\n\n<Row>\n  <Column noGutterSm>\n    <StructuredListWrapper>\n      <StructuredListHead>\n        <StructuredListRow head>\n          <StructuredListCell head>\n            Automated test environment\n          </StructuredListCell>\n          <StructuredListCell head>Results</StructuredListCell>\n        </StructuredListRow>\n      </StructuredListHead>\n      <StructuredListBody>\n        <StructuredListRow>\n          <StructuredListCell>\n            - macOS Mojave version 10.14.6 with VoiceOver\n            <br />\n            - Chrome version 77.0.3865.90\n            <br />\n            - Dynamic Assessment Plugin version 1.8.0.0 - IBM Accessibility WCAG\n            2.1 Sept. 2019 Ruleset\n            <br />- Carbon React version 7.7.1\n          </StructuredListCell>\n          <StructuredListCell>\n            <strong>DAP Test</strong>\n            <br />- Violations\n          </StructuredListCell>\n        </StructuredListRow>\n      </StructuredListBody>\n    </StructuredListWrapper>\n  </Column>\n</Row>\n\n### macOS screen reader tests\n\n<Row>\n  <Column noGutterSm>\n    <StructuredListWrapper>\n      <StructuredListHead>\n        <StructuredListRow head>\n          <StructuredListCell head>Environment </StructuredListCell>\n          <StructuredListCell head>Results</StructuredListCell>\n        </StructuredListRow>\n      </StructuredListHead>\n      <StructuredListBody>\n        <StructuredListRow>\n          <StructuredListCell>\n            - macOS Mojave version 10.14.6 with VoiceOver\n            <br />\n            - Chrome version 77.0.3865.90\n            <br />- Carbon React version 7.7.1\n          </StructuredListCell>\n          <StructuredListCell>\n            <strong>VoiceOver(VO) test:</strong>\n            <OrderedList>\n              <ListItem>\n                Press Control-Option-Shift keys to enter the Web content.\n              </ListItem>\n              <ListItem>\n                Press the Tab key. VO announces the notification text and the\n                close button.\n              </ListItem>\n              <ListItem>\n                Press the Space key or Enter key to close the notification.\n              </ListItem>\n            </OrderedList>\n          </StructuredListCell>\n        </StructuredListRow>\n        <StructuredListRow>\n          <StructuredListCell>\n            - macOS Mojave version 10.14.6 with VoiceOver\n            <br />\n            - Safari version 13.0.2\n            <br />- Carbon React version 7.7.1\n          </StructuredListCell>\n          <StructuredListCell>\n            <strong>VoiceOver(VO) test:</strong>\n            <OrderedList>\n              <ListItem>\n                Press Control-Option-Shift keys to enter the Web content.\n              </ListItem>\n              <ListItem>\n                Press the Tab key. VO announces the notification text and the\n                close button.\n              </ListItem>\n              <ListItem>\n                Press the Space key or Enter key to close the notification.\n              </ListItem>\n            </OrderedList>\n          </StructuredListCell>\n        </StructuredListRow>\n      </StructuredListBody>\n    </StructuredListWrapper>\n  </Column>\n</Row>\n\n### Windows screen reader tests\n\n<Row>\n  <Column noGutterSm>\n    <StructuredListWrapper>\n      <StructuredListHead>\n        <StructuredListRow head>\n          <StructuredListCell head>Environment</StructuredListCell>\n          <StructuredListCell head>Results</StructuredListCell>\n        </StructuredListRow>\n      </StructuredListHead>\n      <StructuredListBody>\n        <StructuredListRow>\n          <StructuredListCell>\n            - Microsoft Windows 10\n            <br />\n            - Firefox version 68\n            <br />\n            - JAWS version 18\n            <br />- Carbon React version 7.7.1\n          </StructuredListCell>\n          <StructuredListCell>\n            <strong>JAWS test:</strong>\n            <OrderedList>\n              <ListItem>\n                Press H, JAWS announce the notification title.\n              </ListItem>\n              <ListItem>\n                Press Alt-Down Arrow, JAWS announces each line of the\n                notification text.\n              </ListItem>\n              <ListItem>\n                Press the Tab, JAWS announces the close button.\n              </ListItem>\n              <ListItem>\n                Press the Space key or Enter key to close the notification.\n              </ListItem>\n            </OrderedList>\n          </StructuredListCell>\n        </StructuredListRow>\n      </StructuredListBody>\n    </StructuredListWrapper>\n  </Column>\n</Row>\n\n### iOS screen reader tests\n\n<Row>\n  <Column noGutterSm>\n    <StructuredListWrapper>\n      <StructuredListRow head>\n        <StructuredListCell head>Environment </StructuredListCell>\n        <StructuredListCell head>Results</StructuredListCell>\n      </StructuredListRow>\n      <StructuredListBody>\n        <StructuredListRow>\n          <StructuredListCell>\n            - iOS version 13.1.3 with VoiceOver\n            <br />\n            - Safari version 13.1.3\n            <br />- Carbon React version 7.7.1\n          </StructuredListCell>\n          <StructuredListCell>\n            <strong>VoiceOver test:</strong>\n            <OrderedList>\n              <ListItem>\n                Swipe right to the notification and to read the notification\n                text.\n              </ListItem>\n              <ListItem>\n                Swipe right to the X icon. VO announces the close button.\n              </ListItem>\n              <ListItem>Double tap to close the notification.</ListItem>\n            </OrderedList>\n          </StructuredListCell>\n        </StructuredListRow>\n      </StructuredListBody>\n    </StructuredListWrapper>\n  </Column>\n</Row>\n","type":"Mdx","contentDigest":"6678c959ae6560db844bb4dc82112b00","owner":"gatsby-plugin-mdx","counter":4820},"frontmatter":{"title":"Notification","description":"Notifications are messages that communicate information to the user. The two main types of notifications are toast notifications and inline notifications.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Notification\ndescription:\n  Notifications are messages that communicate information to the user. The two\n  main types of notifications are toast notifications and inline notifications.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<AnchorLinks>\n  <AnchorLink>How it works</AnchorLink>\n  <AnchorLink>Accessibility considerations</AnchorLink>\n  <AnchorLink>Resources</AnchorLink>\n  <AnchorLink>Accessibility testing</AnchorLink>\n</AnchorLinks>\n\n## How it works\n\nNotification Carbon components are messages that communicate information to a\nuser. The WAI-ARIA `role=\"status\"` and `role=\"log\"` are equivalent to\n`aria-live=\"polite\"`. It is used to display a message to the user in a way that\ndoes not interrupt the user's current task and queues the notification until\nwhatever task the user is currently working on is complete. If the notification\ncontains an urgent message, a `role=\"alert\"` can be used, it is equivalent to\n`aria-live=\"assertive\"`. It is used to display a message to the user that\ninterrupts the user's current task. These are considerably more disruptive to\nusers than the`role=\"status\"`or`role=\"log\"`. In either case, these notifications\nattract the userâ€™s attention without receiving focus to communicate the message.\n\nDetails pertaining to these roles include specifics around containing\ninteractive elements, focus behavior, close behavior, and semantic contents. The\n`role` of `status`, `log`, and `alert` can not contain interactive elements,\nshould not be given focus, and can optionally be closed by pressing the `Escape`\nkey. The close button is given `aria-hidden=\"true\"` so it is ignored by\nassistive technologies. Generally, plain text is preferred to be used within\nthese notifications. When read by screenreaders, any semantic meaning\nsurrounding the contents is not reflected to the user. For instace - Bold or\nitalic emphasis, and/or semantic elements such as `<li>` etc. are not read to\nthe user. If semantics are included, it should be non-essential to the\nunderstanding or meaning of the contents.\n\nNotification components are allowed interactive children (actions) though, and\nwhen an interactive element is provided, a `role=\"alertdialog\"` is used. These\nnotifications should immediately be given focus so the user can navigate through\nthe interactive elements. The close button is given an ARIA label of\n`aria-label=\"close\"`, and the icon has `aria-hidden=\"true\"` so it is ignored by\nassistive technologies. The `Tab` key is used to move focus to the action and\nclose button within the notification and the `Space` key or `Enter` key activate\nthe appropriate button within the notification. It can also be optionally closed\nvia pressing the `Escape` key.\n\n## Accessibility considerations\n\n1. Avoid using a toast notification for critical alerts or long messages because\n   they are timed and will disappear automatically making it difficult for\n   people with various disabilities to get the entire message. An alert that\n   disappears too quickly can lead to failure of the optional\n   [WCAG 2.0 success criterion 2.2.3 (AAA)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/time-limits-no-exceptions.html).\n2. Provide a means to turn off nonessential alerts to enhance usability for\n   people with visual and cognitive disabilities. Additional information is\n   available in\n   [WCAG 2.0 success criterion 2.2.4 (AAA)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/time-limits-postponed.html).\n   Note: Providing this functionality is optional.\n\n3. Ensure the use of color and hidden icons are not used as the only means of\n   conveying the importance of the notification.\n\n## Resources\n\n#### Helpful resources for creating customized accessible implementations\n\n- [W3C W3C WAI-ARIA Authoring Practices Alert Design Pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#alert)\n  covers the usage of ARIA names, state and roles.\n- [W3C W3C Web Accessibility Tutorial - User Notifications](https://www.w3.org/WAI/tutorials/forms/notifications/)\n  provides a tutorial on notification accessibility.\n- [IBM Accessibility Requirements](https://www.ibm.com/able/requirements/requirements/):\n  - [3.3.1 Error Identification](https://www.ibm.com/able/requirements/requirements/#3_3_1)\n    (WCAG Success Criteria\n    [3.3.1](https://www.w3.org/TR/UNDERSTANDING-WCAG20/minimize-error-identified.html))\n  - [3.3.2 Labels and Instructions](https://www.ibm.com/able/requirements/requirements/#3_3_2)\n    (WCAG Success Criteria\n    [3.3.2](https://www.w3.org/TR/UNDERSTANDING-WCAG20/minimize-error-cues.html))\n  - [3.3.3 Error Suggestion](https://www.ibm.com/able/requirements/requirements/#3_3_3)\n    (WCAG Success Criteria\n    [3.3.3](https://www.w3.org/TR/UNDERSTANDING-WCAG20/minimize-error-suggestions.html))\n\n## Accessibility testing\n\nAccessibility issues are tracked in the\n[Carbon Component GitHub repository](https://github.com/carbon-design-system/carbon/issues?q=is%3Aopen+label%3A%22type%3A+a11y+%E2%99%BF%22+label%3A%22component%3A+notification%22+).\n\n### Automated test\n\n<Row>\n  <Column noGutterSm>\n    <StructuredListWrapper>\n      <StructuredListHead>\n        <StructuredListRow head>\n          <StructuredListCell head>\n            Automated test environment\n          </StructuredListCell>\n          <StructuredListCell head>Results</StructuredListCell>\n        </StructuredListRow>\n      </StructuredListHead>\n      <StructuredListBody>\n        <StructuredListRow>\n          <StructuredListCell>\n            - macOS Mojave version 10.14.6 with VoiceOver\n            <br />\n            - Chrome version 77.0.3865.90\n            <br />\n            - Dynamic Assessment Plugin version 1.8.0.0 - IBM Accessibility WCAG\n            2.1 Sept. 2019 Ruleset\n            <br />- Carbon React version 7.7.1\n          </StructuredListCell>\n          <StructuredListCell>\n            <strong>DAP Test</strong>\n            <br />- Violations\n          </StructuredListCell>\n        </StructuredListRow>\n      </StructuredListBody>\n    </StructuredListWrapper>\n  </Column>\n</Row>\n\n### macOS screen reader tests\n\n<Row>\n  <Column noGutterSm>\n    <StructuredListWrapper>\n      <StructuredListHead>\n        <StructuredListRow head>\n          <StructuredListCell head>Environment </StructuredListCell>\n          <StructuredListCell head>Results</StructuredListCell>\n        </StructuredListRow>\n      </StructuredListHead>\n      <StructuredListBody>\n        <StructuredListRow>\n          <StructuredListCell>\n            - macOS Mojave version 10.14.6 with VoiceOver\n            <br />\n            - Chrome version 77.0.3865.90\n            <br />- Carbon React version 7.7.1\n          </StructuredListCell>\n          <StructuredListCell>\n            <strong>VoiceOver(VO) test:</strong>\n            <OrderedList>\n              <ListItem>\n                Press Control-Option-Shift keys to enter the Web content.\n              </ListItem>\n              <ListItem>\n                Press the Tab key. VO announces the notification text and the\n                close button.\n              </ListItem>\n              <ListItem>\n                Press the Space key or Enter key to close the notification.\n              </ListItem>\n            </OrderedList>\n          </StructuredListCell>\n        </StructuredListRow>\n        <StructuredListRow>\n          <StructuredListCell>\n            - macOS Mojave version 10.14.6 with VoiceOver\n            <br />\n            - Safari version 13.0.2\n            <br />- Carbon React version 7.7.1\n          </StructuredListCell>\n          <StructuredListCell>\n            <strong>VoiceOver(VO) test:</strong>\n            <OrderedList>\n              <ListItem>\n                Press Control-Option-Shift keys to enter the Web content.\n              </ListItem>\n              <ListItem>\n                Press the Tab key. VO announces the notification text and the\n                close button.\n              </ListItem>\n              <ListItem>\n                Press the Space key or Enter key to close the notification.\n              </ListItem>\n            </OrderedList>\n          </StructuredListCell>\n        </StructuredListRow>\n      </StructuredListBody>\n    </StructuredListWrapper>\n  </Column>\n</Row>\n\n### Windows screen reader tests\n\n<Row>\n  <Column noGutterSm>\n    <StructuredListWrapper>\n      <StructuredListHead>\n        <StructuredListRow head>\n          <StructuredListCell head>Environment</StructuredListCell>\n          <StructuredListCell head>Results</StructuredListCell>\n        </StructuredListRow>\n      </StructuredListHead>\n      <StructuredListBody>\n        <StructuredListRow>\n          <StructuredListCell>\n            - Microsoft Windows 10\n            <br />\n            - Firefox version 68\n            <br />\n            - JAWS version 18\n            <br />- Carbon React version 7.7.1\n          </StructuredListCell>\n          <StructuredListCell>\n            <strong>JAWS test:</strong>\n            <OrderedList>\n              <ListItem>\n                Press H, JAWS announce the notification title.\n              </ListItem>\n              <ListItem>\n                Press Alt-Down Arrow, JAWS announces each line of the\n                notification text.\n              </ListItem>\n              <ListItem>\n                Press the Tab, JAWS announces the close button.\n              </ListItem>\n              <ListItem>\n                Press the Space key or Enter key to close the notification.\n              </ListItem>\n            </OrderedList>\n          </StructuredListCell>\n        </StructuredListRow>\n      </StructuredListBody>\n    </StructuredListWrapper>\n  </Column>\n</Row>\n\n### iOS screen reader tests\n\n<Row>\n  <Column noGutterSm>\n    <StructuredListWrapper>\n      <StructuredListRow head>\n        <StructuredListCell head>Environment </StructuredListCell>\n        <StructuredListCell head>Results</StructuredListCell>\n      </StructuredListRow>\n      <StructuredListBody>\n        <StructuredListRow>\n          <StructuredListCell>\n            - iOS version 13.1.3 with VoiceOver\n            <br />\n            - Safari version 13.1.3\n            <br />- Carbon React version 7.7.1\n          </StructuredListCell>\n          <StructuredListCell>\n            <strong>VoiceOver test:</strong>\n            <OrderedList>\n              <ListItem>\n                Swipe right to the notification and to read the notification\n                text.\n              </ListItem>\n              <ListItem>\n                Swipe right to the X icon. VO announces the close button.\n              </ListItem>\n              <ListItem>Double tap to close the notification.</ListItem>\n            </OrderedList>\n          </StructuredListCell>\n        </StructuredListRow>\n      </StructuredListBody>\n    </StructuredListWrapper>\n  </Column>\n</Row>\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/notification/accessibility.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}