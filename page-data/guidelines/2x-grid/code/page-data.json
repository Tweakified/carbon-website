{"componentChunkName":"component---src-pages-guidelines-2-x-grid-code-mdx","path":"/guidelines/2x-grid/code/","result":{"pageContext":{"frontmatter":{"title":"2x Grid","description":"The grid is the framework for all the visual elements and typography at IBM. It’s fundamental to everything we design.","tabs":["Overview","Usage","Code"]},"relativePagePath":"/guidelines/2x-grid/code.mdx","titleType":"prepend","MdxNode":{"id":"eaa707b2-68ff-569c-8ab3-81f7ea3b7d4b","children":[],"parent":"b11d7336-c87d-501a-a81f-2cef7c56d1d7","internal":{"content":"---\ntitle: 2x Grid\ndescription:\n  The grid is the framework for all the visual elements and typography at IBM.\n  It’s fundamental to everything we design.\ntabs: ['Overview', 'Usage', 'Code']\n---\n\n<PageDescription>\n\nThe Carbon Grid package helps developers build digital experiences with the 2x\nGrid. The project allows you to use CSS grid to build a variety of layouts.\n\n</PageDescription>\n\n<InlineNotification>\n\nIf you're using `@carbon/react`, you you probably don't need to install the grid\npackage separately. See our [Carbon React](/developing/frameworks/react/) guide\nto start building.\n\n</InlineNotification>\n\n<AnchorLinks>\n\n<AnchorLink>Documentation</AnchorLink>\n<AnchorLink>API & Helpers</AnchorLink>\n<AnchorLink>Legacy</AnchorLink>\n\n</AnchorLinks>\n\n## Documentation\n\n### CSS Grid\n\nCarbon provides grid components, using CSS Grid to help developers use the 2x\nGrid. These components include `Grid` and `Column` and allow you to define\ncolumn widths by breakpoint, based on a 16 column grid.\n\n<Row className=\"resource-card-group\">\n  <Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n    subTitle=\"React\"\n    href=\"https://react.carbondesignsystem.com/?path=/docs/elements-grid--default\"\n    >\n\n<MdxIcon name=\"react\" />\n\n  </ResourceCard>\n</Column>\n<Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"CSS Grid demo\"\n      href=\"https://carbon-elements.netlify.app/grid/examples/css-grid/\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n\n### AspectRatio\n\nWhen designing fluid layouts, it’s helpful for an asset or card to be a specific\naspect ratio. The `AspectRatio` component supports rendering your content in a\nspecific aspect ratio through the ratio prop. This allows you to specify the\nproportion between the width and the height of your content.\n\n<Row className=\"resource-card-group\">\n  <Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n    subTitle=\"React\"\n    href=\"https://react.carbondesignsystem.com/?path=/story/components-aspectratio--default\"\n    >\n\n<MdxIcon name=\"react\" />\n\n  </ResourceCard>\n</Column>\n <Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n    subTitle=\"Vue\"\n    href=\"https://vue.carbondesignsystem.com/?path=/story/components-cvaspectratio--default\"\n    >\n\n<MdxIcon name=\"vue\" />\n\n  </ResourceCard>\n</Column>\n</Row>\n\n## API & Helpers\n\nThere are many ways to make the 2x Grid work for your application using our API.\nThe examples below illustrate two ways of removing visibility of a given\ncomponent based on the breakpoint.\n\n```css\n.component {\n  display: block;\n\n  /* applies styles inside mixin on md breakpoint or below, like max-width */\n  @include breakpoint-down('md') {\n    display: none;\n  }\n}\n\n.component {\n  display: none;\n\n  /* applies styles inside mixin on lg breakpoint and above */\n  @include breakpoint('lg') {\n    display: block;\n  }\n}\n```\n\nIn addition, you can also use Helpers to control what is being displayed on the\nscreen at a given breakpoint.\n\n```css\n@use '@carbon/styles/scss/utilities/helper-classes';\n\n.my-class {\n  @include helper-classes.hide-at-sm();\n}\n```\n\n<Row className=\"resource-card-group\">\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Carbon grid package\"\n      href=\"https://github.com/carbon-design-system/carbon/tree/main/packages/grid\"\n    >\n\n<MdxIcon name=\"github\" />\n\n  </ResourceCard>\n  </Column>\n   <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Carbon grid docs API\"\n      href=\"https://github.com/carbon-design-system/carbon/blob/main/packages/grid/docs/sass.md#api\"\n    >\n\n<MdxIcon name=\"github\" />\n\n  </ResourceCard>\n  </Column>\n\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Hide at Breakpoint Helpers on Storybook\"\n      href=\"https://react.carbondesignsystem.com/?path=/story/helpers-hideatbreakpoint--hide-at-breakpoint\"\n    >\n\n<MdxIcon name=\"react\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n\n## Legacy\n\n### Flexbox Grid\n\nThe default grid in v11 is based off of CSS Grid, to enable the legacy\n[FlexGrid](https://react.carbondesignsystem.com/?path=/docs/elements-flexgrid--auto-columns)\nimplementation, built using Flexbox, you will need to include the following in\nyour Sass files:\n\n```scss\n@use '@carbon/grid';\n\n// Emit the flex-grid styles\n@include grid.flex-grid();\n```\n\n<Row className=\"resource-card-group\">\n   <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"React\"\n      href=\"https://react.carbondesignsystem.com/?path=/story/elements-flexgrid--auto-columns\"\n    >\n\n<MdxIcon name=\"react\" />\n\n  </ResourceCard>\n  </Column>\n<Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Angular\"\n      href=\"https://angular.carbondesignsystem.com/?path=/story/components-grid--basic\"\n    >\n\n<MdxIcon name=\"angular\" />\n\n  </ResourceCard>\n  </Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Vue\"\n      href=\"https://vue.carbondesignsystem.com/?path=/story/components-cvgrid--auto-columns\"\n    >\n\n<MdxIcon name=\"vue\" />\n\n  </ResourceCard>\n  </Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"FlexGrid demo\"\n      href=\"https://carbon-elements.netlify.app/grid/examples/preview/\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n","type":"Mdx","contentDigest":"5b4c3dca9b01aa2f4fa2ad5ea714537b","owner":"gatsby-plugin-mdx","counter":4640},"frontmatter":{"title":"2x Grid","description":"The grid is the framework for all the visual elements and typography at IBM. It’s fundamental to everything we design.","tabs":["Overview","Usage","Code"]},"exports":{},"rawBody":"---\ntitle: 2x Grid\ndescription:\n  The grid is the framework for all the visual elements and typography at IBM.\n  It’s fundamental to everything we design.\ntabs: ['Overview', 'Usage', 'Code']\n---\n\n<PageDescription>\n\nThe Carbon Grid package helps developers build digital experiences with the 2x\nGrid. The project allows you to use CSS grid to build a variety of layouts.\n\n</PageDescription>\n\n<InlineNotification>\n\nIf you're using `@carbon/react`, you you probably don't need to install the grid\npackage separately. See our [Carbon React](/developing/frameworks/react/) guide\nto start building.\n\n</InlineNotification>\n\n<AnchorLinks>\n\n<AnchorLink>Documentation</AnchorLink>\n<AnchorLink>API & Helpers</AnchorLink>\n<AnchorLink>Legacy</AnchorLink>\n\n</AnchorLinks>\n\n## Documentation\n\n### CSS Grid\n\nCarbon provides grid components, using CSS Grid to help developers use the 2x\nGrid. These components include `Grid` and `Column` and allow you to define\ncolumn widths by breakpoint, based on a 16 column grid.\n\n<Row className=\"resource-card-group\">\n  <Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n    subTitle=\"React\"\n    href=\"https://react.carbondesignsystem.com/?path=/docs/elements-grid--default\"\n    >\n\n<MdxIcon name=\"react\" />\n\n  </ResourceCard>\n</Column>\n<Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"CSS Grid demo\"\n      href=\"https://carbon-elements.netlify.app/grid/examples/css-grid/\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n\n### AspectRatio\n\nWhen designing fluid layouts, it’s helpful for an asset or card to be a specific\naspect ratio. The `AspectRatio` component supports rendering your content in a\nspecific aspect ratio through the ratio prop. This allows you to specify the\nproportion between the width and the height of your content.\n\n<Row className=\"resource-card-group\">\n  <Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n    subTitle=\"React\"\n    href=\"https://react.carbondesignsystem.com/?path=/story/components-aspectratio--default\"\n    >\n\n<MdxIcon name=\"react\" />\n\n  </ResourceCard>\n</Column>\n <Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n    subTitle=\"Vue\"\n    href=\"https://vue.carbondesignsystem.com/?path=/story/components-cvaspectratio--default\"\n    >\n\n<MdxIcon name=\"vue\" />\n\n  </ResourceCard>\n</Column>\n</Row>\n\n## API & Helpers\n\nThere are many ways to make the 2x Grid work for your application using our API.\nThe examples below illustrate two ways of removing visibility of a given\ncomponent based on the breakpoint.\n\n```css\n.component {\n  display: block;\n\n  /* applies styles inside mixin on md breakpoint or below, like max-width */\n  @include breakpoint-down('md') {\n    display: none;\n  }\n}\n\n.component {\n  display: none;\n\n  /* applies styles inside mixin on lg breakpoint and above */\n  @include breakpoint('lg') {\n    display: block;\n  }\n}\n```\n\nIn addition, you can also use Helpers to control what is being displayed on the\nscreen at a given breakpoint.\n\n```css\n@use '@carbon/styles/scss/utilities/helper-classes';\n\n.my-class {\n  @include helper-classes.hide-at-sm();\n}\n```\n\n<Row className=\"resource-card-group\">\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Carbon grid package\"\n      href=\"https://github.com/carbon-design-system/carbon/tree/main/packages/grid\"\n    >\n\n<MdxIcon name=\"github\" />\n\n  </ResourceCard>\n  </Column>\n   <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Carbon grid docs API\"\n      href=\"https://github.com/carbon-design-system/carbon/blob/main/packages/grid/docs/sass.md#api\"\n    >\n\n<MdxIcon name=\"github\" />\n\n  </ResourceCard>\n  </Column>\n\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Hide at Breakpoint Helpers on Storybook\"\n      href=\"https://react.carbondesignsystem.com/?path=/story/helpers-hideatbreakpoint--hide-at-breakpoint\"\n    >\n\n<MdxIcon name=\"react\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n\n## Legacy\n\n### Flexbox Grid\n\nThe default grid in v11 is based off of CSS Grid, to enable the legacy\n[FlexGrid](https://react.carbondesignsystem.com/?path=/docs/elements-flexgrid--auto-columns)\nimplementation, built using Flexbox, you will need to include the following in\nyour Sass files:\n\n```scss\n@use '@carbon/grid';\n\n// Emit the flex-grid styles\n@include grid.flex-grid();\n```\n\n<Row className=\"resource-card-group\">\n   <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"React\"\n      href=\"https://react.carbondesignsystem.com/?path=/story/elements-flexgrid--auto-columns\"\n    >\n\n<MdxIcon name=\"react\" />\n\n  </ResourceCard>\n  </Column>\n<Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Angular\"\n      href=\"https://angular.carbondesignsystem.com/?path=/story/components-grid--basic\"\n    >\n\n<MdxIcon name=\"angular\" />\n\n  </ResourceCard>\n  </Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Vue\"\n      href=\"https://vue.carbondesignsystem.com/?path=/story/components-cvgrid--auto-columns\"\n    >\n\n<MdxIcon name=\"vue\" />\n\n  </ResourceCard>\n  </Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"FlexGrid demo\"\n      href=\"https://carbon-elements.netlify.app/grid/examples/preview/\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/guidelines/2x-grid/code.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}