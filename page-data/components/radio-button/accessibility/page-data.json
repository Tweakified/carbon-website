{"componentChunkName":"component---src-pages-components-radio-button-accessibility-mdx","path":"/components/radio-button/accessibility/","result":{"pageContext":{"frontmatter":{"title":"Radio button","description":"Radio buttons are used when two or more options are mutually exclusive, meaning the user must select only one option.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/radio-button/accessibility.mdx","titleType":"prepend","MdxNode":{"id":"3e2174a9-bf95-5aba-9f1b-d3a9eb6085d9","children":[],"parent":"842b2185-19ed-5e25-ba9e-53bb240bd194","internal":{"content":"---\ntitle: Radio button\ndescription:\n  Radio buttons are used when two or more options are mutually exclusive,\n  meaning the user must select only one option.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<PageDescription>\n\nNo accessibility annotations are needed for radio buttons, but keep these\nconsiderations in mind if you are modifying Carbon or creating a custom\ncomponent.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via the keyboard. Carbon incorporates many\nother accessibility considerations, some of which are described below.\n\n### Keyboard interaction\n\nA group of radio buttons takes a single tab stop. Carbon requires an item to be\nselected by default, and this item will always take focus. The user changes the\nselected radio button using the arrow keys (up/down or left/right). Pressing\n`Tab` again will move focus out of the radio button group to the next component.\n\n<Row>\n<Column colLg={8}>\n\n![example of tabbing into a radio button group and arrowing between selections](images/radio-button-accessibility-1.png)\n\n<Caption>\n  A radio button group is a single tab stop and radio buttons are selected using\n  arrow keys.\n</Caption>\n\n</Column>\n</Row>\n\n### Labeling and states\n\nCarbon surfaces the labeling of radio buttons and groups to screen readers and\nother assistive technologies. Carbon also provides state and context\ninformation, such as the number of items in the radio button group.\n\n<Row>\n<Column colLg={8}>\n\n![\"color group, Purple radio button checked, 2 of 3\"](images/radio-button-accessibility-2.png)\n\n<Caption>\n  JAWS screen reader output, based on the information provided by Carbon.\n</Caption>\n\n</Column>\n</Row>\n\n## Development considerations\n\nKeep this in mind if you’re modifying Carbon or creating a custom component.\n\n- Carbon uses `fieldset` and `legend` to group and label sets of radio buttons.\n- Carbon uses `label` and `for` to programmatically connect radio buttons with\n  their labels.\n- Required radio button groups must be identified programmatically, either via\n  the label or with `aria-required`.\n- See the\n  [ARIA authoring practices](https://www.w3.org/WAI/ARIA/apg/patterns/radiobutton/)\n  for more considerations.\n","type":"Mdx","contentDigest":"b2d10e3fede92982955db710bbe3474d","owner":"gatsby-plugin-mdx","counter":4688},"frontmatter":{"title":"Radio button","description":"Radio buttons are used when two or more options are mutually exclusive, meaning the user must select only one option.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Radio button\ndescription:\n  Radio buttons are used when two or more options are mutually exclusive,\n  meaning the user must select only one option.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<PageDescription>\n\nNo accessibility annotations are needed for radio buttons, but keep these\nconsiderations in mind if you are modifying Carbon or creating a custom\ncomponent.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via the keyboard. Carbon incorporates many\nother accessibility considerations, some of which are described below.\n\n### Keyboard interaction\n\nA group of radio buttons takes a single tab stop. Carbon requires an item to be\nselected by default, and this item will always take focus. The user changes the\nselected radio button using the arrow keys (up/down or left/right). Pressing\n`Tab` again will move focus out of the radio button group to the next component.\n\n<Row>\n<Column colLg={8}>\n\n![example of tabbing into a radio button group and arrowing between selections](images/radio-button-accessibility-1.png)\n\n<Caption>\n  A radio button group is a single tab stop and radio buttons are selected using\n  arrow keys.\n</Caption>\n\n</Column>\n</Row>\n\n### Labeling and states\n\nCarbon surfaces the labeling of radio buttons and groups to screen readers and\nother assistive technologies. Carbon also provides state and context\ninformation, such as the number of items in the radio button group.\n\n<Row>\n<Column colLg={8}>\n\n![\"color group, Purple radio button checked, 2 of 3\"](images/radio-button-accessibility-2.png)\n\n<Caption>\n  JAWS screen reader output, based on the information provided by Carbon.\n</Caption>\n\n</Column>\n</Row>\n\n## Development considerations\n\nKeep this in mind if you’re modifying Carbon or creating a custom component.\n\n- Carbon uses `fieldset` and `legend` to group and label sets of radio buttons.\n- Carbon uses `label` and `for` to programmatically connect radio buttons with\n  their labels.\n- Required radio button groups must be identified programmatically, either via\n  the label or with `aria-required`.\n- See the\n  [ARIA authoring practices](https://www.w3.org/WAI/ARIA/apg/patterns/radiobutton/)\n  for more considerations.\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/radio-button/accessibility.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}