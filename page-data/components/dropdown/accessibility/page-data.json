{"componentChunkName":"component---src-pages-components-dropdown-accessibility-mdx","path":"/components/dropdown/accessibility/","result":{"pageContext":{"frontmatter":{"title":"Dropdown","description":"Dropdowns present a list of options that can be used to filter or sort existing content. They can also be used as menus.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/dropdown/accessibility.mdx","titleType":"prepend","MdxNode":{"id":"37579916-ed64-5767-bd07-339a976b0b35","children":[],"parent":"44d9bf03-bf7b-5569-b15e-cdc16b1b33ec","internal":{"content":"---\ntitle: Dropdown\ndescription:\n  Dropdowns present a list of options that can be used to filter or sort\n  existing content. They can also be used as menus.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport A11yStatus from 'components/A11yStatus';\n\n<PageDescription>\n\nNo accessibility annotations are needed for dropdowns, but keep these\nconsiderations in mind if you are modifying Carbon or creating a custom\ncomponent.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n<A11yStatus\n  layout=\"table\"\n  components={[\n    'Dropdown',\n    'Multiselect',\n    'Combo box',\n    'Fluid dropdown',\n    'Fluid multiselect',\n    'Fluid combo box',\n  ]}\n/>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via the keyboard. Carbon incorporates many\nother accessibility considerations, some of which are described below.\n\n### Keyboard interactions\n\nA dropdown component and its variants multiselect and combo box are reached by\n`Tab`, with navigation of the options by `Up` and `Down` arrow keys. However,\nthe keys for opening the component and selecting its options are different for\neach variant.\n\n<Row>\n<Column colLg={8}>\n\n![Tab to dropdown then operate with arrow keys](images/dropdown-accessibility-1.png)\n\n<Caption>\n  Dropdowns are in the tab order and operable by Up and Down arrow keys, once\n  opened.\n</Caption>\n\n</Column>\n</Row>\n\n#### Dropdown\n\nThe default dropdown opens with `Enter`, `Space`, or `Down arrow`, with focus\nmoving to the currently selected option. Arrow keys change options, and any\noption with focus is selected with `Space` or `Enter`, which also closes the\ndropdown. Pressing `Esc` or `Tab` closes a dropdown without changing the\nselected option.\n\n<Row>\n<Column colLg={8}>\n\n![Dropdowns are activated and their options selected with Space or Enter keys. Esc closes without changing option](images/dropdown-accessibility-2.png)\n\n<Caption>\n  The Space and Enter keys can be used to open dropdowns and also select an\n  option with focus. Esc cancels and closes the interaction.\n</Caption>\n\n</Column>\n</Row>\n\n#### Multiselect\n\nThe multiselect opens with the `Enter` or `Space` keys, which are also used to\ntoggle the selection of any option. Once items are selected, a tag appears in\nthe field, showing a numerical representation of the number of items selected\nalong with an ‘x’. Pressing `Esc` closes the multiselect. Pressing `Delete`\nwhile focus is in the collapsed field will clear all selected options.\n\n<Row>\n<Column colLg={8}>\n\n![Space and Enter keys open multiselects and toggle the selection of checkbox options. Esc closes.](images/dropdown-accessibility-3.png)\n\n<Caption>\n  Space and Enter keys open multiselects and toggle the state of the checkboxes\n  in the list. Esc closes the list.\n</Caption>\n\n</Column>\n</Row>\n\n#### Combo box\n\nThe combo box's operation is quite different, since it is a combination of a\ntext input and a dropdown. `Enter` or the `Up` or `Down` arrow keys will open\nthe list of options, as will typing any character or string of characters (which\nwill also filter the list to only show items that match the typed string).\nPressing `Esc` will clear the input and collapse the list. Pressing `Enter` will\nselect a highlighted option and collapse the list. (If nothing is highlighted in\nthe list, pressing `Enter` will toggle the combo box open and closed.) `Space`\ncannot be used for selecting, as pressing it will submit a space character into\nthe filter string.\n\n<Row>\n<Column colLg={8}>\n\n![The Enter key opens and selects items in a combo box. Arrow keys can open and navigate the options. Esc clears the input and closes.](images/dropdown-accessibility-4.png)\n\n<Caption>\n  Combo boxes can be opened with the Enter or Up and Down arrow keys. Enter\n  selects the highlighted option in the list. Esc clears the input and closes\n  the combo box.\n</Caption>\n\n</Column>\n</Row>\n\n## Development considerations\n\nKeep these considerations in mind if you are modifying Carbon or creating a\ncustom component.\n\n- The dropdown and multiselect variant use a `button` with\n  `aria-haspopup=\"listbox\"`.\n- The combo box uses an input with `role=\"combo box\"`,\n  `aria-autocomplete=\"list\"`, `aria-haspopup=\"listbox\"` and\n  `autocomplete=\"off\"`.\n- The combo box uses `aria-controls` for a div with `role=\"listbox\"`.\n- All variants use `aria-expanded` to track the state of the listbox.\n- See the\n  [ARIA authoring practices for combo box](https://w3c.github.io/aria-practices/#combbox)\n  for more considerations.\n","type":"Mdx","contentDigest":"078ae98dbd4715b9e059b198faa6bb5b","owner":"gatsby-plugin-mdx","counter":3213},"frontmatter":{"title":"Dropdown","description":"Dropdowns present a list of options that can be used to filter or sort existing content. They can also be used as menus.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Dropdown\ndescription:\n  Dropdowns present a list of options that can be used to filter or sort\n  existing content. They can also be used as menus.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport A11yStatus from 'components/A11yStatus';\n\n<PageDescription>\n\nNo accessibility annotations are needed for dropdowns, but keep these\nconsiderations in mind if you are modifying Carbon or creating a custom\ncomponent.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n<A11yStatus\n  layout=\"table\"\n  components={[\n    'Dropdown',\n    'Multiselect',\n    'Combo box',\n    'Fluid dropdown',\n    'Fluid multiselect',\n    'Fluid combo box',\n  ]}\n/>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via the keyboard. Carbon incorporates many\nother accessibility considerations, some of which are described below.\n\n### Keyboard interactions\n\nA dropdown component and its variants multiselect and combo box are reached by\n`Tab`, with navigation of the options by `Up` and `Down` arrow keys. However,\nthe keys for opening the component and selecting its options are different for\neach variant.\n\n<Row>\n<Column colLg={8}>\n\n![Tab to dropdown then operate with arrow keys](images/dropdown-accessibility-1.png)\n\n<Caption>\n  Dropdowns are in the tab order and operable by Up and Down arrow keys, once\n  opened.\n</Caption>\n\n</Column>\n</Row>\n\n#### Dropdown\n\nThe default dropdown opens with `Enter`, `Space`, or `Down arrow`, with focus\nmoving to the currently selected option. Arrow keys change options, and any\noption with focus is selected with `Space` or `Enter`, which also closes the\ndropdown. Pressing `Esc` or `Tab` closes a dropdown without changing the\nselected option.\n\n<Row>\n<Column colLg={8}>\n\n![Dropdowns are activated and their options selected with Space or Enter keys. Esc closes without changing option](images/dropdown-accessibility-2.png)\n\n<Caption>\n  The Space and Enter keys can be used to open dropdowns and also select an\n  option with focus. Esc cancels and closes the interaction.\n</Caption>\n\n</Column>\n</Row>\n\n#### Multiselect\n\nThe multiselect opens with the `Enter` or `Space` keys, which are also used to\ntoggle the selection of any option. Once items are selected, a tag appears in\nthe field, showing a numerical representation of the number of items selected\nalong with an ‘x’. Pressing `Esc` closes the multiselect. Pressing `Delete`\nwhile focus is in the collapsed field will clear all selected options.\n\n<Row>\n<Column colLg={8}>\n\n![Space and Enter keys open multiselects and toggle the selection of checkbox options. Esc closes.](images/dropdown-accessibility-3.png)\n\n<Caption>\n  Space and Enter keys open multiselects and toggle the state of the checkboxes\n  in the list. Esc closes the list.\n</Caption>\n\n</Column>\n</Row>\n\n#### Combo box\n\nThe combo box's operation is quite different, since it is a combination of a\ntext input and a dropdown. `Enter` or the `Up` or `Down` arrow keys will open\nthe list of options, as will typing any character or string of characters (which\nwill also filter the list to only show items that match the typed string).\nPressing `Esc` will clear the input and collapse the list. Pressing `Enter` will\nselect a highlighted option and collapse the list. (If nothing is highlighted in\nthe list, pressing `Enter` will toggle the combo box open and closed.) `Space`\ncannot be used for selecting, as pressing it will submit a space character into\nthe filter string.\n\n<Row>\n<Column colLg={8}>\n\n![The Enter key opens and selects items in a combo box. Arrow keys can open and navigate the options. Esc clears the input and closes.](images/dropdown-accessibility-4.png)\n\n<Caption>\n  Combo boxes can be opened with the Enter or Up and Down arrow keys. Enter\n  selects the highlighted option in the list. Esc clears the input and closes\n  the combo box.\n</Caption>\n\n</Column>\n</Row>\n\n## Development considerations\n\nKeep these considerations in mind if you are modifying Carbon or creating a\ncustom component.\n\n- The dropdown and multiselect variant use a `button` with\n  `aria-haspopup=\"listbox\"`.\n- The combo box uses an input with `role=\"combo box\"`,\n  `aria-autocomplete=\"list\"`, `aria-haspopup=\"listbox\"` and\n  `autocomplete=\"off\"`.\n- The combo box uses `aria-controls` for a div with `role=\"listbox\"`.\n- All variants use `aria-expanded` to track the state of the listbox.\n- See the\n  [ARIA authoring practices for combo box](https://w3c.github.io/aria-practices/#combbox)\n  for more considerations.\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/dropdown/accessibility.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}