{"componentChunkName":"component---src-pages-components-search-accessibility-mdx","path":"/components/search/accessibility/","result":{"pageContext":{"frontmatter":{"title":"Search","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/search/accessibility.mdx","titleType":"prepend","MdxNode":{"id":"e2313a91-8a3a-5e29-a36a-f1f862cfd8f1","children":[],"parent":"175c3dc0-db41-5f34-8d02-a3ab30517919","internal":{"content":"---\ntitle: Search\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<PageDescription>\n\nCarbon’s search component provides the basic input mechanism for conducting a\nsearch. No accessibility annotations are needed for the input, but design\nannotations are needed to make the search messaging and results accessible.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Design recommendations</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via keyboard. Carbon also incorporates other\naccessibility considerations, some of which are described below.\n\n### Keyboard interaction\n\nThe search component is in the tab order, and users can type directly into the\nsearch input on focus. Users press `Enter` to submit their text as a search\nterm, or they can press `Esc` to clear it. Once users start typing, a Cancel\nicon ('x') will appear, which becomes the next tab stop and provides another way\nto clear the input field via click, `Space` or `Enter` keys.\n\n<Row>\n<Column colLg={8}>\n\n![example of search keyboard navigation](images/search-accessibility-1.png)\n\n<Caption>\n  The search input is in the tab order just like any other input.\n</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={8}>\n\n![illustration showing that after a user begins typing in a search field, an X button appears on the right side of the input that can be tabbed to and activated with Space or Enter](images/search-accessibility-2.png)\n\n<Caption>\n  The user can clear the input by pressing Esc or activating the X button that\n  appears inside the input.\n</Caption>\n\n</Column>\n</Row>\n\nVariations of the search component use a non-persistent text input that is\nhidden behind a magnifying glass icon. In one variation, the user activates the\nicon-only button to reveal and put focus into the search input. In another\nvariation, as the icon receives focus it exposes the input and the focus is\nimmediately placed into the search input. Once in the input, the interaction,\ndescribed above, is the same for all variations.\n\n<Row>\n<Column colLg={8}>\n\n![illustration showing the search icon being activated via Enter or Space](images/search-accessibility-3.png)\n\n<Caption>\n  A variation where the search input is revealed by activating the magnifying\n  glass icon.\n</Caption>\n\n</Column>\n</Row>\n<Row>\n<Column colLg={8}>\n\n![putting focus on the magnifying glass causes the search input to be revealed and given focus](images/search-accessibility-4.png)\n\n<Caption>\n  A variation where the search input is revealed when the magnifying glass\n  receives focus.\n</Caption>\n\n</Column>\n</Row>\n\n### Role and label\n\nCarbon assigns the entire search interaction a `role` of \"search\". It also\nprovides non-visible labels for the search input and icon (“search”), and for\nthe cancel icon (“clear search input”).\n\n<Row>\n<Column colLg={8}>\n\n![role and input named \"search\", and button named 'clear search input'](images/search-accessibility-5.png)\n\n<Caption>\n  The search region, input name, and clear button are all incorporated by\n  Carbon.\n</Caption>\n\n</Column>\n</Row>\n\n## Design recommendations\n\nCarbon provides a\n[search pattern](https://carbondesignsystem.com/patterns/search-pattern/) that\noutlines three search types: basic, active, and focused. Each of these types\nstarts with the basic search input mechanism provided by Carbon’s search\ncomponent. However, each search type displays suggestions or results in\ndifferent ways, which all have accessibility considerations. There are three\nbroad areas that designers need to consider and annotate for accessibility:\n\n- Search suggestions and typeaheads\n- Search outcomes and status (e.g., “25 results found”, “no results found”)\n- Results navigation\n\nFuture updates to this guidance will offer specific documentation on these\naccessibility needs.\n\n## Development considerations\n\nKeep these considerations in mind if you are modifying Carbon or creating a\ncustom component.\n\n- The div containing the search function is given a `role=\"button\"`.\n- The hidden label for the input has a default value of “search”.\n- The input is `type=\"text\"` with a `role=\"searchbox\"`; using `type=\"search\"` is\n  equivalent and also valid.\n- See the\n  [Mozilla search input documentation](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/search)\n  for more considerations.\n","type":"Mdx","contentDigest":"98eeff7a2492dd31e68386a282677bbb","owner":"gatsby-plugin-mdx","counter":4677},"frontmatter":{"title":"Search","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Search\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<PageDescription>\n\nCarbon’s search component provides the basic input mechanism for conducting a\nsearch. No accessibility annotations are needed for the input, but design\nannotations are needed to make the search messaging and results accessible.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Design recommendations</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via keyboard. Carbon also incorporates other\naccessibility considerations, some of which are described below.\n\n### Keyboard interaction\n\nThe search component is in the tab order, and users can type directly into the\nsearch input on focus. Users press `Enter` to submit their text as a search\nterm, or they can press `Esc` to clear it. Once users start typing, a Cancel\nicon ('x') will appear, which becomes the next tab stop and provides another way\nto clear the input field via click, `Space` or `Enter` keys.\n\n<Row>\n<Column colLg={8}>\n\n![example of search keyboard navigation](images/search-accessibility-1.png)\n\n<Caption>\n  The search input is in the tab order just like any other input.\n</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={8}>\n\n![illustration showing that after a user begins typing in a search field, an X button appears on the right side of the input that can be tabbed to and activated with Space or Enter](images/search-accessibility-2.png)\n\n<Caption>\n  The user can clear the input by pressing Esc or activating the X button that\n  appears inside the input.\n</Caption>\n\n</Column>\n</Row>\n\nVariations of the search component use a non-persistent text input that is\nhidden behind a magnifying glass icon. In one variation, the user activates the\nicon-only button to reveal and put focus into the search input. In another\nvariation, as the icon receives focus it exposes the input and the focus is\nimmediately placed into the search input. Once in the input, the interaction,\ndescribed above, is the same for all variations.\n\n<Row>\n<Column colLg={8}>\n\n![illustration showing the search icon being activated via Enter or Space](images/search-accessibility-3.png)\n\n<Caption>\n  A variation where the search input is revealed by activating the magnifying\n  glass icon.\n</Caption>\n\n</Column>\n</Row>\n<Row>\n<Column colLg={8}>\n\n![putting focus on the magnifying glass causes the search input to be revealed and given focus](images/search-accessibility-4.png)\n\n<Caption>\n  A variation where the search input is revealed when the magnifying glass\n  receives focus.\n</Caption>\n\n</Column>\n</Row>\n\n### Role and label\n\nCarbon assigns the entire search interaction a `role` of \"search\". It also\nprovides non-visible labels for the search input and icon (“search”), and for\nthe cancel icon (“clear search input”).\n\n<Row>\n<Column colLg={8}>\n\n![role and input named \"search\", and button named 'clear search input'](images/search-accessibility-5.png)\n\n<Caption>\n  The search region, input name, and clear button are all incorporated by\n  Carbon.\n</Caption>\n\n</Column>\n</Row>\n\n## Design recommendations\n\nCarbon provides a\n[search pattern](https://carbondesignsystem.com/patterns/search-pattern/) that\noutlines three search types: basic, active, and focused. Each of these types\nstarts with the basic search input mechanism provided by Carbon’s search\ncomponent. However, each search type displays suggestions or results in\ndifferent ways, which all have accessibility considerations. There are three\nbroad areas that designers need to consider and annotate for accessibility:\n\n- Search suggestions and typeaheads\n- Search outcomes and status (e.g., “25 results found”, “no results found”)\n- Results navigation\n\nFuture updates to this guidance will offer specific documentation on these\naccessibility needs.\n\n## Development considerations\n\nKeep these considerations in mind if you are modifying Carbon or creating a\ncustom component.\n\n- The div containing the search function is given a `role=\"button\"`.\n- The hidden label for the input has a default value of “search”.\n- The input is `type=\"text\"` with a `role=\"searchbox\"`; using `type=\"search\"` is\n  equivalent and also valid.\n- See the\n  [Mozilla search input documentation](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/search)\n  for more considerations.\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/search/accessibility.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}