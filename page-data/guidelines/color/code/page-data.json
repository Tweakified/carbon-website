{"componentChunkName":"component---src-pages-guidelines-color-code-mdx","path":"/guidelines/color/code/","result":{"pageContext":{"frontmatter":{"title":"Color","description":"Maintaining consistent and engaging digital interfaces throughout IBM, whether applications or experiences, demands extended guidance around color usage.","tabs":["Overview","Usage","Tokens","Code"]},"relativePagePath":"/guidelines/color/code.mdx","titleType":"prepend","MdxNode":{"id":"0965e595-eea4-5bc3-88c6-9e1c1a88f0c8","children":[],"parent":"3fe701d3-aa52-517e-b9c7-2bb713e96cad","internal":{"content":"---\ntitle: Color\ndescription:\n  Maintaining consistent and engaging digital interfaces throughout IBM, whether\n  applications or experiences, demands extended guidance around color usage.\ntabs: ['Overview', 'Usage', 'Tokens', 'Code']\n---\n\n<PageDescription>\n\nThe Carbon color package helps teams build engaging digital experiences through\nconsistent application of color.\n\n</PageDescription>\n\n<InlineNotification>\n\nIf you're using `@carbon/react`, you probably don't need need to install the\ncolor package separately. See our [Carbon React](/developing/frameworks/react/)\nguide to start building.\n\n</InlineNotification>\n\n## Usage\n\n### Sass\n\nThe `@carbon/colors` package enables you to access colors from the IBM Design\nLanguage in Sass. You can access a color directly from the package by writing\nthe following:\n\n```scss\n@use '@carbon/colors';\n\n.selector {\n  background: colors.$blue-50;\n}\n```\n\nFor a full list of colors exported, refer to the\n[API](https://github.com/carbon-design-system/carbon/blob/main/packages/colors/docs/sass.md#api)\nsection in the package's Sass Documentation.\n\nIn addition to individual colors, you can access all colors in a `Map` using the\n`$colors` variable.\n\n```scss\n@use '@carbon/colors';\n@each $swatch, $grades in colors.$colors {\n  @each $grade in $grades {\n    //\n  }\n}\n```\n\nEach key in the `$colors` map is the name of a group of colors, also known as a\nswatch. The value of each entry is a `Map` where the keys are the color grade\nand the values are the hex codes for the color at that grade. For example:\n\n```scss\n$colors: (\n  blue: (\n    10: #edf5ff,\n    20: #d0e2ff,\n    30: #a6c8ff,\n    40: #78a9ff,\n    50: #4589ff,\n    60: #0f62fe,\n    70: #0043ce,\n    80: #002d9c,\n    90: #001d6c,\n    100: #001141,\n  ),\n);\n```\n\n### JavaScript\n\nFor JavaScript, you can import and use this module by doing the following in\nyour code:\n\n```js\n// ESM\nimport { black, blue, warmGray } from '@carbon/colors';\n\n// CommonJS\nconst { black, blue, warmGray } = require('@carbon/colors');\n```\n\nEach color swatch is exported as a variable, and each color name is also\nexported as an object that can be called by specifying grade, for example:\n\n```js\nblack;\nblue[50]; // Using the `blue` object.\nwarmGray100; // Using the `warmGray100` variable.\n```\n\n## Resources\n\n<Row className=\"resource-card-group\">\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Carbon color package\"\n      href=\"https://github.com/carbon-design-system/carbon/blob/v10/packages/colors\"\n    >\n\n<MdxIcon name=\"github\" />\n\n  </ResourceCard>\n  </Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Color package demo\"\n      href=\"https://carbon-elements.netlify.app/colors/examples/preview/\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n","type":"Mdx","contentDigest":"8f5581b6b12a4e3fd29c1724b945705f","owner":"gatsby-plugin-mdx","counter":4713},"frontmatter":{"title":"Color","description":"Maintaining consistent and engaging digital interfaces throughout IBM, whether applications or experiences, demands extended guidance around color usage.","tabs":["Overview","Usage","Tokens","Code"]},"exports":{},"rawBody":"---\ntitle: Color\ndescription:\n  Maintaining consistent and engaging digital interfaces throughout IBM, whether\n  applications or experiences, demands extended guidance around color usage.\ntabs: ['Overview', 'Usage', 'Tokens', 'Code']\n---\n\n<PageDescription>\n\nThe Carbon color package helps teams build engaging digital experiences through\nconsistent application of color.\n\n</PageDescription>\n\n<InlineNotification>\n\nIf you're using `@carbon/react`, you probably don't need need to install the\ncolor package separately. See our [Carbon React](/developing/frameworks/react/)\nguide to start building.\n\n</InlineNotification>\n\n## Usage\n\n### Sass\n\nThe `@carbon/colors` package enables you to access colors from the IBM Design\nLanguage in Sass. You can access a color directly from the package by writing\nthe following:\n\n```scss\n@use '@carbon/colors';\n\n.selector {\n  background: colors.$blue-50;\n}\n```\n\nFor a full list of colors exported, refer to the\n[API](https://github.com/carbon-design-system/carbon/blob/main/packages/colors/docs/sass.md#api)\nsection in the package's Sass Documentation.\n\nIn addition to individual colors, you can access all colors in a `Map` using the\n`$colors` variable.\n\n```scss\n@use '@carbon/colors';\n@each $swatch, $grades in colors.$colors {\n  @each $grade in $grades {\n    //\n  }\n}\n```\n\nEach key in the `$colors` map is the name of a group of colors, also known as a\nswatch. The value of each entry is a `Map` where the keys are the color grade\nand the values are the hex codes for the color at that grade. For example:\n\n```scss\n$colors: (\n  blue: (\n    10: #edf5ff,\n    20: #d0e2ff,\n    30: #a6c8ff,\n    40: #78a9ff,\n    50: #4589ff,\n    60: #0f62fe,\n    70: #0043ce,\n    80: #002d9c,\n    90: #001d6c,\n    100: #001141,\n  ),\n);\n```\n\n### JavaScript\n\nFor JavaScript, you can import and use this module by doing the following in\nyour code:\n\n```js\n// ESM\nimport { black, blue, warmGray } from '@carbon/colors';\n\n// CommonJS\nconst { black, blue, warmGray } = require('@carbon/colors');\n```\n\nEach color swatch is exported as a variable, and each color name is also\nexported as an object that can be called by specifying grade, for example:\n\n```js\nblack;\nblue[50]; // Using the `blue` object.\nwarmGray100; // Using the `warmGray100` variable.\n```\n\n## Resources\n\n<Row className=\"resource-card-group\">\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Carbon color package\"\n      href=\"https://github.com/carbon-design-system/carbon/blob/v10/packages/colors\"\n    >\n\n<MdxIcon name=\"github\" />\n\n  </ResourceCard>\n  </Column>\n  <Column colMd={4} colLg={4} noGutterSm>\n    <ResourceCard\n      subTitle=\"Color package demo\"\n      href=\"https://carbon-elements.netlify.app/colors/examples/preview/\"\n    >\n\n<MdxIcon name=\"bee\" />\n\n  </ResourceCard>\n  </Column>\n</Row>\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/guidelines/color/code.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}