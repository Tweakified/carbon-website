{"componentChunkName":"component---src-pages-components-slider-accessibility-mdx","path":"/components/slider/accessibility/","result":{"pageContext":{"frontmatter":{"title":"Slider","description":"No accessibility annotations are needed for sliders, but keep these considerations in mind if you are modifying Carbon or creating a custom component.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/slider/accessibility.mdx","titleType":"prepend","MdxNode":{"id":"5ed3354c-2c94-5e62-8be5-1d7fc6b3ee7d","children":[],"parent":"2b366341-d56a-50d3-867d-fb28c81c3449","internal":{"content":"---\ntitle: Slider\ndescription:\n  No accessibility annotations are needed for sliders, but keep these\n  considerations in mind if you are modifying Carbon or creating a custom\n  component.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport localVideoOne from './videos/default-slider-demo.mp4';\nimport localPosterOne from './images/slider-accessibility-default-mp4-image.png';\nimport localVideoTwo from './videos/range-slider-demo.mp4';\nimport localPosterTwo from './images/slider-accessibility-range-mp4-image.png';\n\n<PageDescription>\n\nNo accessibility annotations are needed for sliders, but keep these\nconsiderations in mind if you are modifying Carbon or creating a custom\ncomponent.\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>What Carbon provides</AnchorLink>\n  <AnchorLink>Development considerations</AnchorLink>\n</AnchorLinks>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via the keyboard. Carbon incorporates many\nother accessibility considerations, some of which are described below.\n\n### Keyboard interactions (default slider)\n\nTab order goes from slider to number input. Arrow keys are used to change the\nslider value. `Shift` + `Arrow` changes the slider value by a larger increment\n(such as by 10 instead of 1). Users can also directly enter a value in the\ninput.\n\n<Row>\n<Column colLg={8}>\n\n![example of slider keyboard interaction](images/slider-accessibility-1.png)\n\n<Caption>\n  Both the slider and input are in the tab order and keyboard operable.\n</Caption>\n\n</Column>\n</Row>\n\n### Labeling and updates (default slider)\n\n<Row>\n<Column colLg={8}>\n\n![slider label is connected to slider control and number input](images/slider-accessibility-2.png)\n\n<Caption>\n  The input value and slider position are in sync. An update to either causes\n  the other to update.\n</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={8}>\n\n<Video\n  src={localVideoOne}\n  poster={localPosterOne}\n  aria-label=\"pointer clicks on slider range and input updates to 80. input value changes to 75 and slider repositions to match\"\n/>\n\n<Caption>\n  The multiple ways of updating a value within the default slider component.\n</Caption>\n\n</Column>\n</Row>\n\n### Keyboard interactions (range slider)\n\nFor the range slider, tab order goes from the first number input, to the two\nhandles in turn, and then to the second number input. The handle keyboard\noperation is the same as with the default slider. Users can also directly enter\nnumbers into the minimum and maximum value inputs.\n\n<Row>\n<Column colLg={8}>\n\n![Both the slider and inputs are in the tab order and keyboard operable.](images/slider-accessibility-4.png)\n\n<Caption>\n  Both the slider and inputs are in the tab order and keyboard operable.\n</Caption>\n\n</Column>\n</Row>\n\n### Labeling and updates (range slider)\n\nThe slider label is a description what kind of values will be selected from the\nrange slider. The minimum and maximum values are labeled with placeholder text\nof min and max due to space constraints.\n\n<Row>\n<Column colLg={8}>\n\n![The input value and slider position are in sync. An update to either causes the other to update.](images/slider-accessibility-5.png)\n\n<Caption>\n  The input value and slider position are in sync. An update to either causes\n  the other to update.\n</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={8}>\n\n<Video\n  src={localVideoTwo}\n  poster={localPosterTwo}\n  aria-label=\"pointer clicks on slider range and input updates to 80. input value changes to 75 and slider repositions to match\"\n/>\n\n<Caption>\n  The multiple ways of updating a value within the default slider component.\n</Caption>\n\n</Column>\n</Row>\n\n## Development considerations\n\nKeep these considerations in mind if you are modifying Carbon or creating a\ncustom component:\n\n- The `step` value determines the change increment when moving the slider,\n  either by pointer or keyboard. A value of `\"1\"` is recommended.\n- The `stepMultiplier` determines the value change when the keyboard is used to\n  alter the slider by pressing `Shift`+ Arrow key. A tenth of the total range is\n  recommended as a value, such as `\"10\"` in a 0-100 slider.\n- See the\n  [ARIA authoring practices](https://www.w3.org/TR/wai-aria-practices-1.2/#slider)\n  for more considerations.\n\n### Error handling\n\nIf an inputted value is outside the allowed range, the slider will auto-correct\nto the nearest allowed digit. When the inputted value results in an error, the\nerror will display alongside the corresponding text input.\n\nIn the range slider, if the inputted value is not logically correct (for\nexample, if a minimum value is greater than the maximum value), a warning\nmessage will be generated that informs the user that a value was autocorrected\nto the nearest allowed digit.\n","type":"Mdx","contentDigest":"f3576ef12f1c540aacc47a2765b8134f","owner":"gatsby-plugin-mdx","counter":4803},"frontmatter":{"title":"Slider","description":"No accessibility annotations are needed for sliders, but keep these considerations in mind if you are modifying Carbon or creating a custom component.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Slider\ndescription:\n  No accessibility annotations are needed for sliders, but keep these\n  considerations in mind if you are modifying Carbon or creating a custom\n  component.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport localVideoOne from './videos/default-slider-demo.mp4';\nimport localPosterOne from './images/slider-accessibility-default-mp4-image.png';\nimport localVideoTwo from './videos/range-slider-demo.mp4';\nimport localPosterTwo from './images/slider-accessibility-range-mp4-image.png';\n\n<PageDescription>\n\nNo accessibility annotations are needed for sliders, but keep these\nconsiderations in mind if you are modifying Carbon or creating a custom\ncomponent.\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>What Carbon provides</AnchorLink>\n  <AnchorLink>Development considerations</AnchorLink>\n</AnchorLinks>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via the keyboard. Carbon incorporates many\nother accessibility considerations, some of which are described below.\n\n### Keyboard interactions (default slider)\n\nTab order goes from slider to number input. Arrow keys are used to change the\nslider value. `Shift` + `Arrow` changes the slider value by a larger increment\n(such as by 10 instead of 1). Users can also directly enter a value in the\ninput.\n\n<Row>\n<Column colLg={8}>\n\n![example of slider keyboard interaction](images/slider-accessibility-1.png)\n\n<Caption>\n  Both the slider and input are in the tab order and keyboard operable.\n</Caption>\n\n</Column>\n</Row>\n\n### Labeling and updates (default slider)\n\n<Row>\n<Column colLg={8}>\n\n![slider label is connected to slider control and number input](images/slider-accessibility-2.png)\n\n<Caption>\n  The input value and slider position are in sync. An update to either causes\n  the other to update.\n</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={8}>\n\n<Video\n  src={localVideoOne}\n  poster={localPosterOne}\n  aria-label=\"pointer clicks on slider range and input updates to 80. input value changes to 75 and slider repositions to match\"\n/>\n\n<Caption>\n  The multiple ways of updating a value within the default slider component.\n</Caption>\n\n</Column>\n</Row>\n\n### Keyboard interactions (range slider)\n\nFor the range slider, tab order goes from the first number input, to the two\nhandles in turn, and then to the second number input. The handle keyboard\noperation is the same as with the default slider. Users can also directly enter\nnumbers into the minimum and maximum value inputs.\n\n<Row>\n<Column colLg={8}>\n\n![Both the slider and inputs are in the tab order and keyboard operable.](images/slider-accessibility-4.png)\n\n<Caption>\n  Both the slider and inputs are in the tab order and keyboard operable.\n</Caption>\n\n</Column>\n</Row>\n\n### Labeling and updates (range slider)\n\nThe slider label is a description what kind of values will be selected from the\nrange slider. The minimum and maximum values are labeled with placeholder text\nof min and max due to space constraints.\n\n<Row>\n<Column colLg={8}>\n\n![The input value and slider position are in sync. An update to either causes the other to update.](images/slider-accessibility-5.png)\n\n<Caption>\n  The input value and slider position are in sync. An update to either causes\n  the other to update.\n</Caption>\n\n</Column>\n</Row>\n\n<Row>\n<Column colLg={8}>\n\n<Video\n  src={localVideoTwo}\n  poster={localPosterTwo}\n  aria-label=\"pointer clicks on slider range and input updates to 80. input value changes to 75 and slider repositions to match\"\n/>\n\n<Caption>\n  The multiple ways of updating a value within the default slider component.\n</Caption>\n\n</Column>\n</Row>\n\n## Development considerations\n\nKeep these considerations in mind if you are modifying Carbon or creating a\ncustom component:\n\n- The `step` value determines the change increment when moving the slider,\n  either by pointer or keyboard. A value of `\"1\"` is recommended.\n- The `stepMultiplier` determines the value change when the keyboard is used to\n  alter the slider by pressing `Shift`+ Arrow key. A tenth of the total range is\n  recommended as a value, such as `\"10\"` in a 0-100 slider.\n- See the\n  [ARIA authoring practices](https://www.w3.org/TR/wai-aria-practices-1.2/#slider)\n  for more considerations.\n\n### Error handling\n\nIf an inputted value is outside the allowed range, the slider will auto-correct\nto the nearest allowed digit. When the inputted value results in an error, the\nerror will display alongside the corresponding text input.\n\nIn the range slider, if the inputted value is not logically correct (for\nexample, if a minimum value is greater than the maximum value), a warning\nmessage will be generated that informs the user that a value was autocorrected\nto the nearest allowed digit.\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/slider/accessibility.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}