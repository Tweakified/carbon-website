"use strict";(self.webpackChunkcarbondesignsystem=self.webpackChunkcarbondesignsystem||[]).push([[651640],{859856:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return i},default:function(){return x}});var o=n(145987),a=(n(667294),n(603905)),r=n(503624);const s=["components"],i={},l=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},d=l("PageDescription"),c=l("InlineNotification"),p=l("AnchorLinks"),m=l("AnchorLink"),u=l("Row"),y=l("Column"),k=l("ResourceCard"),g=l("MdxIcon"),h={_frontmatter:i},b=r.Z;function x(e){let{components:t}=e,n=(0,o.Z)(e,s);return(0,a.kt)(b,Object.assign({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(d,{mdxType:"PageDescription"},(0,a.kt)("p",null,"The Carbon Grid package helps developers build digital experiences with the 2x\nGrid. The project allows you to use CSS grid to build a variety of layouts.")),(0,a.kt)(c,{mdxType:"InlineNotification"},(0,a.kt)("p",null,"If you’re using ",(0,a.kt)("inlineCode",{parentName:"p"},"@carbon/react"),", you you probably don’t need to install the grid\npackage separately. See our ",(0,a.kt)("a",{parentName:"p",href:"/developing/frameworks/react/"},"Carbon React")," guide\nto start building.")),(0,a.kt)(p,{mdxType:"AnchorLinks"},(0,a.kt)(m,{mdxType:"AnchorLink"},"Documentation"),(0,a.kt)(m,{mdxType:"AnchorLink"},"API & Helpers"),(0,a.kt)(m,{mdxType:"AnchorLink"},"Legacy")),(0,a.kt)("h2",null,"Documentation"),(0,a.kt)("h3",null,"CSS Grid"),(0,a.kt)("p",null,"Carbon provides grid components, using CSS Grid to help developers use the 2x\nGrid. These components include ",(0,a.kt)("inlineCode",{parentName:"p"},"Grid")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Column")," and allow you to define\ncolumn widths by breakpoint, based on a 16 column grid."),(0,a.kt)(u,{className:"resource-card-group",mdxType:"Row"},(0,a.kt)(y,{colLg:4,colMd:4,noGutterSm:!0,mdxType:"Column"},(0,a.kt)(k,{subTitle:"React",href:"https://react.carbondesignsystem.com/?path=/docs/elements-grid--default",mdxType:"ResourceCard"},(0,a.kt)(g,{name:"react",mdxType:"MdxIcon"}))),(0,a.kt)(y,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,a.kt)(k,{subTitle:"CSS Grid demo",href:"https://carbon-elements.netlify.app/grid/examples/css-grid/",mdxType:"ResourceCard"},(0,a.kt)(g,{name:"bee",mdxType:"MdxIcon"})))),(0,a.kt)("h3",null,"AspectRatio"),(0,a.kt)("p",null,"When designing fluid layouts, it’s helpful for an asset or card to be a specific\naspect ratio. The ",(0,a.kt)("inlineCode",{parentName:"p"},"AspectRatio")," component supports rendering your content in a\nspecific aspect ratio through the ratio prop. This allows you to specify the\nproportion between the width and the height of your content."),(0,a.kt)(u,{className:"resource-card-group",mdxType:"Row"},(0,a.kt)(y,{colLg:4,colMd:4,noGutterSm:!0,mdxType:"Column"},(0,a.kt)(k,{subTitle:"React",href:"https://react.carbondesignsystem.com/?path=/story/components-aspectratio--default",mdxType:"ResourceCard"},(0,a.kt)(g,{name:"react",mdxType:"MdxIcon"}))),(0,a.kt)(y,{colLg:4,colMd:4,noGutterSm:!0,mdxType:"Column"},(0,a.kt)(k,{subTitle:"Vue",href:"https://vue.carbondesignsystem.com/?path=/story/components-cvaspectratio--default",mdxType:"ResourceCard"},(0,a.kt)(g,{name:"vue",mdxType:"MdxIcon"})))),(0,a.kt)("h2",null,"API & Helpers"),(0,a.kt)("p",null,"There are many ways to make the 2x Grid work for your application using our API.\nThe examples below illustrate two ways of removing visibility of a given\ncomponent based on the breakpoint."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},".component {\n  display: block;\n\n  /* applies styles inside mixin on md breakpoint or below, like max-width */\n  @include breakpoint-down('md') {\n    display: none;\n  }\n}\n\n.component {\n  display: none;\n\n  /* applies styles inside mixin on lg breakpoint and above */\n  @include breakpoint('lg') {\n    display: block;\n  }\n}\n")),(0,a.kt)("p",null,"In addition, you can also use Helpers to control what is being displayed on the\nscreen at a given breakpoint."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"@use '@carbon/styles/scss/utilities/helper-classes';\n\n.my-class {\n  @include helper-classes.hide-at-sm();\n}\n")),(0,a.kt)(u,{className:"resource-card-group",mdxType:"Row"},(0,a.kt)(y,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,a.kt)(k,{subTitle:"Carbon grid package",href:"https://github.com/carbon-design-system/carbon/tree/main/packages/grid",mdxType:"ResourceCard"},(0,a.kt)(g,{name:"github",mdxType:"MdxIcon"}))),(0,a.kt)(y,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,a.kt)(k,{subTitle:"Carbon grid docs API",href:"https://github.com/carbon-design-system/carbon/blob/main/packages/grid/docs/sass.md#api",mdxType:"ResourceCard"},(0,a.kt)(g,{name:"github",mdxType:"MdxIcon"}))),(0,a.kt)(y,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,a.kt)(k,{subTitle:"Hide at Breakpoint Helpers on Storybook",href:"https://react.carbondesignsystem.com/?path=/story/helpers-hideatbreakpoint--hide-at-breakpoint",mdxType:"ResourceCard"},(0,a.kt)(g,{name:"react",mdxType:"MdxIcon"})))),(0,a.kt)("h2",null,"Legacy"),(0,a.kt)("h3",null,"Flexbox Grid"),(0,a.kt)("p",null,"The default grid in v11 is based off of CSS Grid, to enable the legacy\n",(0,a.kt)("a",{parentName:"p",href:"https://react.carbondesignsystem.com/?path=/docs/elements-flexgrid--auto-columns"},"FlexGrid"),"\nimplementation, built using Flexbox, you will need to include the following in\nyour Sass files:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scss"},"@use '@carbon/grid';\n\n// Emit the flex-grid styles\n@include grid.flex-grid();\n")),(0,a.kt)(u,{className:"resource-card-group",mdxType:"Row"},(0,a.kt)(y,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,a.kt)(k,{subTitle:"React",href:"https://react.carbondesignsystem.com/?path=/story/elements-flexgrid--auto-columns",mdxType:"ResourceCard"},(0,a.kt)(g,{name:"react",mdxType:"MdxIcon"}))),(0,a.kt)(y,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,a.kt)(k,{subTitle:"Angular",href:"https://angular.carbondesignsystem.com/?path=/story/components-grid--basic",mdxType:"ResourceCard"},(0,a.kt)(g,{name:"angular",mdxType:"MdxIcon"}))),(0,a.kt)(y,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,a.kt)(k,{subTitle:"Vue",href:"https://vue.carbondesignsystem.com/?path=/story/components-cvgrid--auto-columns",mdxType:"ResourceCard"},(0,a.kt)(g,{name:"vue",mdxType:"MdxIcon"}))),(0,a.kt)(y,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,a.kt)(k,{subTitle:"FlexGrid demo",href:"https://carbon-elements.netlify.app/grid/examples/preview/",mdxType:"ResourceCard"},(0,a.kt)(g,{name:"bee",mdxType:"MdxIcon"})))))}x.isMDXComponent=!0}}]);