{"componentChunkName":"component---src-pages-components-number-input-accessibility-mdx","path":"/components/number-input/accessibility/","result":{"pageContext":{"frontmatter":{"title":"Number input","description":"Number inputs are similar to text inputs, but contain controls used to increase or decrease an incremental value.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/number-input/accessibility.mdx","titleType":"prepend","MdxNode":{"id":"5fd6d046-2c42-5e4b-9108-e00289e93e92","children":[],"parent":"ff3952db-488a-58d2-be68-d45ed27e8380","internal":{"content":"---\ntitle: Number input\ndescription:\n  Number inputs are similar to text inputs, but contain controls used to\n  increase or decrease an incremental value.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<PageDescription>\n\nDesign annotations are needed for specific instances shown below, but for the\nstandard number input component, Carbon already incorporates accessibility.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Design recommendations</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via the keyboard. Carbon incorporates many\nother accessibility considerations, some of which are described below.\n\n### Keyboard interaction\n\nThe Carbon number input replicates the behavior of the stock HTML component. The\nnumber input takes a single tab stop. The + and - buttons, operable by pointer,\nare not in the tab order. When the input has focus, the arrow keys give keyboard\nusers the same ability to incrementally adjust the values. As well, users can\ndirectly type numeric values in the input. Only numerals are allowed to be\nentered.\n\n<Row>\n<Column colLg={8}>\n\n![example of number input keyboard interaction](images/number-input-accessibility-1.png)\n\n<Caption>\n  The number input is reachable by Tab and changed with the arrow keys or by\n  directly entering a number.\n</Caption>\n\n</Column>\n</Row>\n\n### Error handling\n\nCarbon provides errors and warning messages to assistive technology. This is an\nimprovement on the stock HTML number input, which simply prevents the typing of\nalphabetic characters without explanation. Carbon also adds an error or warning\nicon and puts error messages in red as a further visual cue.\n\n<Row>\n<Column colLg={8}>\n\n![The letter e is in the input, a red exclamation mark appears beside it, the border of the input is in red and a red text message appears underneath 'Number is not valid'](images/number-input-accessibility-2.png)\n\n<Caption>\n  Messages are surfaced to assistive technologies, and color alone is not used\n  to visually signal errors.\n</Caption>\n\n</Column>\n</Row>\n\n## Design recommendations\n\nDesign annotations are needed for the following instance.\n\n### Cue users for value and step\n\nCarbon offers the ability for the author to set minimum and maximum values for\nthe input. When setting limits on number entry, designers should warn the user\nin advance, instead of users discovering limits through an error message. This\nis particularly the case if designers alter the step value, which determines the\nincrement change when activating the +/- buttons or arrow keys. If a user\ndirectly enters a value that does not match the step increment, it will be\ndisallowed for no apparent reason, so advanced warnings are crucial.\n\n<Row>\n<Column colLg={8}>\n\n![a numeric input with helper text to enter values between 30 and 70, in increments of 5](images/number-input-accessibility-3.png)\n\n<Caption>Notify users of allowable input ranges through helper text.</Caption>\n\n</Column>\n</Row>\n\n## Development considerations\n\nKeep this in mind if you’re modifying Carbon or creating a custom component.\n\n- Carbon uses `aria-describedby` to associate the helper text and error messages\n  with the input.\n- The red error SVG icons have `aria-hidden=\"true\"` set, since the helper text\n  provides the same information.\n","type":"Mdx","contentDigest":"d1980e4c0b7d7f95b26d74946fa2e1fa","owner":"gatsby-plugin-mdx","counter":4625},"frontmatter":{"title":"Number input","description":"Number inputs are similar to text inputs, but contain controls used to increase or decrease an incremental value.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Number input\ndescription:\n  Number inputs are similar to text inputs, but contain controls used to\n  increase or decrease an incremental value.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<PageDescription>\n\nDesign annotations are needed for specific instances shown below, but for the\nstandard number input component, Carbon already incorporates accessibility.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Design recommendations</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via the keyboard. Carbon incorporates many\nother accessibility considerations, some of which are described below.\n\n### Keyboard interaction\n\nThe Carbon number input replicates the behavior of the stock HTML component. The\nnumber input takes a single tab stop. The + and - buttons, operable by pointer,\nare not in the tab order. When the input has focus, the arrow keys give keyboard\nusers the same ability to incrementally adjust the values. As well, users can\ndirectly type numeric values in the input. Only numerals are allowed to be\nentered.\n\n<Row>\n<Column colLg={8}>\n\n![example of number input keyboard interaction](images/number-input-accessibility-1.png)\n\n<Caption>\n  The number input is reachable by Tab and changed with the arrow keys or by\n  directly entering a number.\n</Caption>\n\n</Column>\n</Row>\n\n### Error handling\n\nCarbon provides errors and warning messages to assistive technology. This is an\nimprovement on the stock HTML number input, which simply prevents the typing of\nalphabetic characters without explanation. Carbon also adds an error or warning\nicon and puts error messages in red as a further visual cue.\n\n<Row>\n<Column colLg={8}>\n\n![The letter e is in the input, a red exclamation mark appears beside it, the border of the input is in red and a red text message appears underneath 'Number is not valid'](images/number-input-accessibility-2.png)\n\n<Caption>\n  Messages are surfaced to assistive technologies, and color alone is not used\n  to visually signal errors.\n</Caption>\n\n</Column>\n</Row>\n\n## Design recommendations\n\nDesign annotations are needed for the following instance.\n\n### Cue users for value and step\n\nCarbon offers the ability for the author to set minimum and maximum values for\nthe input. When setting limits on number entry, designers should warn the user\nin advance, instead of users discovering limits through an error message. This\nis particularly the case if designers alter the step value, which determines the\nincrement change when activating the +/- buttons or arrow keys. If a user\ndirectly enters a value that does not match the step increment, it will be\ndisallowed for no apparent reason, so advanced warnings are crucial.\n\n<Row>\n<Column colLg={8}>\n\n![a numeric input with helper text to enter values between 30 and 70, in increments of 5](images/number-input-accessibility-3.png)\n\n<Caption>Notify users of allowable input ranges through helper text.</Caption>\n\n</Column>\n</Row>\n\n## Development considerations\n\nKeep this in mind if you’re modifying Carbon or creating a custom component.\n\n- Carbon uses `aria-describedby` to associate the helper text and error messages\n  with the input.\n- The red error SVG icons have `aria-hidden=\"true\"` set, since the helper text\n  provides the same information.\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/number-input/accessibility.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}