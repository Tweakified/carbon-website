{"componentChunkName":"component---src-pages-components-notification-usage-mdx","path":"/components/notification/usage/","result":{"pageContext":{"frontmatter":{"title":"Notification","description":"Notifications are messages that communicate information to the user. The two main variants of notifications are toast notifications and inline notifications.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/notification/usage.mdx","titleType":"prepend","MdxNode":{"id":"478d62cf-d0b1-5650-a4d7-4416ed912774","children":[],"parent":"235a14b8-dd1d-5fb9-bc33-940d2e987778","internal":{"content":"---\ntitle: Notification\ndescription:\n  Notifications are messages that communicate information to the user. The two\n  main variants of notifications are toast notifications and inline\n  notifications.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\n<PageDescription>\n\nNotifications are messages that communicate information to the user. The three\nvariants of notifications are toast notifications, inline notifications, and\nactionable notifications.\n\n</PageDescription>\n\n<InlineNotification>\n\n**v11 update:** An actionable variant has been added to the notification\ncomponent. Actionable notifications allow for interactive elements within a\nnotification, like buttons. Toast and inline notification no longer allow any\ninteractive elements. For v10 implementation guidance, go to\n[v10 Notification](https://v10.carbondesignsystem.com/components/notification/usage/).\n\n</InlineNotification>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Content</AnchorLink>\n<AnchorLink>Inline notifications</AnchorLink>\n<AnchorLink>Toast notifications</AnchorLink>\n<AnchorLink>Actionable notifications</AnchorLink>\n<AnchorLink>Universal behaviors</AnchorLink>\n<AnchorLink>Modifiers</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\n### When to use\n\nUse notifications to inform users of updates or changes to system status.\nCommunicating with users and providing immediate feedback are important for\nbuilding trust. While notifications are an effective method of communicating\nwith users, they are disruptive and should be used sparingly.\n\nFor more context on when to use each notification variant, including modals,\nrefer to the [notifications pattern](/patterns/notification-pattern/). Carbon\nonly supports inline, toast, actionable, and modal notification variants,\nalthough some product teams also support banners and notification centers.\n\n### Variants\n\n| Variant                                | Purpose                                                                                                                                                          |\n| -------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [Inline](#inline-notifications)        | Inline notifications show up in task flows, to notify users of the status of an action. They usually appear at the top of the primary content area.              |\n| [Toast](#toast-notifications)          | Toasts are non-modal, time-based window elements used to display short messages; they usually appear at the top of the screen and disappear after a few seconds. |\n| [Actionable](#actionable-notification) | Actionable notifications allow for interactive elements within a notification styled like an inline or toast notification.                                       |\n\n## Live demo\n\n<StorybookDemo\n  themeSelector\n  url=\"https://react.carbondesignsystem.com\"\n  variants={[\n    {\n      label: 'Actionable',\n      variant: 'components-notifications-actionable--default',\n    },\n    {\n      label: 'Inline',\n      variant: 'components-notifications-inline--default',\n    },\n    {\n      label: 'Toast',\n      variant: 'components-notifications-toast--default',\n    },\n  ]}\n/>\n\n## Formatting\n\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![notification anatomy image](images/01_notification_anatomy.png)\n\n</Column>\n</Row>\n\n1. **Icon:** Informs users of the kind of notification at a glance.\n2. **Title:** Gives users a quick overview of the notification.\n3. **Action (actionable only):** Ghost or tertiary button that allows users to\n   address the notification or navigates them to a page with further details.\n4. **Close button (optional):** Closes the notification.\n5. **Message:** Provides additional detail and actionable steps for the user to\n   take.\n6. **Timestamp (optional for toast):** Shows the time the toast notification was\n   sent.\n\n## Content\n\nNotifications provide limited space for content, and therefore the content must\nbe short and concise. A user should be able to quickly scan the notification, be\napprised of the situation, and know what to do next.\n\n### Main elements\n\n#### Title\n\n- The title should be short and descriptive, explaining the most important piece\n  of information.\n- When possible, communicate the main message using just the title.\n- Use a period only if the title is a full sentence.\n- When using rich text, such as in a title, a screen reader will read aloud the\n  entire message as one sentence. Since the message will be read as one string,\n  make sure that any text styling does not convey meaning.\n\n#### Body content\n\n- Be concise and avoid repeating or paraphrasing the title.\n- Limit content to one or two short sentences.\n- Explain how to resolve the issue by including any troubleshooting actions or\n  next steps. You can include links within the notification body that redirect\n  the user to next steps by using an actionable notification.\n\n#### Action (actionable only)\n\n- Only actionable notifications can contain interactive elements such as a link\n  or button.\n- Keep labels concise and clearly indicate the action the user can take.\n- Limit action labels to one or two words. For a list of recommended action\n  labels, see Carbon's\n  [content guidelines](https://www.carbondesignsystem.com/guidelines/content/action-labels).\n\n### Overflow\n\nIf a toast or inline notification requires a message longer than two lines, use\nan actionable notification and include a short message with a “View more” link\nthat takes the user to a view of the full notification message. This can be\neither a full page with more details or a modal.\n\n### Further guidance\n\nFor further content guidance, see Carbon's\n[content guidelines](/guidelines/content/overview).\n\n## Inline notifications\n\nInline notifications show up in task flows, to notify users of the status of an\naction or system. They usually appear at the top of the primary content area or\nclose to the item needing attention.\n\n### Inline formatting\n\n<Row>\n<Column colLg={8}>\n\n![Example of inline notification with action button](images/02_notification_format_608.png)\n\n</Column>\n</Row>\n\n#### Sizing\n\nThe width of inline notifications varies based on content and layout. They can\nexpand to the fill the container or content area they relate to. Their height is\nbased on the content length, which should not exceed two lines of text.\n\n#### Placement\n\nInline notifications appear near their related items. They can expand to fill\nthe width of the container or content area they are in and should align to the\ngrid columns.\n\nWe recommend placing inline notifications at the bottom of forms, just above the\nsubmission and cancel buttons. When error notifications apply to individual text\ninputs, they should supplement the error state on that specific input field.\n\n<Row>\n<Column colLg={8}>\n\n![Example of inline notification placement](images/03_notification_placement_inline_608.png)\n\n<Caption>\n  Example of an inline notification supporting an error message on a form\n</Caption>\n\n</Column>\n</Row>\n\n### Dismissal\n\nInline notifications do not dismiss automatically. They persist on the page\nuntil the user dismisses them or takes action that resolves the notification.\n\nA small \"x\" in the top right corner is used to dismiss inline notifications.\nIncluding the close button is optional and should not be included if it is\ncritical for a user to read or interact with the notification.\n\n## Toast notifications\n\nToasts are non-modal, time-based window elements used to display short messages;\nthey usually appear at the top of the screen and disappear after a few seconds.\n\n### Toast formatting\n\n<Row>\n<Column colLg={8}>\n\n![Example of toast notification with action button and time stamp](images/04_toast_format_608.png)\n\n</Column>\n</Row>\n\n#### Time stamp\n\nToast notifications can include a time stamp at the bottom the container. The\ntime stamp shows the time the notification was sent. Using time stamps is\noptional but toasts should be consistent across the product so either all toasts\nshould include time stamps or none of them should. The time stamp is optional\nand can be removed if a third line of content is needed.\n\n#### Sizing\n\nToast notifications use a fixed width and their height depends on the length of\nthe notification message. As noted in the content guidelines, limit toast\nnotifications to two lines of text.\n\n#### Placement\n\nToast notifications slide in and out from the top right of the screen. They\nstack with `$spacing-03` in-between. New toast notifications should appear at\nthe top of the list, with older notifications being pushed down until they are\ndismissed.\n\n<Row>\n<Column colLg={8}>\n\n![Example of toast notification placement](images/05_toast_context_608.gif)\n\n</Column>\n</Row>\n\n### Dismissal\n\nToast notifications persist by default. Toasts do have the option to timeout and\ndismiss automatically after five seconds on the screen. They can also include a\nclose button so users can dismiss them sooner. Toasts cover content on the\nscreen so they should always be easily dismissed. Because toast notifications\ncan dismiss automatically, users should be able to access them elsewhere after\nthe toast disappears. This allows them to be accessible for users who need more\ntime reading the notification or who may want to refer back to the notification.\n\n## Actionable notifications\n\nActionable notifications allow for interactive elements within a notification\nstyled like an inline or toast notification. Actionable notifications, since\nthey require user interaction, take focus when triggered and can be highly\ndisruptive to screen readers and keyboard users. With actionable notifications,\nonly one action is allowed per notification. This action frequently takes users\nto a flow or page related to the message, where they can resolve the\nnotification. Consider using a notification center where a user can revisit and\nact on past notifications.\n\n### Formatting\n\n#### Inline\n\nActionable inline notifications have a ghost button action that is adjacent to\nthe title and body content. On mobile screens the action button wraps under the\nbody content. This button should allow users to take further action on the\nnotification.\n\n#### Toast\n\nActionable toast notifications can include a button at the end of their body\ncontent. This button should be short and navigate users to a page or modal where\nthey can take action to address the notification or find further information.\nBecause toast notifications automatically dismiss, it is important that there\nare alternative routes to navigate to the link destination.\n\n<Row>\n<Column colLg={8}>\n\n![Example of actionable notifications](images/07_actionable_types_608.png)\n\n<Caption>\n  Actionable toast notification (top); actionable inline notification (bottom)\n</Caption>\n\n</Column>\n</Row>\n\n### Dismissal\n\nAll notifications, including actionable, persist by default until a user\ndismissed them. If using inline styling refer to\n[inline notifications](#inline-notifications) for inline dismissal. If using\ntoast styling for an actionable notification, then the notification should\nremain on screen until the user dismisses it. With the notification remaining\nopen, the user has enough time to interact with the button without the toast\nclosing too soon. Refer to [toast notifications](#toast-notifications) for\nfurther information.\n\n## Universal behaviors\n\n### Interactions\n\n#### Mouse\n\nNotifications are system generated. A user can close a dismissible notification\nby clicking the close `x`\n\n#### Keyboard\n\nFor actionable notifications, the action gets focus first. Use `Tab` to move\nbetween action and the close `x`. To close notifications, press `Enter`\nor `Space` while the close `x` has focus or use the `Esc` key.\n\n#### Screen readers\n\nVoiceOver: To close notifications, press `Enter` or `Space` while the close `x`\nhas focus or use the `Esc` key.\n\nJAWS: To close notifications, press `Enter` or `Space` while the close `x` has\nfocus or use the `Esc` key.\n\nNVDA: To close notifications, press `Enter` or `Space` while the close `x` has\nfocus or use the `Esc` key.\n\n## Modifiers\n\n### High and low contrast\n\nCarbon supports high and low contrast style notifications. High-contrast\nnotifications are best for critical messaging while low-contrast notifications\nare less visually disruptive for users.\n\nIt's up to the product team to decide which notification style to use in their\nproduct. Inline and toast notifications can use different styles but you should\nnever mix styles within each notification variant. When in doubt, use\nlow-contrast notifications.\n\n<Row>\n<Column colLg={8}>\n\n![High and low contrast inline notifications](images/06_notification_contrast_608.png)\n\n<Caption>\n    High contrast notification (top); low contrast notification (bottom)\n</Caption>\n</Column>\n</Row>\n\n## Related\n\n- [Modal component](https://www.carbondesignsystem.com/components/modal/usage/)\n- [Notifications pattern](https://www.carbondesignsystem.com/patterns/notification-pattern)\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","type":"Mdx","contentDigest":"8dce0f09f536b1c207805cf39eaf93e5","owner":"gatsby-plugin-mdx","counter":4758},"frontmatter":{"title":"Notification","description":"Notifications are messages that communicate information to the user. The two main variants of notifications are toast notifications and inline notifications.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Notification\ndescription:\n  Notifications are messages that communicate information to the user. The two\n  main variants of notifications are toast notifications and inline\n  notifications.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\n<PageDescription>\n\nNotifications are messages that communicate information to the user. The three\nvariants of notifications are toast notifications, inline notifications, and\nactionable notifications.\n\n</PageDescription>\n\n<InlineNotification>\n\n**v11 update:** An actionable variant has been added to the notification\ncomponent. Actionable notifications allow for interactive elements within a\nnotification, like buttons. Toast and inline notification no longer allow any\ninteractive elements. For v10 implementation guidance, go to\n[v10 Notification](https://v10.carbondesignsystem.com/components/notification/usage/).\n\n</InlineNotification>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Content</AnchorLink>\n<AnchorLink>Inline notifications</AnchorLink>\n<AnchorLink>Toast notifications</AnchorLink>\n<AnchorLink>Actionable notifications</AnchorLink>\n<AnchorLink>Universal behaviors</AnchorLink>\n<AnchorLink>Modifiers</AnchorLink>\n<AnchorLink>Related</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\n### When to use\n\nUse notifications to inform users of updates or changes to system status.\nCommunicating with users and providing immediate feedback are important for\nbuilding trust. While notifications are an effective method of communicating\nwith users, they are disruptive and should be used sparingly.\n\nFor more context on when to use each notification variant, including modals,\nrefer to the [notifications pattern](/patterns/notification-pattern/). Carbon\nonly supports inline, toast, actionable, and modal notification variants,\nalthough some product teams also support banners and notification centers.\n\n### Variants\n\n| Variant                                | Purpose                                                                                                                                                          |\n| -------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [Inline](#inline-notifications)        | Inline notifications show up in task flows, to notify users of the status of an action. They usually appear at the top of the primary content area.              |\n| [Toast](#toast-notifications)          | Toasts are non-modal, time-based window elements used to display short messages; they usually appear at the top of the screen and disappear after a few seconds. |\n| [Actionable](#actionable-notification) | Actionable notifications allow for interactive elements within a notification styled like an inline or toast notification.                                       |\n\n## Live demo\n\n<StorybookDemo\n  themeSelector\n  url=\"https://react.carbondesignsystem.com\"\n  variants={[\n    {\n      label: 'Actionable',\n      variant: 'components-notifications-actionable--default',\n    },\n    {\n      label: 'Inline',\n      variant: 'components-notifications-inline--default',\n    },\n    {\n      label: 'Toast',\n      variant: 'components-notifications-toast--default',\n    },\n  ]}\n/>\n\n## Formatting\n\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![notification anatomy image](images/01_notification_anatomy.png)\n\n</Column>\n</Row>\n\n1. **Icon:** Informs users of the kind of notification at a glance.\n2. **Title:** Gives users a quick overview of the notification.\n3. **Action (actionable only):** Ghost or tertiary button that allows users to\n   address the notification or navigates them to a page with further details.\n4. **Close button (optional):** Closes the notification.\n5. **Message:** Provides additional detail and actionable steps for the user to\n   take.\n6. **Timestamp (optional for toast):** Shows the time the toast notification was\n   sent.\n\n## Content\n\nNotifications provide limited space for content, and therefore the content must\nbe short and concise. A user should be able to quickly scan the notification, be\napprised of the situation, and know what to do next.\n\n### Main elements\n\n#### Title\n\n- The title should be short and descriptive, explaining the most important piece\n  of information.\n- When possible, communicate the main message using just the title.\n- Use a period only if the title is a full sentence.\n- When using rich text, such as in a title, a screen reader will read aloud the\n  entire message as one sentence. Since the message will be read as one string,\n  make sure that any text styling does not convey meaning.\n\n#### Body content\n\n- Be concise and avoid repeating or paraphrasing the title.\n- Limit content to one or two short sentences.\n- Explain how to resolve the issue by including any troubleshooting actions or\n  next steps. You can include links within the notification body that redirect\n  the user to next steps by using an actionable notification.\n\n#### Action (actionable only)\n\n- Only actionable notifications can contain interactive elements such as a link\n  or button.\n- Keep labels concise and clearly indicate the action the user can take.\n- Limit action labels to one or two words. For a list of recommended action\n  labels, see Carbon's\n  [content guidelines](https://www.carbondesignsystem.com/guidelines/content/action-labels).\n\n### Overflow\n\nIf a toast or inline notification requires a message longer than two lines, use\nan actionable notification and include a short message with a “View more” link\nthat takes the user to a view of the full notification message. This can be\neither a full page with more details or a modal.\n\n### Further guidance\n\nFor further content guidance, see Carbon's\n[content guidelines](/guidelines/content/overview).\n\n## Inline notifications\n\nInline notifications show up in task flows, to notify users of the status of an\naction or system. They usually appear at the top of the primary content area or\nclose to the item needing attention.\n\n### Inline formatting\n\n<Row>\n<Column colLg={8}>\n\n![Example of inline notification with action button](images/02_notification_format_608.png)\n\n</Column>\n</Row>\n\n#### Sizing\n\nThe width of inline notifications varies based on content and layout. They can\nexpand to the fill the container or content area they relate to. Their height is\nbased on the content length, which should not exceed two lines of text.\n\n#### Placement\n\nInline notifications appear near their related items. They can expand to fill\nthe width of the container or content area they are in and should align to the\ngrid columns.\n\nWe recommend placing inline notifications at the bottom of forms, just above the\nsubmission and cancel buttons. When error notifications apply to individual text\ninputs, they should supplement the error state on that specific input field.\n\n<Row>\n<Column colLg={8}>\n\n![Example of inline notification placement](images/03_notification_placement_inline_608.png)\n\n<Caption>\n  Example of an inline notification supporting an error message on a form\n</Caption>\n\n</Column>\n</Row>\n\n### Dismissal\n\nInline notifications do not dismiss automatically. They persist on the page\nuntil the user dismisses them or takes action that resolves the notification.\n\nA small \"x\" in the top right corner is used to dismiss inline notifications.\nIncluding the close button is optional and should not be included if it is\ncritical for a user to read or interact with the notification.\n\n## Toast notifications\n\nToasts are non-modal, time-based window elements used to display short messages;\nthey usually appear at the top of the screen and disappear after a few seconds.\n\n### Toast formatting\n\n<Row>\n<Column colLg={8}>\n\n![Example of toast notification with action button and time stamp](images/04_toast_format_608.png)\n\n</Column>\n</Row>\n\n#### Time stamp\n\nToast notifications can include a time stamp at the bottom the container. The\ntime stamp shows the time the notification was sent. Using time stamps is\noptional but toasts should be consistent across the product so either all toasts\nshould include time stamps or none of them should. The time stamp is optional\nand can be removed if a third line of content is needed.\n\n#### Sizing\n\nToast notifications use a fixed width and their height depends on the length of\nthe notification message. As noted in the content guidelines, limit toast\nnotifications to two lines of text.\n\n#### Placement\n\nToast notifications slide in and out from the top right of the screen. They\nstack with `$spacing-03` in-between. New toast notifications should appear at\nthe top of the list, with older notifications being pushed down until they are\ndismissed.\n\n<Row>\n<Column colLg={8}>\n\n![Example of toast notification placement](images/05_toast_context_608.gif)\n\n</Column>\n</Row>\n\n### Dismissal\n\nToast notifications persist by default. Toasts do have the option to timeout and\ndismiss automatically after five seconds on the screen. They can also include a\nclose button so users can dismiss them sooner. Toasts cover content on the\nscreen so they should always be easily dismissed. Because toast notifications\ncan dismiss automatically, users should be able to access them elsewhere after\nthe toast disappears. This allows them to be accessible for users who need more\ntime reading the notification or who may want to refer back to the notification.\n\n## Actionable notifications\n\nActionable notifications allow for interactive elements within a notification\nstyled like an inline or toast notification. Actionable notifications, since\nthey require user interaction, take focus when triggered and can be highly\ndisruptive to screen readers and keyboard users. With actionable notifications,\nonly one action is allowed per notification. This action frequently takes users\nto a flow or page related to the message, where they can resolve the\nnotification. Consider using a notification center where a user can revisit and\nact on past notifications.\n\n### Formatting\n\n#### Inline\n\nActionable inline notifications have a ghost button action that is adjacent to\nthe title and body content. On mobile screens the action button wraps under the\nbody content. This button should allow users to take further action on the\nnotification.\n\n#### Toast\n\nActionable toast notifications can include a button at the end of their body\ncontent. This button should be short and navigate users to a page or modal where\nthey can take action to address the notification or find further information.\nBecause toast notifications automatically dismiss, it is important that there\nare alternative routes to navigate to the link destination.\n\n<Row>\n<Column colLg={8}>\n\n![Example of actionable notifications](images/07_actionable_types_608.png)\n\n<Caption>\n  Actionable toast notification (top); actionable inline notification (bottom)\n</Caption>\n\n</Column>\n</Row>\n\n### Dismissal\n\nAll notifications, including actionable, persist by default until a user\ndismissed them. If using inline styling refer to\n[inline notifications](#inline-notifications) for inline dismissal. If using\ntoast styling for an actionable notification, then the notification should\nremain on screen until the user dismisses it. With the notification remaining\nopen, the user has enough time to interact with the button without the toast\nclosing too soon. Refer to [toast notifications](#toast-notifications) for\nfurther information.\n\n## Universal behaviors\n\n### Interactions\n\n#### Mouse\n\nNotifications are system generated. A user can close a dismissible notification\nby clicking the close `x`\n\n#### Keyboard\n\nFor actionable notifications, the action gets focus first. Use `Tab` to move\nbetween action and the close `x`. To close notifications, press `Enter`\nor `Space` while the close `x` has focus or use the `Esc` key.\n\n#### Screen readers\n\nVoiceOver: To close notifications, press `Enter` or `Space` while the close `x`\nhas focus or use the `Esc` key.\n\nJAWS: To close notifications, press `Enter` or `Space` while the close `x` has\nfocus or use the `Esc` key.\n\nNVDA: To close notifications, press `Enter` or `Space` while the close `x` has\nfocus or use the `Esc` key.\n\n## Modifiers\n\n### High and low contrast\n\nCarbon supports high and low contrast style notifications. High-contrast\nnotifications are best for critical messaging while low-contrast notifications\nare less visually disruptive for users.\n\nIt's up to the product team to decide which notification style to use in their\nproduct. Inline and toast notifications can use different styles but you should\nnever mix styles within each notification variant. When in doubt, use\nlow-contrast notifications.\n\n<Row>\n<Column colLg={8}>\n\n![High and low contrast inline notifications](images/06_notification_contrast_608.png)\n\n<Caption>\n    High contrast notification (top); low contrast notification (bottom)\n</Caption>\n</Column>\n</Row>\n\n## Related\n\n- [Modal component](https://www.carbondesignsystem.com/components/modal/usage/)\n- [Notifications pattern](https://www.carbondesignsystem.com/patterns/notification-pattern)\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/notification/usage.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}