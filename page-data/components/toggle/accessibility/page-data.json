{"componentChunkName":"component---src-pages-components-toggle-accessibility-mdx","path":"/components/toggle/accessibility/","result":{"pageContext":{"frontmatter":{"title":"Toggle","description":"A toggle is a control that is used to quickly switch between two possible states. They are commonly used for “on/off” switches.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/toggle/accessibility.mdx","titleType":"prepend","MdxNode":{"id":"c782a057-b9d6-5b9e-9800-48bfa210e1e0","children":[],"parent":"2d48991d-eab9-5dbe-aea9-4e09c669d555","internal":{"content":"---\ntitle: Toggle\ndescription:\n  A toggle is a control that is used to quickly switch between two possible\n  states. They are commonly used for “on/off” switches.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<PageDescription>\n\nNo accessibility annotations are needed for toggles, but keep these\nconsiderations in mind if you are modifying Carbon or creating a custom\ncomponent.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Design recommendations</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via keyboard. Carbon also incorporates other\naccessibility considerations, some of which are described below.\n\n### Keyboard interaction\n\nEach toggle is in the tab order. Pressing `Enter` or `Space` changes the\ntoggle's state between off and on.\n\n<Row>\n<Column colLg={8}>\n\n![illustration showing tab and other keyboard operation](images/toggle-accessibility-1.png)\n\n<Caption>\n  Toggles are reached by Tab and activated by Space or Enter keys.\n</Caption>\n\n</Column>\n</Row>\n\n### Redundant state information\n\nCarbon’s default toggle uses both color and text to indicate on or off. Where\nspace constraints make a smaller toggle desirable, Carbon adds a tickmark to the\ntoggle’s “on” state so that if the text is not included, the component’s on/off\nstate can be distinguished without relying on use of color. The state is also\ncaptured programmatically for users who cannot see or understand the visual\nindicators.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do include the on/off text for the toggle's state whenever space permits.\">\n\n![The alert toggle shows \"off\" and \"on\" to indicate state](images/toggle-accessibility-2-do.png)\n\n  </DoDont>\n  <DoDont type=\"do\" caption=\"Where space is confined, use the tickmark variation in lieu of on/off text.\">\n\n![Toggles in the Alert column of a table show their \"on\" state with a green tickmark](images/toggle-accessibility-3-do.png)\n\n  </DoDont>\n</DoDontRow>\n\n## Design recommendations\n\nDesign annotations are not needed, but keep the following point in mind.\n\n### Do not change the toggle's label based on its state\n\nIt is essential that designers distinguish between the text indicating the\non/off state of the toggle and the text that is the toggle’s label. The label's\ntext should not change based on the on/off state.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do keep the label consistent. Only change the state text between On and Off.\">\n\n![the same 'Alerts' toggle keeping its label in both states](images/toggle-accessibility-4-do.png)\n\n  </DoDont>\n  <DoDont type=\"dont\" caption=\"Do not change the label text as a way of indicating the toggle's on/off state.\">\n\n![The toggle changing its label from 'Alerts on' to 'Alerts off'](images/toggle-accessibility-4-dont.png)\n\n  </DoDont>\n</DoDontRow>\n\n## Development considerations\n\nKeep this in mind if you’re modifying Carbon or creating a custom component.\n\n- Toggle is implemented as a button with a role of `switch`.\n- “On” and “off” text is `aria-hidden`; the state of the toggle is surfaced with\n  `aria-checked` set to “true” or “false”.\n- The toggle's `label` is set with `for`\n- See the\n  [ARIA authoring practices guidance on switch](https://w3c.github.io/aria-practices/#switch)\n  for more considerations.\n","type":"Mdx","contentDigest":"16272018a0b403066661494b6c20fd72","owner":"gatsby-plugin-mdx","counter":4686},"frontmatter":{"title":"Toggle","description":"A toggle is a control that is used to quickly switch between two possible states. They are commonly used for “on/off” switches.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Toggle\ndescription:\n  A toggle is a control that is used to quickly switch between two possible\n  states. They are commonly used for “on/off” switches.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<PageDescription>\n\nNo accessibility annotations are needed for toggles, but keep these\nconsiderations in mind if you are modifying Carbon or creating a custom\ncomponent.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Design recommendations</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n## What Carbon provides\n\nCarbon bakes keyboard operation into its components, improving the experience of\nblind users and others who operate via keyboard. Carbon also incorporates other\naccessibility considerations, some of which are described below.\n\n### Keyboard interaction\n\nEach toggle is in the tab order. Pressing `Enter` or `Space` changes the\ntoggle's state between off and on.\n\n<Row>\n<Column colLg={8}>\n\n![illustration showing tab and other keyboard operation](images/toggle-accessibility-1.png)\n\n<Caption>\n  Toggles are reached by Tab and activated by Space or Enter keys.\n</Caption>\n\n</Column>\n</Row>\n\n### Redundant state information\n\nCarbon’s default toggle uses both color and text to indicate on or off. Where\nspace constraints make a smaller toggle desirable, Carbon adds a tickmark to the\ntoggle’s “on” state so that if the text is not included, the component’s on/off\nstate can be distinguished without relying on use of color. The state is also\ncaptured programmatically for users who cannot see or understand the visual\nindicators.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do include the on/off text for the toggle's state whenever space permits.\">\n\n![The alert toggle shows \"off\" and \"on\" to indicate state](images/toggle-accessibility-2-do.png)\n\n  </DoDont>\n  <DoDont type=\"do\" caption=\"Where space is confined, use the tickmark variation in lieu of on/off text.\">\n\n![Toggles in the Alert column of a table show their \"on\" state with a green tickmark](images/toggle-accessibility-3-do.png)\n\n  </DoDont>\n</DoDontRow>\n\n## Design recommendations\n\nDesign annotations are not needed, but keep the following point in mind.\n\n### Do not change the toggle's label based on its state\n\nIt is essential that designers distinguish between the text indicating the\non/off state of the toggle and the text that is the toggle’s label. The label's\ntext should not change based on the on/off state.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do keep the label consistent. Only change the state text between On and Off.\">\n\n![the same 'Alerts' toggle keeping its label in both states](images/toggle-accessibility-4-do.png)\n\n  </DoDont>\n  <DoDont type=\"dont\" caption=\"Do not change the label text as a way of indicating the toggle's on/off state.\">\n\n![The toggle changing its label from 'Alerts on' to 'Alerts off'](images/toggle-accessibility-4-dont.png)\n\n  </DoDont>\n</DoDontRow>\n\n## Development considerations\n\nKeep this in mind if you’re modifying Carbon or creating a custom component.\n\n- Toggle is implemented as a button with a role of `switch`.\n- “On” and “off” text is `aria-hidden`; the state of the toggle is surfaced with\n  `aria-checked` set to “true” or “false”.\n- The toggle's `label` is set with `for`\n- See the\n  [ARIA authoring practices guidance on switch](https://w3c.github.io/aria-practices/#switch)\n  for more considerations.\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/toggle/accessibility.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}