"use strict";(self.webpackChunkcarbondesignsystem=self.webpackChunkcarbondesignsystem||[]).push([[933452],{594709:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return i},default:function(){return y}});var a=t(145987),o=(t(667294),t(603905)),r=t(503624);const l=["components"],i={},s=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",n)},p=s("PageDescription"),c=s("AnchorLinks"),d=s("AnchorLink"),m=s("Row"),u=s("Column"),k=s("ResourceCard"),h=s("MdxIcon"),b={_frontmatter:i},g=r.Z;function y(e){let{components:n}=e,t=(0,a.Z)(e,l);return(0,o.kt)(g,Object.assign({},b,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(p,{mdxType:"PageDescription"},(0,o.kt)("p",null,"Carbon icons are provided through a set of packages allowing the use of icons in\nmultiple frameworks. Icons are supported in vanilla, React, Angular, and Vue.")),(0,o.kt)(c,{mdxType:"AnchorLinks"},(0,o.kt)(d,{mdxType:"AnchorLink"},"Get started"),(0,o.kt)(d,{mdxType:"AnchorLink"},"Usage"),(0,o.kt)(d,{mdxType:"AnchorLink"},"Resources")),(0,o.kt)("h2",null,"Get started"),(0,o.kt)("p",null,"To install ",(0,o.kt)("inlineCode",{parentName:"p"},"@carbon/icons-react")," in your project, you will need to run the\nfollowing command using ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/"},"npm"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -S @carbon/icons-react\n")),(0,o.kt)("p",null,"If you prefer ",(0,o.kt)("a",{parentName:"p",href:"https://yarnpkg.com/en/"},"Yarn"),", use the following command\ninstead:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @carbon/icons-react\n")),(0,o.kt)("h2",null,"Usage"),(0,o.kt)("p",null,"Icons in this package can be accessed through importing them by name."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Add } from '@carbon/icons-react';\n")),(0,o.kt)("p",null,"Icons in this package support the following sizes: ",(0,o.kt)("inlineCode",{parentName:"p"},"16"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"20"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"24"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"32"),"\npixels. These sizes refer to the width and height of the icon. Icons default to\nsize ",(0,o.kt)("inlineCode",{parentName:"p"},"16"),". You can change the size of the icon by adding the ",(0,o.kt)("inlineCode",{parentName:"p"},"size")," prop:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'<Add size="24" />\n')),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Note: if you would like to find the import path for an icon, you can reference\nour ",(0,o.kt)("a",{parentName:"em",href:"https://www.carbondesignsystem.com/guidelines/icons/library"},"Icon Library"))),(0,o.kt)("h3",null,"Icon fill"),(0,o.kt)("p",null,"All icons from the library support being styled by the ",(0,o.kt)("inlineCode",{parentName:"p"},"fill")," property. You can\nchange the color of an icon by passing in a custom class name that sets this\nproperty (preferred), or by passing in an inline style. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},"// CSS custom class name to set the fill of the icon to `rebeccapurple`\nsvg.my-custom-class {\n  fill: rebeccapurple;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Add } from \'@carbon/icons-react\';\n\nfunction MyComponent() {\n  return (\n    <button>\n      <Add aria-label="Add" className="my-custom-class" />\n    </button>\n  );\n}\n')),(0,o.kt)("h4",null,"Two-tone icons"),(0,o.kt)("p",null,"Certain icons in the library support two distinct fill colors. You can target\nthe inner path by using the ",(0,o.kt)("inlineCode",{parentName:"p"},'[data-icon-path="inner-path"]')," attribute selector.\nFor example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scss"},"// CSS custom class name to set the fill of the icon to `yellow`\nsvg.outer-icon-fill {\n  fill: yellow;\n}\n\n// Use the `data-icon-path` attribute selector to target the inner path\n// where we want to set the fill to `black`. We also set `opacity` to `1` so\n// that this inner-path is visible.\nsvg.outer-icon-fill [data-icon-path='inner-path'] {\n  fill: black;\n  opacity: 1;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import { WarningFilled } from \'@carbon/icons-react\';\n\nfunction MyComponent() {\n  return <WarningFilled aria-label="Add" className="my-custom-class" />;\n}\n')),(0,o.kt)("h3",null,"Focus and ",(0,o.kt)("inlineCode",{parentName:"h3"},"aria-label")),(0,o.kt)("p",null,"By default, the icon components from ",(0,o.kt)("inlineCode",{parentName:"p"},"@carbon/icons-react")," are treated as\ndecorative content. This means that we set ",(0,o.kt)("inlineCode",{parentName:"p"},'aria-hidden="true"')," unless certain\nprops are passed to the component."),(0,o.kt)("p",null,"If you would like the icon to be announced by a screen reader, you can supply an\n",(0,o.kt)("inlineCode",{parentName:"p"},"aria-label")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"aria-labelledby"),". For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Add } from '@carbon/icons-react';\n\nfunction MyComponent() {\n  return (\n    <button>\n      <Add aria-label=\"Add\" />\n    </button>\n  );\n}\n")),(0,o.kt)("p",null,"Doing this will add the appropriate ",(0,o.kt)("inlineCode",{parentName:"p"},"role")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<svg>")," node, as well."),(0,o.kt)("p",null,"If you would like the ",(0,o.kt)("inlineCode",{parentName:"p"},"<svg>")," to receive focus, you will need to pass in a\n",(0,o.kt)("inlineCode",{parentName:"p"},"tabIndex")," value. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Add } from \'@carbon/icons-react\';\n\nfunction MyComponent() {\n  return <Add aria-label="Add" tabIndex="0" />;\n}\n')),(0,o.kt)("p",null,"Including ",(0,o.kt)("inlineCode",{parentName:"p"},"tabIndex")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"aria-label")," (or ",(0,o.kt)("inlineCode",{parentName:"p"},"aria-labelledby"),") will set the\ncorresponding ",(0,o.kt)("inlineCode",{parentName:"p"},"tabindex")," on the underlying ",(0,o.kt)("inlineCode",{parentName:"p"},"<svg>")," and verify support in older\nbrowsers like Internet Explorer 11 by setting ",(0,o.kt)("inlineCode",{parentName:"p"},"focusable")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,o.kt)("h2",null,"Resources"),(0,o.kt)(m,{className:"resource-card-group",mdxType:"Row"},(0,o.kt)(u,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(k,{subTitle:"Carbon icons package",href:"https://github.com/carbon-design-system/carbon/blob/v10/packages/icons",mdxType:"ResourceCard"},(0,o.kt)(h,{name:"bee",mdxType:"MdxIcon"}))),(0,o.kt)(u,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(k,{subTitle:"Icon package demo",href:"https://github.com/carbon-design-system/carbon/blob/v10/packages/icons",mdxType:"ResourceCard"},(0,o.kt)(h,{name:"bee",mdxType:"MdxIcon"})))))}y.isMDXComponent=!0}}]);