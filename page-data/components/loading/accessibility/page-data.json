{"componentChunkName":"component---src-pages-components-loading-accessibility-mdx","path":"/components/loading/accessibility/","result":{"pageContext":{"frontmatter":{"title":"Loading","description":"Loading spinners are used when retrieving data or performing slow computations, and help to notify users that loading is underway.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/loading/accessibility.mdx","titleType":"prepend","MdxNode":{"id":"cab73c0a-493e-5f1d-89c9-fa0421cea966","children":[],"parent":"7a918d36-fddc-56eb-9e8e-5b23e924d574","internal":{"content":"---\ntitle: Loading\ndescription:\n  Loading spinners are used when retrieving data or performing slow\n  computations, and help to notify users that loading is underway.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<PageDescription>\n\nDesign annotations are needed for specific instances shown below, but for the\nstandard loading component, Carbon already incorporates accessibility.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Design recommendations</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n## What Carbon provides\n\nThe loading component has no keyboard accessibility considerations since it is\nintentionally not operable or navigable. However, Carbon incorporates other\naccessibility considerations, some of which are described below.\n\n### Status updates\n\nThe primary accessibility consideration for the loading component is to convey\nits meaning to assistive technologies so users are aware of changes in status.\nCarbon achieves this by exposing the `title` value (normally “loading”) of the\nspinning wheel SVG image.\n\n<Row>\n<Column colLg={8}>\n\n![the loading wheel with a purple annotation showing \"loading\"](images/loading-accessibility-1.png)\n\n<Caption>\n  Screen readers hear “loading” when a spinning icon appears on the screen.\n</Caption>\n\n</Column>\n</Row>\n\n## Design recommendations\n\nDesign annotations are needed for the following instance.\n\n### Convey when loading has completed\n\nWhen the loading indicator disappears, it conveys a second meaning, which is\n‘not loading’ or ‘finished’. However, especially where loads may take more than\na few seconds, a user who cannot see the icon disappear needs to be made aware\nthe system is no longer “loading” and is thus available for usage.\n\nThere are several ways to do this. If new content takes focus when the loading\nis completed (for instance after a full page load), then users will understand\nthe system is now available. Annotating what component takes focus will ensure\nthis is properly implemented.\n\n<Row>\n<Column colLg={8}>\n\n![File uploader with annotation on file's remove button stating 'takes focus after loading completes'](images/loading-accessibility-2.png)\n\n<Caption>Annotate if a control takes focus after a loading completes.</Caption>\n\n</Column>\n</Row>\n\nWhere a change of focus is not appropriate when the loading icon disappears, the\ninformation can be surfaced to users through a non-displayed status message,\nsuch as \"finished\" or \"loading complete,\" that can be conveyed to users through\nassistive technology.\n\n<Row>\n<Column colLg={8}>\n\n![Annotation states 'when loading is complete, create a Complete status message for assistive technology](images/loading-accessibility-3.png)\n\n<Caption>\n  Annotate the information that developers need to convey programmatically to\n  assistive technology.\n</Caption>\n\n</Column>\n</Row>\n\n## Development considerations\n\nKeep these considerations in mind if you are modifying Carbon or creating a\ncustom component.\n\n- Carbon uses `aria-live` set to “assertive” to immediately surface a loading\n  status to assistive technologies.\n- Carbon provides an SVG `title` value for the loading icon, which is exposed\n  through the `aria-live` section.\n- The completion of the loading state should be conveyed to assistive\n  technologies. A non-visible status message such as \"loading complete\" could be\n  put in the `aria-live` section or exposed through a `role=\"status\"`.\n  Alternatively, focus could be set to an appropriate element.\n- See the Equal Access Toolkit information on\n  [status messages](https://www.ibm.com/able/toolkit/develop/dynamic-updates/#role-status).\n","type":"Mdx","contentDigest":"66e02a1524e8b365828bab4fab46fca3","owner":"gatsby-plugin-mdx","counter":4783},"frontmatter":{"title":"Loading","description":"Loading spinners are used when retrieving data or performing slow computations, and help to notify users that loading is underway.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Loading\ndescription:\n  Loading spinners are used when retrieving data or performing slow\n  computations, and help to notify users that loading is underway.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListInput,\n  StructuredListCell,\n  OrderedList,\n  ListItem,\n} from '@carbon/react';\n\n<PageDescription>\n\nDesign annotations are needed for specific instances shown below, but for the\nstandard loading component, Carbon already incorporates accessibility.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>What Carbon provides</AnchorLink>\n<AnchorLink>Design recommendations</AnchorLink>\n<AnchorLink>Development considerations</AnchorLink>\n\n</AnchorLinks>\n\n## What Carbon provides\n\nThe loading component has no keyboard accessibility considerations since it is\nintentionally not operable or navigable. However, Carbon incorporates other\naccessibility considerations, some of which are described below.\n\n### Status updates\n\nThe primary accessibility consideration for the loading component is to convey\nits meaning to assistive technologies so users are aware of changes in status.\nCarbon achieves this by exposing the `title` value (normally “loading”) of the\nspinning wheel SVG image.\n\n<Row>\n<Column colLg={8}>\n\n![the loading wheel with a purple annotation showing \"loading\"](images/loading-accessibility-1.png)\n\n<Caption>\n  Screen readers hear “loading” when a spinning icon appears on the screen.\n</Caption>\n\n</Column>\n</Row>\n\n## Design recommendations\n\nDesign annotations are needed for the following instance.\n\n### Convey when loading has completed\n\nWhen the loading indicator disappears, it conveys a second meaning, which is\n‘not loading’ or ‘finished’. However, especially where loads may take more than\na few seconds, a user who cannot see the icon disappear needs to be made aware\nthe system is no longer “loading” and is thus available for usage.\n\nThere are several ways to do this. If new content takes focus when the loading\nis completed (for instance after a full page load), then users will understand\nthe system is now available. Annotating what component takes focus will ensure\nthis is properly implemented.\n\n<Row>\n<Column colLg={8}>\n\n![File uploader with annotation on file's remove button stating 'takes focus after loading completes'](images/loading-accessibility-2.png)\n\n<Caption>Annotate if a control takes focus after a loading completes.</Caption>\n\n</Column>\n</Row>\n\nWhere a change of focus is not appropriate when the loading icon disappears, the\ninformation can be surfaced to users through a non-displayed status message,\nsuch as \"finished\" or \"loading complete,\" that can be conveyed to users through\nassistive technology.\n\n<Row>\n<Column colLg={8}>\n\n![Annotation states 'when loading is complete, create a Complete status message for assistive technology](images/loading-accessibility-3.png)\n\n<Caption>\n  Annotate the information that developers need to convey programmatically to\n  assistive technology.\n</Caption>\n\n</Column>\n</Row>\n\n## Development considerations\n\nKeep these considerations in mind if you are modifying Carbon or creating a\ncustom component.\n\n- Carbon uses `aria-live` set to “assertive” to immediately surface a loading\n  status to assistive technologies.\n- Carbon provides an SVG `title` value for the loading icon, which is exposed\n  through the `aria-live` section.\n- The completion of the loading state should be conveyed to assistive\n  technologies. A non-visible status message such as \"loading complete\" could be\n  put in the `aria-live` section or exposed through a `role=\"status\"`.\n  Alternatively, focus could be set to an appropriate element.\n- See the Equal Access Toolkit information on\n  [status messages](https://www.ibm.com/able/toolkit/develop/dynamic-updates/#role-status).\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/loading/accessibility.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}