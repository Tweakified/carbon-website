{"componentChunkName":"component---src-pages-guidelines-themes-overview-mdx","path":"/guidelines/themes/overview/","result":{"pageContext":{"frontmatter":{"label":"Themes are used to customize component styles to fit the specific aesthetic of a brand or product.","title":"Themes","description":"Themes are used to customize component styles to fit the specific aesthetic of a brand or product.","tabs":["Overview","Code"]},"relativePagePath":"/guidelines/themes/overview.mdx","titleType":"prepend","MdxNode":{"id":"6ec13ab5-f79b-52b0-ac93-db6c39309035","children":[],"parent":"8221f16d-36d5-544a-a8f9-b663ecc67cb0","internal":{"content":"---\nlabel:\n  Themes are used to customize component styles to fit the specific aesthetic of\n  a brand or product.\ntitle: Themes\ndescription:\n  Themes are used to customize component styles to fit the specific aesthetic of\n  a brand or product.\ntabs: ['Overview', 'Code']\n---\n\n<PageDescription>\n\nThemes are used to customize component styles to fit the specific aesthetic of a\nbrand or product.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Theming basics</AnchorLink>\n<AnchorLink>Customizing a theme</AnchorLink>\n<AnchorLink>Tokens</AnchorLink>\n<AnchorLink>Theming applied</AnchorLink>\n<AnchorLink>Resources</AnchorLink>\n\n</AnchorLinks>\n\n## Theming basics\n\nThemes are used to modify existing components to fit a specific visual style. By\nusing Carbon's tokens, developers can easily customize all of their components\nby changing a set of universal variables, eliminating the need to modify\nindividual components.\n\n### Theme terms\n\n| Term    | Definition                                                                                                   |     |\n| ------- | ------------------------------------------------------------------------------------------------------------ | --- |\n| _Theme_ | A collection of visual attributes assigned to the tokens in order to create a specific aesthetic             |     |\n| _Token_ | A role-based identifier that assigns a value to a theme. Tokens are universal and never change across themes |     |\n| _Role_  | The systematic usage(s) of a token. Roles cannot be changed between themes                                   |     |\n| _Value_ | The actual style (such as a hex code) assigned to a token                                                    |     |\n\n### Default theme\n\nCarbon provides four themes as shown in the\n[color usage](/guidelines/color/usage) page. When `@carbon/react` is downloaded\nand installed, the components are preset to use the default (White) theme.\n\nTo use the Gray 10, Gray 90, or Gray 100 theme as your default instead of White,\nconfigure the sass module using `with`.\n\n```scss\n@use '@carbon/react/scss/themes';\n@use '@carbon/react/scss/theme' with (\n  $theme: themes.$g100\n);\n```\n\n## Customizing a theme\n\nThe default theme acts as a starting point; from there designers and developers\ncan define how their own components and styles deviate from the default.\nAltering one, some, or all of the default token values will result in a new\ntheme. The developer configures these new values by configuring the sass module\nusing `with` which can replace the values of the default theme or add new custom\ntokens as well.\n\n```scss\n@use '@carbon/react/scss/theme' with (\n  $theme: (\n    background: #e2e2e2,\n    text-primary: #ffffff,\n    custom-token-01: #000000,\n  )\n);\n```\n\n## Tokens\n\nWith tokens, the code only needs to be changed in one place to see the effect\nsystem-wide. Tokens are used across all components and help keep global patterns\nand styles consistent.\n\nAll tokens come pre-baked into the Carbon component source code. Tokens are\ndenoted by the prefix `$` (e.g. `$layer-01`). Tokens can also be nested within\nother tokens. For example, `$interactive` calls the IBM Design Language color\npalette token `$blue-60` for its value in the default theme.\n\nThere are several token categories:\n\n- Color\n- Spacing\n- Typography\n- Global\n\nThe full list of tokens available can be found in the source of the\n`@carbon/themes` package per theme for\n[white](https://github.com/carbon-design-system/carbon/blob/main/packages/themes/src/white.js),\n[g10](https://github.com/carbon-design-system/carbon/blob/main/packages/themes/src/g10.js),\n[g90](https://github.com/carbon-design-system/carbon/blob/main/packages/themes/src/g90.js),\nand\n[g100](https://github.com/carbon-design-system/carbon/blob/main/packages/themes/src/g100.js).\n\n### Color\n\nEach theme is assigned universal color variables, which are determined by common\nroles and usage. This allows for uniform color application across themes while\nmaintaining full styling flexibility. For more information, see the\n[color](/guidelines/color/overview) page.\n\n### Spacing\n\nUse the spacing scale when building individual components. It includes small\nincrements needed to create appropriate spatial relationships for detail-level\ndesigns. For more information, see the [spacing](/guidelines/spacing/overview/)\npage.\n\n### Typography\n\nTypography has four categories of type styles (universal, productive, editorial,\nand additional) that can be customized through tokens. These tokens are used\nboth within components and across layouts. Type tokens are determined by their\nrole across the system. For more information, see the\n[typography](/guidelines/typography/overview/) page.\n\n### Global\n\nThe other categories are global and component-specific variables. These control\nmore general styling of components, such as layer usage or border width. The\nfull list of tokens available can be found in\n[the source of the `@carbon/themes` package](https://github.com/carbon-design-system/carbon/blob/main/packages/themes/src/white.js).\n\n## Theming applied\n\nThe following example demonstrates the relationship between the different\nthemes. Each theme shares the same variables and roles, with only the value\nchanging for each individual theme.\n\n<Row>\n<Column colLg={12}>\n\n![Default theme applied](images/themes-1.png)\n\n</Column>\n</Row>\n\n| Key | Token             | Role                | White theme value | Gray 100 theme value |\n| --- | ----------------- | ------------------- | ----------------- | -------------------- |\n| 1   | `$text-secondary` | Label color         | Gray 70           | Gray 30              |\n| 2   | `$text-primary`   | Primary text color  | Gray 100          | Gray 10              |\n| 3   | `$border-strong`  | Border bottom color | Gray 50           | Gray 60              |\n| 4   | `$icon-primary`   | Primary icon color  | Gray 100          | Gray 10              |\n| 5   | `$field-01`       | Field color         | Gray 10           | Gray 90              |\n| 6   | `$background`     | Page background     | White             | Gray 100             |\n\n## Resources\n\n<Column colMd={4} colLg={4}  noGutterSm>\n  <ResourceCard\n    subTitle=\"Carbon themes package\"\n    href=\"https://github.com/carbon-design-system/carbon/tree/v10/packages/themes\"\n    >\n\n<MdxIcon name=\"github\" />\n\n  </ResourceCard>\n</Column>\n","type":"Mdx","contentDigest":"9d8f0c22ecda943c9a3f8a7b6e475792","owner":"gatsby-plugin-mdx","counter":4771},"frontmatter":{"label":"Themes are used to customize component styles to fit the specific aesthetic of a brand or product.","title":"Themes","description":"Themes are used to customize component styles to fit the specific aesthetic of a brand or product.","tabs":["Overview","Code"]},"exports":{},"rawBody":"---\nlabel:\n  Themes are used to customize component styles to fit the specific aesthetic of\n  a brand or product.\ntitle: Themes\ndescription:\n  Themes are used to customize component styles to fit the specific aesthetic of\n  a brand or product.\ntabs: ['Overview', 'Code']\n---\n\n<PageDescription>\n\nThemes are used to customize component styles to fit the specific aesthetic of a\nbrand or product.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Theming basics</AnchorLink>\n<AnchorLink>Customizing a theme</AnchorLink>\n<AnchorLink>Tokens</AnchorLink>\n<AnchorLink>Theming applied</AnchorLink>\n<AnchorLink>Resources</AnchorLink>\n\n</AnchorLinks>\n\n## Theming basics\n\nThemes are used to modify existing components to fit a specific visual style. By\nusing Carbon's tokens, developers can easily customize all of their components\nby changing a set of universal variables, eliminating the need to modify\nindividual components.\n\n### Theme terms\n\n| Term    | Definition                                                                                                   |     |\n| ------- | ------------------------------------------------------------------------------------------------------------ | --- |\n| _Theme_ | A collection of visual attributes assigned to the tokens in order to create a specific aesthetic             |     |\n| _Token_ | A role-based identifier that assigns a value to a theme. Tokens are universal and never change across themes |     |\n| _Role_  | The systematic usage(s) of a token. Roles cannot be changed between themes                                   |     |\n| _Value_ | The actual style (such as a hex code) assigned to a token                                                    |     |\n\n### Default theme\n\nCarbon provides four themes as shown in the\n[color usage](/guidelines/color/usage) page. When `@carbon/react` is downloaded\nand installed, the components are preset to use the default (White) theme.\n\nTo use the Gray 10, Gray 90, or Gray 100 theme as your default instead of White,\nconfigure the sass module using `with`.\n\n```scss\n@use '@carbon/react/scss/themes';\n@use '@carbon/react/scss/theme' with (\n  $theme: themes.$g100\n);\n```\n\n## Customizing a theme\n\nThe default theme acts as a starting point; from there designers and developers\ncan define how their own components and styles deviate from the default.\nAltering one, some, or all of the default token values will result in a new\ntheme. The developer configures these new values by configuring the sass module\nusing `with` which can replace the values of the default theme or add new custom\ntokens as well.\n\n```scss\n@use '@carbon/react/scss/theme' with (\n  $theme: (\n    background: #e2e2e2,\n    text-primary: #ffffff,\n    custom-token-01: #000000,\n  )\n);\n```\n\n## Tokens\n\nWith tokens, the code only needs to be changed in one place to see the effect\nsystem-wide. Tokens are used across all components and help keep global patterns\nand styles consistent.\n\nAll tokens come pre-baked into the Carbon component source code. Tokens are\ndenoted by the prefix `$` (e.g. `$layer-01`). Tokens can also be nested within\nother tokens. For example, `$interactive` calls the IBM Design Language color\npalette token `$blue-60` for its value in the default theme.\n\nThere are several token categories:\n\n- Color\n- Spacing\n- Typography\n- Global\n\nThe full list of tokens available can be found in the source of the\n`@carbon/themes` package per theme for\n[white](https://github.com/carbon-design-system/carbon/blob/main/packages/themes/src/white.js),\n[g10](https://github.com/carbon-design-system/carbon/blob/main/packages/themes/src/g10.js),\n[g90](https://github.com/carbon-design-system/carbon/blob/main/packages/themes/src/g90.js),\nand\n[g100](https://github.com/carbon-design-system/carbon/blob/main/packages/themes/src/g100.js).\n\n### Color\n\nEach theme is assigned universal color variables, which are determined by common\nroles and usage. This allows for uniform color application across themes while\nmaintaining full styling flexibility. For more information, see the\n[color](/guidelines/color/overview) page.\n\n### Spacing\n\nUse the spacing scale when building individual components. It includes small\nincrements needed to create appropriate spatial relationships for detail-level\ndesigns. For more information, see the [spacing](/guidelines/spacing/overview/)\npage.\n\n### Typography\n\nTypography has four categories of type styles (universal, productive, editorial,\nand additional) that can be customized through tokens. These tokens are used\nboth within components and across layouts. Type tokens are determined by their\nrole across the system. For more information, see the\n[typography](/guidelines/typography/overview/) page.\n\n### Global\n\nThe other categories are global and component-specific variables. These control\nmore general styling of components, such as layer usage or border width. The\nfull list of tokens available can be found in\n[the source of the `@carbon/themes` package](https://github.com/carbon-design-system/carbon/blob/main/packages/themes/src/white.js).\n\n## Theming applied\n\nThe following example demonstrates the relationship between the different\nthemes. Each theme shares the same variables and roles, with only the value\nchanging for each individual theme.\n\n<Row>\n<Column colLg={12}>\n\n![Default theme applied](images/themes-1.png)\n\n</Column>\n</Row>\n\n| Key | Token             | Role                | White theme value | Gray 100 theme value |\n| --- | ----------------- | ------------------- | ----------------- | -------------------- |\n| 1   | `$text-secondary` | Label color         | Gray 70           | Gray 30              |\n| 2   | `$text-primary`   | Primary text color  | Gray 100          | Gray 10              |\n| 3   | `$border-strong`  | Border bottom color | Gray 50           | Gray 60              |\n| 4   | `$icon-primary`   | Primary icon color  | Gray 100          | Gray 10              |\n| 5   | `$field-01`       | Field color         | Gray 10           | Gray 90              |\n| 6   | `$background`     | Page background     | White             | Gray 100             |\n\n## Resources\n\n<Column colMd={4} colLg={4}  noGutterSm>\n  <ResourceCard\n    subTitle=\"Carbon themes package\"\n    href=\"https://github.com/carbon-design-system/carbon/tree/v10/packages/themes\"\n    >\n\n<MdxIcon name=\"github\" />\n\n  </ResourceCard>\n</Column>\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/guidelines/themes/overview.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}